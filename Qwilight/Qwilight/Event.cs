// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Event.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Qwilight {

  /// <summary>Holder for reflection information generated from Event.proto</summary>
  public static partial class EventReflection {

    #region Descriptor
    /// <summary>File descriptor for Event.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtFdmVudC5wcm90byL+MAoFRXZlbnQSDgoGbWlsbGlzGAEgASgDEhAKCGF2",
            "YXRhcklEGAIgASgJEh8KB2V2ZW50SUQYAyABKA4yDi5FdmVudC5FdmVudElE",
            "EgwKBHRleHQYBCABKAkSDAoEZGF0YRgFIAMoDBIxCg9xd2lsaWdodENhbGxO",
            "ZXQYBiABKAsyFi5FdmVudC5Rd2lsaWdodENhbGxOZXRIABIxCg90d2lsaWdo",
            "dENhbGxOZXQYByABKAsyFi5FdmVudC5Ud2lsaWdodENhbGxOZXRIABIxCg9x",
            "d2lsaWdodElPSW5wdXQYCCABKAsyFi5FdmVudC5Rd2lsaWdodElPSW5wdXRI",
            "ABIxCg90d2lsaWdodElPSW5wdXQYCSABKAsyFi5FdmVudC5Ud2lsaWdodElP",
            "SW5wdXRIABIxCg9xd2lsaWdodElPSnVkZ2UYCiABKAsyFi5FdmVudC5Rd2ls",
            "aWdodElPSnVkZ2VIABIxCg90d2lsaWdodElPSnVkZ2UYCyABKAsyFi5FdmVu",
            "dC5Ud2lsaWdodElPSnVkZ2VIABJBChdxd2lsaWdodElPSnVkZ21lbnRNZXRl",
            "chgMIAEoCzIeLkV2ZW50LlF3aWxpZ2h0SU9KdWRnbWVudE1ldGVySAASQQoX",
            "dHdpbGlnaHRJT0p1ZGdtZW50TWV0ZXIYDSABKAsyHi5FdmVudC5Ud2lsaWdo",
            "dElPSnVkZ21lbnRNZXRlckgAEkMKGHF3aWxpZ2h0SU9Ob3RlVmlzaWJpbGl0",
            "eRgOIAEoCzIfLkV2ZW50LlF3aWxpZ2h0SU9Ob3RlVmlzaWJpbGl0eUgAEkMK",
            "GHR3aWxpZ2h0SU9Ob3RlVmlzaWJpbGl0eRgPIAEoCzIfLkV2ZW50LlR3aWxp",
            "Z2h0SU9Ob3RlVmlzaWJpbGl0eUgAEjsKFHF3aWxpZ2h0SU9NdWx0aXBsaWVy",
            "GBAgASgLMhsuRXZlbnQuUXdpbGlnaHRJT011bHRpcGxpZXJIABI7ChR0d2ls",
            "aWdodElPTXVsdGlwbGllchgRIAEoCzIbLkV2ZW50LlR3aWxpZ2h0SU9NdWx0",
            "aXBsaWVySAASRQoZcXdpbGlnaHRJT0F1ZGlvTXVsdGlwbGllchgSIAEoCzIg",
            "LkV2ZW50LlF3aWxpZ2h0SU9BdWRpb011bHRpcGxpZXJIABJFChl0d2lsaWdo",
            "dElPQXVkaW9NdWx0aXBsaWVyGBMgASgLMiAuRXZlbnQuVHdpbGlnaHRJT0F1",
            "ZGlvTXVsdGlwbGllckgAEjcKEnR3aWxpZ2h0QXVkaW9JbnB1dBgUIAEoCzIZ",
            "LkV2ZW50LlR3aWxpZ2h0QXVkaW9JbnB1dEgAEjMKEHF3aWxpZ2h0UG9zdEl0",
            "ZW0YFSABKAsyFy5FdmVudC5Rd2lsaWdodFBvc3RJdGVtSAASMwoQdHdpbGln",
            "aHRQb3N0SXRlbRgWIAEoCzIXLkV2ZW50LlR3aWxpZ2h0UG9zdEl0ZW1IABqp",
            "AwoPVHdpbGlnaHRDYWxsTmV0EhEKCWhhbmRsZXJJRBgBIAEoCRIwCgRkYXRh",
            "GAIgAygLMiIuRXZlbnQuVHdpbGlnaHRDYWxsTmV0LkNhbGxOZXRJdGVtGtAC",
            "CgtDYWxsTmV0SXRlbRIvCg9hdmF0YXJOZXRTdGF0dXMYASABKA4yFi5FdmVu",
            "dC5BdmF0YXJOZXRTdGF0dXMSEAoIYXZhdGFySUQYAiABKAkSEgoKYXZhdGFy",
            "TmFtZRgDIAEoCRINCgVzdGFuZBgEIAEoBRIMCgRiYW5kGAUgASgFEg0KBXBv",
            "aW50GAYgASgBEhEKCWhpdFBvaW50cxgHIAEoARIQCghpc0ZhaWxlZBgIIAEo",
            "CBISCgpsYXN0SnVkZ2VkGAkgASgFEhUKDWhpdFBvaW50c01vZGUYCiABKAUS",
            "FgoOdGFyZ2V0UG9zaXRpb24YCyABKAUSIwoIZHJhd2luZ3MYDCADKAsyES5F",
            "dmVudC5OZXREcmF3aW5nEjEKEGRyYXdpbmdDb21wb25lbnQYDSABKAsyFy5F",
            "dmVudC5EcmF3aW5nQ29tcG9uZW50Gp8KCg9Rd2lsaWdodENhbGxOZXQSDgoG",
            "c2l0ZUlEGAEgASgJEhEKCWhhbmRsZXJJRBgCIAEoCRIvCg9hdmF0YXJOZXRT",
            "dGF0dXMYAyABKA4yFi5FdmVudC5BdmF0YXJOZXRTdGF0dXMSDQoFc3RhbmQY",
            "BCABKAUSEwoLaGlnaGVzdEJhbmQYBSABKAUSDQoFcG9pbnQYBiABKAESEQoJ",
            "aGl0UG9pbnRzGAcgASgBEhAKCGlzRmFpbGVkGAggASgIEhIKCmxhc3RKdWRn",
            "ZWQYCSABKAUSIwoIZHJhd2luZ3MYCiADKAsyES5FdmVudC5OZXREcmF3aW5n",
            "EjEKEGRyYXdpbmdDb21wb25lbnQYCyABKAsyFy5FdmVudC5EcmF3aW5nQ29t",
            "cG9uZW50Eg0KBXRpdGxlGAwgASgJEg4KBmFydGlzdBgNIAEoCRINCgVnZW5y",
            "ZRgOIAEoCRINCgVsZXZlbBgPIAEoBRIRCglsZXZlbFRleHQYECABKAkSEwoL",
            "d2FudExldmVsSUQYESABKAkSEAoIYXV0b01vZGUYEiABKAUSFAoMbm90ZVNh",
            "bHRNb2RlGBMgASgFEhcKD2F1ZGlvTXVsdGlwbGllchgUIAEoARIVCg1mYWlu",
            "dE5vdGVNb2RlGBUgASgFEhQKDGp1ZGdtZW50TW9kZRgWIAEoBRIVCg1oaXRQ",
            "b2ludHNNb2RlGBcgASgFEhgKEG5vdGVNb2JpbGl0eU1vZGUYGCABKAUSFAoM",
            "bG9uZ05vdGVNb2RlGBkgASgFEhYKDmlucHV0RmF2b3JNb2RlGBogASgFEhYK",
            "Dm5vdGVNb2RpZnlNb2RlGBsgASgFEg8KB2JwbU1vZGUYHCABKAUSEAoId2F2",
            "ZU1vZGUYHSABKAUSEwoLc2V0Tm90ZU1vZGUYHiABKAUSIwobbG93ZXN0SnVk",
            "Z21lbnRDb25kaXRpb25Nb2RlGB8gASgFEhIKCnRvdGFsTm90ZXMYICABKAUS",
            "FQoNanVkZ21lbnRTdGFnZRghIAEoARIWCg5oaXRQb2ludHNWYWx1ZRgiIAEo",
            "ARIZChFoaWdoZXN0SW5wdXRDb3VudBgjIAEoBRIOCgZsZW5ndGgYJCABKAES",
            "CwoDYnBtGCUgASgBEhIKCm11bHRpcGxpZXIYJiABKAESEQoJaW5wdXRNb2Rl",
            "GCcgASgFEhgKEGhpZ2hlc3RKdWRnbWVudDAYKCABKAESFwoPaGlnaGVySnVk",
            "Z21lbnQwGCkgASgBEhUKDWhpZ2hKdWRnbWVudDAYKiABKAESFAoMbG93SnVk",
            "Z21lbnQwGCsgASgBEhYKDmxvd2VySnVkZ21lbnQwGCwgASgBEhcKD2xvd2Vz",
            "dEp1ZGdtZW50MBgtIAEoARIYChBoaWdoZXN0SnVkZ21lbnQxGC4gASgBEhcK",
            "D2hpZ2hlckp1ZGdtZW50MRgvIAEoARIVCg1oaWdoSnVkZ21lbnQxGDAgASgB",
            "EhQKDGxvd0p1ZGdtZW50MRgxIAEoARIWCg5sb3dlckp1ZGdtZW50MRgyIAEo",
            "ARIXCg9sb3dlc3RKdWRnbWVudDEYMyABKAESFwoPaGlnaGVzdEp1ZGdtZW50",
            "GDQgASgFEhYKDmhpZ2hlckp1ZGdtZW50GDUgASgFEhQKDGhpZ2hKdWRnbWVu",
            "dBg2IAEoBRITCgtsb3dKdWRnbWVudBg3IAEoBRIVCg1sb3dlckp1ZGdtZW50",
            "GDggASgFEhYKDmxvd2VzdEp1ZGdtZW50GDkgASgFGr4BCgpOZXREcmF3aW5n",
            "EjEKDmRyYXdpbmdWYXJpZXR5GAEgASgOMhkuRXZlbnQuTmV0RHJhd2luZy5W",
            "YXJpZXR5Eg0KBXBhcmFtGAIgASgNEhEKCXBvc2l0aW9uMBgDIAEoARIRCglw",
            "b3NpdGlvbjEYBCABKAESDgoGbGVuZ3RoGAUgASgBEg4KBmhlaWdodBgGIAEo",
            "ASIoCgdWYXJpZXR5EggKBE5vdGUQABIICgRNYWluEAESCQoFTWV0ZXIQAhpH",
            "ChBEcmF3aW5nQ29tcG9uZW50EhUKDXAyQnVpbHRMZW5ndGgYASABKAISHAoU",
            "anVkZ21lbnRNYWluUG9zaXRpb24YAiABKAIaVQoPUXdpbGlnaHRJT0lucHV0",
            "EhEKCWF2YXRhcklEcxgBIAMoCRIRCgloYW5kbGVySUQYAiABKAkSDQoFaW5w",
            "dXQYAyABKAUSDQoFcG93ZXIYBCABKAUaQgoPVHdpbGlnaHRJT0lucHV0EhEK",
            "CWhhbmRsZXJJRBgBIAEoCRINCgVpbnB1dBgCIAEoBRINCgVwb3dlchgDIAEo",
            "BRpXCg9Rd2lsaWdodElPSnVkZ2USEQoJYXZhdGFySURzGAEgAygJEhEKCWhh",
            "bmRsZXJJRBgCIAEoCRIOCgZub3RlSUQYAyABKAUSDgoGanVkZ2VkGAQgASgF",
            "GkQKD1R3aWxpZ2h0SU9KdWRnZRIRCgloYW5kbGVySUQYASABKAkSDgoGbm90",
            "ZUlEGAIgASgFEg4KBmp1ZGdlZBgDIAEoBRp1ChdRd2lsaWdodElPSnVkZ21l",
            "bnRNZXRlchIRCglhdmF0YXJJRHMYASADKAkSEQoJaGFuZGxlcklEGAIgASgJ",
            "Eg0KBWlucHV0GAMgASgFEhUKDWp1ZGdtZW50TWV0ZXIYBCABKAESDgoGYXNz",
            "aXN0GAUgASgFGmIKF1R3aWxpZ2h0SU9KdWRnbWVudE1ldGVyEhEKCWhhbmRs",
            "ZXJJRBgBIAEoCRINCgVpbnB1dBgCIAEoBRIVCg1qdWRnbWVudE1ldGVyGAMg",
            "ASgBEg4KBmFzc2lzdBgEIAEoBRqEAQoYUXdpbGlnaHRJT05vdGVWaXNpYmls",
            "aXR5EhEKCWF2YXRhcklEcxgBIAMoCRIRCgloYW5kbGVySUQYAiABKAkSDgoG",
            "bm90ZUlEGAMgASgFEhsKE3NldFZhbGlkSnVkZ2VkTm90ZXMYBCABKAgSFQoN",
            "c2V0Tm90ZUZhaWxlZBgFIAEoCBpxChhUd2lsaWdodElPTm90ZVZpc2liaWxp",
            "dHkSEQoJaGFuZGxlcklEGAEgASgJEg4KBm5vdGVJRBgCIAEoBRIbChNzZXRW",
            "YWxpZEp1ZGdlZE5vdGVzGAMgASgIEhUKDXNldE5vdGVGYWlsZWQYBCABKAga",
            "UAoUUXdpbGlnaHRJT011bHRpcGxpZXISEQoJYXZhdGFySURzGAEgAygJEhEK",
            "CWhhbmRsZXJJRBgCIAEoCRISCgptdWx0aXBsaWVyGAMgASgBGj0KFFR3aWxp",
            "Z2h0SU9NdWx0aXBsaWVyEhEKCWhhbmRsZXJJRBgBIAEoCRISCgptdWx0aXBs",
            "aWVyGAIgASgBGloKGVF3aWxpZ2h0SU9BdWRpb011bHRpcGxpZXISEQoJYXZh",
            "dGFySURzGAEgAygJEhEKCWhhbmRsZXJJRBgCIAEoCRIXCg9hdWRpb011bHRp",
            "cGxpZXIYAyABKAEaRwoZVHdpbGlnaHRJT0F1ZGlvTXVsdGlwbGllchIRCglo",
            "YW5kbGVySUQYASABKAkSFwoPYXVkaW9NdWx0aXBsaWVyGAIgASgBGjYKElR3",
            "aWxpZ2h0QXVkaW9JbnB1dBIOCgZzaXRlSUQYASABKAkSEAoIYXZhdGFySUQY",
            "AiABKAkahgEKEFF3aWxpZ2h0UG9zdEl0ZW0SDgoGc2l0ZUlEGAEgASgJEhEK",
            "CWhhbmRsZXJJRBgCIAEoCRISCgpwb3N0ZWRJdGVtGAMgASgFEhIKCmlzUG9z",
            "aXRpdmUYBCABKAUSEgoKbG93ZXN0V2FpdBgFIAEoARITCgtoaWdoZXN0V2Fp",
            "dBgGIAEoARpbChBUd2lsaWdodFBvc3RJdGVtEhEKCWhhbmRsZXJJRBgBIAEo",
            "CRISCgpwb3N0ZWRJdGVtGAIgASgFEhIKCmF2YXRhck5hbWUYAyABKAkSDAoE",
            "d2FpdBgEIAEoASI1Cg9BdmF0YXJOZXRTdGF0dXMSCwoHRGVmYXVsdBAAEgkK",
            "BUNsZWFyEAESCgoGRmFpbGVkEAIiqg0KB0V2ZW50SUQSCwoHU0lHTl9JThAA",
            "Eg8KC05PVF9TSUdOX0lOEAESCwoHV0FSTklORxACEg0KCVNJVEVfWUVMTBAD",
            "Eg8KC0NBTExfQlVORExFEAQSEgoOU0FWRV9BU19CVU5ETEUQBRIRCg1TQVZJ",
            "TkdfQlVORExFEAYSDwoLV0lQRV9CVU5ETEUQBxIOCgpTRVRfQlVORExFEAgS",
            "DwoLQ0FMTF9VQlVOVFUQCRIUChBDQUxMX1NJVEVfQVZBVEFSEAoSCwoHQ09N",
            "TUVOVBALEhEKDVNFVF9TSVRVQVRJT04QDBINCglORVdfVElUTEUQDRIWChJT",
            "VE9QX1NBVklOR19CVU5ETEUQDhIQCgxTQVZFRF9CVU5ETEUQDxIPCgtTQVZF",
            "X0JVTkRMRRAQEg4KCkVOVEVSX1NJVEUQERINCglRVUlUX1NJVEUQEhIPCgtX",
            "SVBFX1VCVU5UVRATEgwKCE5FV19TSVRFEBQSDgoKTkVXX1VCVU5UVRAVEhAK",
            "DEVYSUxFX0FWQVRBUhAWEhMKD05FV19TSUxFTlRfU0lURRAXEg0KCUVTVEFC",
            "TElTSBAYEhIKDkNBTExfQ09ORklHVVJFEBkSEQoNU0VUX0NPTkZJR1VSRRAa",
            "Eg8KC05PVElGWV9JTkZPEBsSDAoITEVWWV9ORVQQHBIMCghDT01QSUxFRBAd",
            "EgwKCENBTExfTkVUEB4SFgoSU0VUX01PREVfQ09NUE9ORU5UEB8SHAoYU0VU",
            "X0ZBVk9SX01PREVfQ09NUE9ORU5UECASGQoVU0VUX1ZBTElEX0hVTlRFUl9N",
            "T0RFECESGgoWQ0FMTF9ORVRfU0lURV9DT01NRU5UUxAiEhEKDVNFVF9OT1RF",
            "X0ZJTEUQIxIRCg1TRVRfU0lURV9OQU1FECQSEQoNU0VUX1NJVEVfSEFORBAl",
            "EgwKCFFVSVRfTkVUECYSFAoQU0FWSU5HX0FTX0JVTkRMRRAnEhMKD1NBVkVE",
            "X0FTX0JVTkRMRRAoEhkKFVNUT1BfU0FWSU5HX0FTX0JVTkRMRRApEhUKEVNB",
            "VkVfREVGQVVMVF9OT1RFECoSDQoJUE9TVF9GSUxFECsSEwoPU0FWRV9ERUZB",
            "VUxUX1VJECwSHgoaU0VUX0ZBVk9SX0FVRElPX01VTFRJUExJRVIQLRIRCg1D",
            "QUxMX1NJVEVfTkVUEC4SDgoKTk9USUZZX1lFUxAvEgsKB0NBTExfSU8QMBIV",
            "ChFDQUxMX0lPX0NPTVBPTkVOVBAxEg8KC0NPTVBJTEVEX0lPEDISCwoHTEVW",
            "WV9JTxAzEgwKCElPX0lOUFVUEDQSDAoISU9fSlVER0UQNRIWChJJT19OT1RF",
            "X1ZJU0lCSUxJVFkQNhIVChFJT19KVURHTUVOVF9NRVRFUhA4EhEKDUlPX01V",
            "TFRJUExJRVIQORIXChNJT19BVURJT19NVUxUSVBMSUVSEDoSDAoISU9fUEFV",
            "U0UQOxILCgdJT19RVUlUEDwSCgoGSU9fTk9UED0SDwoLQVVESU9fSU5QVVQQ",
            "PhIcChhDQUxMX1NJVEVfTU9ERV9DT01QT05FTlQQPxIOCgpDT01NRU5UQVJZ",
            "EEESDQoJV1dXX0xFVkVMEEISEAoMQVZBVEFSX1RJVExFEEMSHQoZSU5WQUxJ",
            "REFURV9BVkFUQVJfRFJBV0lORxBEEhsKF0lOVkFMSURBVEVfQVZBVEFSX1RJ",
            "VExFEEUSDAoITEVWRUxfVVAQRhIXChNTRVRfRkFWT1JfTk9URV9GSUxFEEcS",
            "EgoOR0VUX1NJVEVfWUVMTFMQSBIQCgxTRVRfTEFOR1VBR0UQSRIRCg1WQUxW",
            "RV9DT01NRU5UEEoSDgoKQUJJTElUWV9VUBBLEgkKBUNMT1NFEEwSFAoQVU5B",
            "VkFJTEFCTEVfREFURRBNEg8KC0FWQVRBUl9FREdFEE4SGgoWSU5WQUxJREFU",
            "RV9BVkFUQVJfRURHRRBPEhkKFUZBSUxFRF9WQUxJREFURV9UT1RFTRBQEhQK",
            "EE1PRElGWV9TSVRFX1lFTEwQURISCg5XSVBFX1NJVEVfWUVMTBBSEhoKFkFM",
            "UkVBRFlfTE9BRElOR19CVU5ETEUQUxINCglTRVRfRkFWT1IQVBIWChJTRVRf",
            "QVVUT19TSVRFX0hBTkQQVRIUChBTRVRfQVZBVEFSX0dST1VQEFYSDQoJUE9T",
            "VF9JVEVNEFcSFgoSU0VUX1ZBTElEX05FVF9NT0RFEFgSHgoaU0VUX0FMTE9X",
            "RURfUE9TVEFCTEVfSVRFTVMQWUIKCghmYXN0VGV4dEIjCgpuZXQudGFlaHVp",
            "QgpFdmVudENsYXNzqgIIUXdpbGlnaHRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event), global::Qwilight.Event.Parser, new[]{ "Millis", "AvatarID", "EventID", "Text", "Data", "QwilightCallNet", "TwilightCallNet", "QwilightIOInput", "TwilightIOInput", "QwilightIOJudge", "TwilightIOJudge", "QwilightIOJudgmentMeter", "TwilightIOJudgmentMeter", "QwilightIONoteVisibility", "TwilightIONoteVisibility", "QwilightIOMultiplier", "TwilightIOMultiplier", "QwilightIOAudioMultiplier", "TwilightIOAudioMultiplier", "TwilightAudioInput", "QwilightPostItem", "TwilightPostItem" }, new[]{ "FastText" }, new[]{ typeof(global::Qwilight.Event.Types.AvatarNetStatus), typeof(global::Qwilight.Event.Types.EventID) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event.Types.TwilightCallNet), global::Qwilight.Event.Types.TwilightCallNet.Parser, new[]{ "HandlerID", "Data" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event.Types.TwilightCallNet.Types.CallNetItem), global::Qwilight.Event.Types.TwilightCallNet.Types.CallNetItem.Parser, new[]{ "AvatarNetStatus", "AvatarID", "AvatarName", "Stand", "Band", "Point", "HitPoints", "IsFailed", "LastJudged", "HitPointsMode", "TargetPosition", "Drawings", "DrawingComponent" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event.Types.QwilightCallNet), global::Qwilight.Event.Types.QwilightCallNet.Parser, new[]{ "SiteID", "HandlerID", "AvatarNetStatus", "Stand", "HighestBand", "Point", "HitPoints", "IsFailed", "LastJudged", "Drawings", "DrawingComponent", "Title", "Artist", "Genre", "Level", "LevelText", "WantLevelID", "AutoMode", "NoteSaltMode", "AudioMultiplier", "FaintNoteMode", "JudgmentMode", "HitPointsMode", "NoteMobilityMode", "LongNoteMode", "InputFavorMode", "NoteModifyMode", "BpmMode", "WaveMode", "SetNoteMode", "LowestJudgmentConditionMode", "TotalNotes", "JudgmentStage", "HitPointsValue", "HighestInputCount", "Length", "Bpm", "Multiplier", "InputMode", "HighestJudgment0", "HigherJudgment0", "HighJudgment0", "LowJudgment0", "LowerJudgment0", "LowestJudgment0", "HighestJudgment1", "HigherJudgment1", "HighJudgment1", "LowJudgment1", "LowerJudgment1", "LowestJudgment1", "HighestJudgment", "HigherJudgment", "HighJudgment", "LowJudgment", "LowerJudgment", "LowestJudgment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event.Types.NetDrawing), global::Qwilight.Event.Types.NetDrawing.Parser, new[]{ "DrawingVariety", "Param", "Position0", "Position1", "Length", "Height" }, null, new[]{ typeof(global::Qwilight.Event.Types.NetDrawing.Types.Variety) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event.Types.DrawingComponent), global::Qwilight.Event.Types.DrawingComponent.Parser, new[]{ "P2BuiltLength", "JudgmentMainPosition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event.Types.QwilightIOInput), global::Qwilight.Event.Types.QwilightIOInput.Parser, new[]{ "AvatarIDs", "HandlerID", "Input", "Power" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event.Types.TwilightIOInput), global::Qwilight.Event.Types.TwilightIOInput.Parser, new[]{ "HandlerID", "Input", "Power" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event.Types.QwilightIOJudge), global::Qwilight.Event.Types.QwilightIOJudge.Parser, new[]{ "AvatarIDs", "HandlerID", "NoteID", "Judged" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event.Types.TwilightIOJudge), global::Qwilight.Event.Types.TwilightIOJudge.Parser, new[]{ "HandlerID", "NoteID", "Judged" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event.Types.QwilightIOJudgmentMeter), global::Qwilight.Event.Types.QwilightIOJudgmentMeter.Parser, new[]{ "AvatarIDs", "HandlerID", "Input", "JudgmentMeter", "Assist" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event.Types.TwilightIOJudgmentMeter), global::Qwilight.Event.Types.TwilightIOJudgmentMeter.Parser, new[]{ "HandlerID", "Input", "JudgmentMeter", "Assist" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event.Types.QwilightIONoteVisibility), global::Qwilight.Event.Types.QwilightIONoteVisibility.Parser, new[]{ "AvatarIDs", "HandlerID", "NoteID", "SetValidJudgedNotes", "SetNoteFailed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event.Types.TwilightIONoteVisibility), global::Qwilight.Event.Types.TwilightIONoteVisibility.Parser, new[]{ "HandlerID", "NoteID", "SetValidJudgedNotes", "SetNoteFailed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event.Types.QwilightIOMultiplier), global::Qwilight.Event.Types.QwilightIOMultiplier.Parser, new[]{ "AvatarIDs", "HandlerID", "Multiplier" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event.Types.TwilightIOMultiplier), global::Qwilight.Event.Types.TwilightIOMultiplier.Parser, new[]{ "HandlerID", "Multiplier" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event.Types.QwilightIOAudioMultiplier), global::Qwilight.Event.Types.QwilightIOAudioMultiplier.Parser, new[]{ "AvatarIDs", "HandlerID", "AudioMultiplier" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event.Types.TwilightIOAudioMultiplier), global::Qwilight.Event.Types.TwilightIOAudioMultiplier.Parser, new[]{ "HandlerID", "AudioMultiplier" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event.Types.TwilightAudioInput), global::Qwilight.Event.Types.TwilightAudioInput.Parser, new[]{ "SiteID", "AvatarID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event.Types.QwilightPostItem), global::Qwilight.Event.Types.QwilightPostItem.Parser, new[]{ "SiteID", "HandlerID", "PostedItem", "IsPositive", "LowestWait", "HighestWait" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Qwilight.Event.Types.TwilightPostItem), global::Qwilight.Event.Types.TwilightPostItem.Parser, new[]{ "HandlerID", "PostedItem", "AvatarName", "Wait" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Event : pb::IMessage<Event>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Qwilight.EventReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Event(Event other) : this() {
      millis_ = other.millis_;
      avatarID_ = other.avatarID_;
      eventID_ = other.eventID_;
      text_ = other.text_;
      data_ = other.data_.Clone();
      switch (other.FastTextCase) {
        case FastTextOneofCase.QwilightCallNet:
          QwilightCallNet = other.QwilightCallNet.Clone();
          break;
        case FastTextOneofCase.TwilightCallNet:
          TwilightCallNet = other.TwilightCallNet.Clone();
          break;
        case FastTextOneofCase.QwilightIOInput:
          QwilightIOInput = other.QwilightIOInput.Clone();
          break;
        case FastTextOneofCase.TwilightIOInput:
          TwilightIOInput = other.TwilightIOInput.Clone();
          break;
        case FastTextOneofCase.QwilightIOJudge:
          QwilightIOJudge = other.QwilightIOJudge.Clone();
          break;
        case FastTextOneofCase.TwilightIOJudge:
          TwilightIOJudge = other.TwilightIOJudge.Clone();
          break;
        case FastTextOneofCase.QwilightIOJudgmentMeter:
          QwilightIOJudgmentMeter = other.QwilightIOJudgmentMeter.Clone();
          break;
        case FastTextOneofCase.TwilightIOJudgmentMeter:
          TwilightIOJudgmentMeter = other.TwilightIOJudgmentMeter.Clone();
          break;
        case FastTextOneofCase.QwilightIONoteVisibility:
          QwilightIONoteVisibility = other.QwilightIONoteVisibility.Clone();
          break;
        case FastTextOneofCase.TwilightIONoteVisibility:
          TwilightIONoteVisibility = other.TwilightIONoteVisibility.Clone();
          break;
        case FastTextOneofCase.QwilightIOMultiplier:
          QwilightIOMultiplier = other.QwilightIOMultiplier.Clone();
          break;
        case FastTextOneofCase.TwilightIOMultiplier:
          TwilightIOMultiplier = other.TwilightIOMultiplier.Clone();
          break;
        case FastTextOneofCase.QwilightIOAudioMultiplier:
          QwilightIOAudioMultiplier = other.QwilightIOAudioMultiplier.Clone();
          break;
        case FastTextOneofCase.TwilightIOAudioMultiplier:
          TwilightIOAudioMultiplier = other.TwilightIOAudioMultiplier.Clone();
          break;
        case FastTextOneofCase.TwilightAudioInput:
          TwilightAudioInput = other.TwilightAudioInput.Clone();
          break;
        case FastTextOneofCase.QwilightPostItem:
          QwilightPostItem = other.QwilightPostItem.Clone();
          break;
        case FastTextOneofCase.TwilightPostItem:
          TwilightPostItem = other.TwilightPostItem.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "millis" field.</summary>
    public const int MillisFieldNumber = 1;
    private long millis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Millis {
      get { return millis_; }
      set {
        millis_ = value;
      }
    }

    /// <summary>Field number for the "avatarID" field.</summary>
    public const int AvatarIDFieldNumber = 2;
    private string avatarID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AvatarID {
      get { return avatarID_; }
      set {
        avatarID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "eventID" field.</summary>
    public const int EventIDFieldNumber = 3;
    private global::Qwilight.Event.Types.EventID eventID_ = global::Qwilight.Event.Types.EventID.SignIn;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Qwilight.Event.Types.EventID EventID {
      get { return eventID_; }
      set {
        eventID_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 4;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 5;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_data_codec
        = pb::FieldCodec.ForBytes(42);
    private readonly pbc::RepeatedField<pb::ByteString> data_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> Data {
      get { return data_; }
    }

    /// <summary>Field number for the "qwilightCallNet" field.</summary>
    public const int QwilightCallNetFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Qwilight.Event.Types.QwilightCallNet QwilightCallNet {
      get { return fastTextCase_ == FastTextOneofCase.QwilightCallNet ? (global::Qwilight.Event.Types.QwilightCallNet) fastText_ : null; }
      set {
        fastText_ = value;
        fastTextCase_ = value == null ? FastTextOneofCase.None : FastTextOneofCase.QwilightCallNet;
      }
    }

    /// <summary>Field number for the "twilightCallNet" field.</summary>
    public const int TwilightCallNetFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Qwilight.Event.Types.TwilightCallNet TwilightCallNet {
      get { return fastTextCase_ == FastTextOneofCase.TwilightCallNet ? (global::Qwilight.Event.Types.TwilightCallNet) fastText_ : null; }
      set {
        fastText_ = value;
        fastTextCase_ = value == null ? FastTextOneofCase.None : FastTextOneofCase.TwilightCallNet;
      }
    }

    /// <summary>Field number for the "qwilightIOInput" field.</summary>
    public const int QwilightIOInputFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Qwilight.Event.Types.QwilightIOInput QwilightIOInput {
      get { return fastTextCase_ == FastTextOneofCase.QwilightIOInput ? (global::Qwilight.Event.Types.QwilightIOInput) fastText_ : null; }
      set {
        fastText_ = value;
        fastTextCase_ = value == null ? FastTextOneofCase.None : FastTextOneofCase.QwilightIOInput;
      }
    }

    /// <summary>Field number for the "twilightIOInput" field.</summary>
    public const int TwilightIOInputFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Qwilight.Event.Types.TwilightIOInput TwilightIOInput {
      get { return fastTextCase_ == FastTextOneofCase.TwilightIOInput ? (global::Qwilight.Event.Types.TwilightIOInput) fastText_ : null; }
      set {
        fastText_ = value;
        fastTextCase_ = value == null ? FastTextOneofCase.None : FastTextOneofCase.TwilightIOInput;
      }
    }

    /// <summary>Field number for the "qwilightIOJudge" field.</summary>
    public const int QwilightIOJudgeFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Qwilight.Event.Types.QwilightIOJudge QwilightIOJudge {
      get { return fastTextCase_ == FastTextOneofCase.QwilightIOJudge ? (global::Qwilight.Event.Types.QwilightIOJudge) fastText_ : null; }
      set {
        fastText_ = value;
        fastTextCase_ = value == null ? FastTextOneofCase.None : FastTextOneofCase.QwilightIOJudge;
      }
    }

    /// <summary>Field number for the "twilightIOJudge" field.</summary>
    public const int TwilightIOJudgeFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Qwilight.Event.Types.TwilightIOJudge TwilightIOJudge {
      get { return fastTextCase_ == FastTextOneofCase.TwilightIOJudge ? (global::Qwilight.Event.Types.TwilightIOJudge) fastText_ : null; }
      set {
        fastText_ = value;
        fastTextCase_ = value == null ? FastTextOneofCase.None : FastTextOneofCase.TwilightIOJudge;
      }
    }

    /// <summary>Field number for the "qwilightIOJudgmentMeter" field.</summary>
    public const int QwilightIOJudgmentMeterFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Qwilight.Event.Types.QwilightIOJudgmentMeter QwilightIOJudgmentMeter {
      get { return fastTextCase_ == FastTextOneofCase.QwilightIOJudgmentMeter ? (global::Qwilight.Event.Types.QwilightIOJudgmentMeter) fastText_ : null; }
      set {
        fastText_ = value;
        fastTextCase_ = value == null ? FastTextOneofCase.None : FastTextOneofCase.QwilightIOJudgmentMeter;
      }
    }

    /// <summary>Field number for the "twilightIOJudgmentMeter" field.</summary>
    public const int TwilightIOJudgmentMeterFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Qwilight.Event.Types.TwilightIOJudgmentMeter TwilightIOJudgmentMeter {
      get { return fastTextCase_ == FastTextOneofCase.TwilightIOJudgmentMeter ? (global::Qwilight.Event.Types.TwilightIOJudgmentMeter) fastText_ : null; }
      set {
        fastText_ = value;
        fastTextCase_ = value == null ? FastTextOneofCase.None : FastTextOneofCase.TwilightIOJudgmentMeter;
      }
    }

    /// <summary>Field number for the "qwilightIONoteVisibility" field.</summary>
    public const int QwilightIONoteVisibilityFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Qwilight.Event.Types.QwilightIONoteVisibility QwilightIONoteVisibility {
      get { return fastTextCase_ == FastTextOneofCase.QwilightIONoteVisibility ? (global::Qwilight.Event.Types.QwilightIONoteVisibility) fastText_ : null; }
      set {
        fastText_ = value;
        fastTextCase_ = value == null ? FastTextOneofCase.None : FastTextOneofCase.QwilightIONoteVisibility;
      }
    }

    /// <summary>Field number for the "twilightIONoteVisibility" field.</summary>
    public const int TwilightIONoteVisibilityFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Qwilight.Event.Types.TwilightIONoteVisibility TwilightIONoteVisibility {
      get { return fastTextCase_ == FastTextOneofCase.TwilightIONoteVisibility ? (global::Qwilight.Event.Types.TwilightIONoteVisibility) fastText_ : null; }
      set {
        fastText_ = value;
        fastTextCase_ = value == null ? FastTextOneofCase.None : FastTextOneofCase.TwilightIONoteVisibility;
      }
    }

    /// <summary>Field number for the "qwilightIOMultiplier" field.</summary>
    public const int QwilightIOMultiplierFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Qwilight.Event.Types.QwilightIOMultiplier QwilightIOMultiplier {
      get { return fastTextCase_ == FastTextOneofCase.QwilightIOMultiplier ? (global::Qwilight.Event.Types.QwilightIOMultiplier) fastText_ : null; }
      set {
        fastText_ = value;
        fastTextCase_ = value == null ? FastTextOneofCase.None : FastTextOneofCase.QwilightIOMultiplier;
      }
    }

    /// <summary>Field number for the "twilightIOMultiplier" field.</summary>
    public const int TwilightIOMultiplierFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Qwilight.Event.Types.TwilightIOMultiplier TwilightIOMultiplier {
      get { return fastTextCase_ == FastTextOneofCase.TwilightIOMultiplier ? (global::Qwilight.Event.Types.TwilightIOMultiplier) fastText_ : null; }
      set {
        fastText_ = value;
        fastTextCase_ = value == null ? FastTextOneofCase.None : FastTextOneofCase.TwilightIOMultiplier;
      }
    }

    /// <summary>Field number for the "qwilightIOAudioMultiplier" field.</summary>
    public const int QwilightIOAudioMultiplierFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Qwilight.Event.Types.QwilightIOAudioMultiplier QwilightIOAudioMultiplier {
      get { return fastTextCase_ == FastTextOneofCase.QwilightIOAudioMultiplier ? (global::Qwilight.Event.Types.QwilightIOAudioMultiplier) fastText_ : null; }
      set {
        fastText_ = value;
        fastTextCase_ = value == null ? FastTextOneofCase.None : FastTextOneofCase.QwilightIOAudioMultiplier;
      }
    }

    /// <summary>Field number for the "twilightIOAudioMultiplier" field.</summary>
    public const int TwilightIOAudioMultiplierFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Qwilight.Event.Types.TwilightIOAudioMultiplier TwilightIOAudioMultiplier {
      get { return fastTextCase_ == FastTextOneofCase.TwilightIOAudioMultiplier ? (global::Qwilight.Event.Types.TwilightIOAudioMultiplier) fastText_ : null; }
      set {
        fastText_ = value;
        fastTextCase_ = value == null ? FastTextOneofCase.None : FastTextOneofCase.TwilightIOAudioMultiplier;
      }
    }

    /// <summary>Field number for the "twilightAudioInput" field.</summary>
    public const int TwilightAudioInputFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Qwilight.Event.Types.TwilightAudioInput TwilightAudioInput {
      get { return fastTextCase_ == FastTextOneofCase.TwilightAudioInput ? (global::Qwilight.Event.Types.TwilightAudioInput) fastText_ : null; }
      set {
        fastText_ = value;
        fastTextCase_ = value == null ? FastTextOneofCase.None : FastTextOneofCase.TwilightAudioInput;
      }
    }

    /// <summary>Field number for the "qwilightPostItem" field.</summary>
    public const int QwilightPostItemFieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Qwilight.Event.Types.QwilightPostItem QwilightPostItem {
      get { return fastTextCase_ == FastTextOneofCase.QwilightPostItem ? (global::Qwilight.Event.Types.QwilightPostItem) fastText_ : null; }
      set {
        fastText_ = value;
        fastTextCase_ = value == null ? FastTextOneofCase.None : FastTextOneofCase.QwilightPostItem;
      }
    }

    /// <summary>Field number for the "twilightPostItem" field.</summary>
    public const int TwilightPostItemFieldNumber = 22;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Qwilight.Event.Types.TwilightPostItem TwilightPostItem {
      get { return fastTextCase_ == FastTextOneofCase.TwilightPostItem ? (global::Qwilight.Event.Types.TwilightPostItem) fastText_ : null; }
      set {
        fastText_ = value;
        fastTextCase_ = value == null ? FastTextOneofCase.None : FastTextOneofCase.TwilightPostItem;
      }
    }

    private object fastText_;
    /// <summary>Enum of possible cases for the "fastText" oneof.</summary>
    public enum FastTextOneofCase {
      None = 0,
      QwilightCallNet = 6,
      TwilightCallNet = 7,
      QwilightIOInput = 8,
      TwilightIOInput = 9,
      QwilightIOJudge = 10,
      TwilightIOJudge = 11,
      QwilightIOJudgmentMeter = 12,
      TwilightIOJudgmentMeter = 13,
      QwilightIONoteVisibility = 14,
      TwilightIONoteVisibility = 15,
      QwilightIOMultiplier = 16,
      TwilightIOMultiplier = 17,
      QwilightIOAudioMultiplier = 18,
      TwilightIOAudioMultiplier = 19,
      TwilightAudioInput = 20,
      QwilightPostItem = 21,
      TwilightPostItem = 22,
    }
    private FastTextOneofCase fastTextCase_ = FastTextOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FastTextOneofCase FastTextCase {
      get { return fastTextCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFastText() {
      fastTextCase_ = FastTextOneofCase.None;
      fastText_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Millis != other.Millis) return false;
      if (AvatarID != other.AvatarID) return false;
      if (EventID != other.EventID) return false;
      if (Text != other.Text) return false;
      if(!data_.Equals(other.data_)) return false;
      if (!object.Equals(QwilightCallNet, other.QwilightCallNet)) return false;
      if (!object.Equals(TwilightCallNet, other.TwilightCallNet)) return false;
      if (!object.Equals(QwilightIOInput, other.QwilightIOInput)) return false;
      if (!object.Equals(TwilightIOInput, other.TwilightIOInput)) return false;
      if (!object.Equals(QwilightIOJudge, other.QwilightIOJudge)) return false;
      if (!object.Equals(TwilightIOJudge, other.TwilightIOJudge)) return false;
      if (!object.Equals(QwilightIOJudgmentMeter, other.QwilightIOJudgmentMeter)) return false;
      if (!object.Equals(TwilightIOJudgmentMeter, other.TwilightIOJudgmentMeter)) return false;
      if (!object.Equals(QwilightIONoteVisibility, other.QwilightIONoteVisibility)) return false;
      if (!object.Equals(TwilightIONoteVisibility, other.TwilightIONoteVisibility)) return false;
      if (!object.Equals(QwilightIOMultiplier, other.QwilightIOMultiplier)) return false;
      if (!object.Equals(TwilightIOMultiplier, other.TwilightIOMultiplier)) return false;
      if (!object.Equals(QwilightIOAudioMultiplier, other.QwilightIOAudioMultiplier)) return false;
      if (!object.Equals(TwilightIOAudioMultiplier, other.TwilightIOAudioMultiplier)) return false;
      if (!object.Equals(TwilightAudioInput, other.TwilightAudioInput)) return false;
      if (!object.Equals(QwilightPostItem, other.QwilightPostItem)) return false;
      if (!object.Equals(TwilightPostItem, other.TwilightPostItem)) return false;
      if (FastTextCase != other.FastTextCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Millis != 0L) hash ^= Millis.GetHashCode();
      if (AvatarID.Length != 0) hash ^= AvatarID.GetHashCode();
      if (EventID != global::Qwilight.Event.Types.EventID.SignIn) hash ^= EventID.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      hash ^= data_.GetHashCode();
      if (fastTextCase_ == FastTextOneofCase.QwilightCallNet) hash ^= QwilightCallNet.GetHashCode();
      if (fastTextCase_ == FastTextOneofCase.TwilightCallNet) hash ^= TwilightCallNet.GetHashCode();
      if (fastTextCase_ == FastTextOneofCase.QwilightIOInput) hash ^= QwilightIOInput.GetHashCode();
      if (fastTextCase_ == FastTextOneofCase.TwilightIOInput) hash ^= TwilightIOInput.GetHashCode();
      if (fastTextCase_ == FastTextOneofCase.QwilightIOJudge) hash ^= QwilightIOJudge.GetHashCode();
      if (fastTextCase_ == FastTextOneofCase.TwilightIOJudge) hash ^= TwilightIOJudge.GetHashCode();
      if (fastTextCase_ == FastTextOneofCase.QwilightIOJudgmentMeter) hash ^= QwilightIOJudgmentMeter.GetHashCode();
      if (fastTextCase_ == FastTextOneofCase.TwilightIOJudgmentMeter) hash ^= TwilightIOJudgmentMeter.GetHashCode();
      if (fastTextCase_ == FastTextOneofCase.QwilightIONoteVisibility) hash ^= QwilightIONoteVisibility.GetHashCode();
      if (fastTextCase_ == FastTextOneofCase.TwilightIONoteVisibility) hash ^= TwilightIONoteVisibility.GetHashCode();
      if (fastTextCase_ == FastTextOneofCase.QwilightIOMultiplier) hash ^= QwilightIOMultiplier.GetHashCode();
      if (fastTextCase_ == FastTextOneofCase.TwilightIOMultiplier) hash ^= TwilightIOMultiplier.GetHashCode();
      if (fastTextCase_ == FastTextOneofCase.QwilightIOAudioMultiplier) hash ^= QwilightIOAudioMultiplier.GetHashCode();
      if (fastTextCase_ == FastTextOneofCase.TwilightIOAudioMultiplier) hash ^= TwilightIOAudioMultiplier.GetHashCode();
      if (fastTextCase_ == FastTextOneofCase.TwilightAudioInput) hash ^= TwilightAudioInput.GetHashCode();
      if (fastTextCase_ == FastTextOneofCase.QwilightPostItem) hash ^= QwilightPostItem.GetHashCode();
      if (fastTextCase_ == FastTextOneofCase.TwilightPostItem) hash ^= TwilightPostItem.GetHashCode();
      hash ^= (int) fastTextCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Millis != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Millis);
      }
      if (AvatarID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AvatarID);
      }
      if (EventID != global::Qwilight.Event.Types.EventID.SignIn) {
        output.WriteRawTag(24);
        output.WriteEnum((int) EventID);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Text);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (fastTextCase_ == FastTextOneofCase.QwilightCallNet) {
        output.WriteRawTag(50);
        output.WriteMessage(QwilightCallNet);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightCallNet) {
        output.WriteRawTag(58);
        output.WriteMessage(TwilightCallNet);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightIOInput) {
        output.WriteRawTag(66);
        output.WriteMessage(QwilightIOInput);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightIOInput) {
        output.WriteRawTag(74);
        output.WriteMessage(TwilightIOInput);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightIOJudge) {
        output.WriteRawTag(82);
        output.WriteMessage(QwilightIOJudge);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightIOJudge) {
        output.WriteRawTag(90);
        output.WriteMessage(TwilightIOJudge);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightIOJudgmentMeter) {
        output.WriteRawTag(98);
        output.WriteMessage(QwilightIOJudgmentMeter);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightIOJudgmentMeter) {
        output.WriteRawTag(106);
        output.WriteMessage(TwilightIOJudgmentMeter);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightIONoteVisibility) {
        output.WriteRawTag(114);
        output.WriteMessage(QwilightIONoteVisibility);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightIONoteVisibility) {
        output.WriteRawTag(122);
        output.WriteMessage(TwilightIONoteVisibility);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightIOMultiplier) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(QwilightIOMultiplier);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightIOMultiplier) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(TwilightIOMultiplier);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightIOAudioMultiplier) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(QwilightIOAudioMultiplier);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightIOAudioMultiplier) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(TwilightIOAudioMultiplier);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightAudioInput) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(TwilightAudioInput);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightPostItem) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(QwilightPostItem);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightPostItem) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(TwilightPostItem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Millis != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Millis);
      }
      if (AvatarID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AvatarID);
      }
      if (EventID != global::Qwilight.Event.Types.EventID.SignIn) {
        output.WriteRawTag(24);
        output.WriteEnum((int) EventID);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Text);
      }
      data_.WriteTo(ref output, _repeated_data_codec);
      if (fastTextCase_ == FastTextOneofCase.QwilightCallNet) {
        output.WriteRawTag(50);
        output.WriteMessage(QwilightCallNet);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightCallNet) {
        output.WriteRawTag(58);
        output.WriteMessage(TwilightCallNet);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightIOInput) {
        output.WriteRawTag(66);
        output.WriteMessage(QwilightIOInput);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightIOInput) {
        output.WriteRawTag(74);
        output.WriteMessage(TwilightIOInput);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightIOJudge) {
        output.WriteRawTag(82);
        output.WriteMessage(QwilightIOJudge);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightIOJudge) {
        output.WriteRawTag(90);
        output.WriteMessage(TwilightIOJudge);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightIOJudgmentMeter) {
        output.WriteRawTag(98);
        output.WriteMessage(QwilightIOJudgmentMeter);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightIOJudgmentMeter) {
        output.WriteRawTag(106);
        output.WriteMessage(TwilightIOJudgmentMeter);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightIONoteVisibility) {
        output.WriteRawTag(114);
        output.WriteMessage(QwilightIONoteVisibility);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightIONoteVisibility) {
        output.WriteRawTag(122);
        output.WriteMessage(TwilightIONoteVisibility);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightIOMultiplier) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(QwilightIOMultiplier);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightIOMultiplier) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(TwilightIOMultiplier);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightIOAudioMultiplier) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(QwilightIOAudioMultiplier);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightIOAudioMultiplier) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(TwilightIOAudioMultiplier);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightAudioInput) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(TwilightAudioInput);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightPostItem) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(QwilightPostItem);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightPostItem) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(TwilightPostItem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Millis != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Millis);
      }
      if (AvatarID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarID);
      }
      if (EventID != global::Qwilight.Event.Types.EventID.SignIn) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventID);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (fastTextCase_ == FastTextOneofCase.QwilightCallNet) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QwilightCallNet);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightCallNet) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TwilightCallNet);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightIOInput) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QwilightIOInput);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightIOInput) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TwilightIOInput);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightIOJudge) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QwilightIOJudge);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightIOJudge) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TwilightIOJudge);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightIOJudgmentMeter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QwilightIOJudgmentMeter);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightIOJudgmentMeter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TwilightIOJudgmentMeter);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightIONoteVisibility) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QwilightIONoteVisibility);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightIONoteVisibility) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TwilightIONoteVisibility);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightIOMultiplier) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(QwilightIOMultiplier);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightIOMultiplier) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TwilightIOMultiplier);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightIOAudioMultiplier) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(QwilightIOAudioMultiplier);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightIOAudioMultiplier) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TwilightIOAudioMultiplier);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightAudioInput) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TwilightAudioInput);
      }
      if (fastTextCase_ == FastTextOneofCase.QwilightPostItem) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(QwilightPostItem);
      }
      if (fastTextCase_ == FastTextOneofCase.TwilightPostItem) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TwilightPostItem);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      if (other.Millis != 0L) {
        Millis = other.Millis;
      }
      if (other.AvatarID.Length != 0) {
        AvatarID = other.AvatarID;
      }
      if (other.EventID != global::Qwilight.Event.Types.EventID.SignIn) {
        EventID = other.EventID;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      data_.Add(other.data_);
      switch (other.FastTextCase) {
        case FastTextOneofCase.QwilightCallNet:
          if (QwilightCallNet == null) {
            QwilightCallNet = new global::Qwilight.Event.Types.QwilightCallNet();
          }
          QwilightCallNet.MergeFrom(other.QwilightCallNet);
          break;
        case FastTextOneofCase.TwilightCallNet:
          if (TwilightCallNet == null) {
            TwilightCallNet = new global::Qwilight.Event.Types.TwilightCallNet();
          }
          TwilightCallNet.MergeFrom(other.TwilightCallNet);
          break;
        case FastTextOneofCase.QwilightIOInput:
          if (QwilightIOInput == null) {
            QwilightIOInput = new global::Qwilight.Event.Types.QwilightIOInput();
          }
          QwilightIOInput.MergeFrom(other.QwilightIOInput);
          break;
        case FastTextOneofCase.TwilightIOInput:
          if (TwilightIOInput == null) {
            TwilightIOInput = new global::Qwilight.Event.Types.TwilightIOInput();
          }
          TwilightIOInput.MergeFrom(other.TwilightIOInput);
          break;
        case FastTextOneofCase.QwilightIOJudge:
          if (QwilightIOJudge == null) {
            QwilightIOJudge = new global::Qwilight.Event.Types.QwilightIOJudge();
          }
          QwilightIOJudge.MergeFrom(other.QwilightIOJudge);
          break;
        case FastTextOneofCase.TwilightIOJudge:
          if (TwilightIOJudge == null) {
            TwilightIOJudge = new global::Qwilight.Event.Types.TwilightIOJudge();
          }
          TwilightIOJudge.MergeFrom(other.TwilightIOJudge);
          break;
        case FastTextOneofCase.QwilightIOJudgmentMeter:
          if (QwilightIOJudgmentMeter == null) {
            QwilightIOJudgmentMeter = new global::Qwilight.Event.Types.QwilightIOJudgmentMeter();
          }
          QwilightIOJudgmentMeter.MergeFrom(other.QwilightIOJudgmentMeter);
          break;
        case FastTextOneofCase.TwilightIOJudgmentMeter:
          if (TwilightIOJudgmentMeter == null) {
            TwilightIOJudgmentMeter = new global::Qwilight.Event.Types.TwilightIOJudgmentMeter();
          }
          TwilightIOJudgmentMeter.MergeFrom(other.TwilightIOJudgmentMeter);
          break;
        case FastTextOneofCase.QwilightIONoteVisibility:
          if (QwilightIONoteVisibility == null) {
            QwilightIONoteVisibility = new global::Qwilight.Event.Types.QwilightIONoteVisibility();
          }
          QwilightIONoteVisibility.MergeFrom(other.QwilightIONoteVisibility);
          break;
        case FastTextOneofCase.TwilightIONoteVisibility:
          if (TwilightIONoteVisibility == null) {
            TwilightIONoteVisibility = new global::Qwilight.Event.Types.TwilightIONoteVisibility();
          }
          TwilightIONoteVisibility.MergeFrom(other.TwilightIONoteVisibility);
          break;
        case FastTextOneofCase.QwilightIOMultiplier:
          if (QwilightIOMultiplier == null) {
            QwilightIOMultiplier = new global::Qwilight.Event.Types.QwilightIOMultiplier();
          }
          QwilightIOMultiplier.MergeFrom(other.QwilightIOMultiplier);
          break;
        case FastTextOneofCase.TwilightIOMultiplier:
          if (TwilightIOMultiplier == null) {
            TwilightIOMultiplier = new global::Qwilight.Event.Types.TwilightIOMultiplier();
          }
          TwilightIOMultiplier.MergeFrom(other.TwilightIOMultiplier);
          break;
        case FastTextOneofCase.QwilightIOAudioMultiplier:
          if (QwilightIOAudioMultiplier == null) {
            QwilightIOAudioMultiplier = new global::Qwilight.Event.Types.QwilightIOAudioMultiplier();
          }
          QwilightIOAudioMultiplier.MergeFrom(other.QwilightIOAudioMultiplier);
          break;
        case FastTextOneofCase.TwilightIOAudioMultiplier:
          if (TwilightIOAudioMultiplier == null) {
            TwilightIOAudioMultiplier = new global::Qwilight.Event.Types.TwilightIOAudioMultiplier();
          }
          TwilightIOAudioMultiplier.MergeFrom(other.TwilightIOAudioMultiplier);
          break;
        case FastTextOneofCase.TwilightAudioInput:
          if (TwilightAudioInput == null) {
            TwilightAudioInput = new global::Qwilight.Event.Types.TwilightAudioInput();
          }
          TwilightAudioInput.MergeFrom(other.TwilightAudioInput);
          break;
        case FastTextOneofCase.QwilightPostItem:
          if (QwilightPostItem == null) {
            QwilightPostItem = new global::Qwilight.Event.Types.QwilightPostItem();
          }
          QwilightPostItem.MergeFrom(other.QwilightPostItem);
          break;
        case FastTextOneofCase.TwilightPostItem:
          if (TwilightPostItem == null) {
            TwilightPostItem = new global::Qwilight.Event.Types.TwilightPostItem();
          }
          TwilightPostItem.MergeFrom(other.TwilightPostItem);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Millis = input.ReadInt64();
            break;
          }
          case 18: {
            AvatarID = input.ReadString();
            break;
          }
          case 24: {
            EventID = (global::Qwilight.Event.Types.EventID) input.ReadEnum();
            break;
          }
          case 34: {
            Text = input.ReadString();
            break;
          }
          case 42: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
          case 50: {
            global::Qwilight.Event.Types.QwilightCallNet subBuilder = new global::Qwilight.Event.Types.QwilightCallNet();
            if (fastTextCase_ == FastTextOneofCase.QwilightCallNet) {
              subBuilder.MergeFrom(QwilightCallNet);
            }
            input.ReadMessage(subBuilder);
            QwilightCallNet = subBuilder;
            break;
          }
          case 58: {
            global::Qwilight.Event.Types.TwilightCallNet subBuilder = new global::Qwilight.Event.Types.TwilightCallNet();
            if (fastTextCase_ == FastTextOneofCase.TwilightCallNet) {
              subBuilder.MergeFrom(TwilightCallNet);
            }
            input.ReadMessage(subBuilder);
            TwilightCallNet = subBuilder;
            break;
          }
          case 66: {
            global::Qwilight.Event.Types.QwilightIOInput subBuilder = new global::Qwilight.Event.Types.QwilightIOInput();
            if (fastTextCase_ == FastTextOneofCase.QwilightIOInput) {
              subBuilder.MergeFrom(QwilightIOInput);
            }
            input.ReadMessage(subBuilder);
            QwilightIOInput = subBuilder;
            break;
          }
          case 74: {
            global::Qwilight.Event.Types.TwilightIOInput subBuilder = new global::Qwilight.Event.Types.TwilightIOInput();
            if (fastTextCase_ == FastTextOneofCase.TwilightIOInput) {
              subBuilder.MergeFrom(TwilightIOInput);
            }
            input.ReadMessage(subBuilder);
            TwilightIOInput = subBuilder;
            break;
          }
          case 82: {
            global::Qwilight.Event.Types.QwilightIOJudge subBuilder = new global::Qwilight.Event.Types.QwilightIOJudge();
            if (fastTextCase_ == FastTextOneofCase.QwilightIOJudge) {
              subBuilder.MergeFrom(QwilightIOJudge);
            }
            input.ReadMessage(subBuilder);
            QwilightIOJudge = subBuilder;
            break;
          }
          case 90: {
            global::Qwilight.Event.Types.TwilightIOJudge subBuilder = new global::Qwilight.Event.Types.TwilightIOJudge();
            if (fastTextCase_ == FastTextOneofCase.TwilightIOJudge) {
              subBuilder.MergeFrom(TwilightIOJudge);
            }
            input.ReadMessage(subBuilder);
            TwilightIOJudge = subBuilder;
            break;
          }
          case 98: {
            global::Qwilight.Event.Types.QwilightIOJudgmentMeter subBuilder = new global::Qwilight.Event.Types.QwilightIOJudgmentMeter();
            if (fastTextCase_ == FastTextOneofCase.QwilightIOJudgmentMeter) {
              subBuilder.MergeFrom(QwilightIOJudgmentMeter);
            }
            input.ReadMessage(subBuilder);
            QwilightIOJudgmentMeter = subBuilder;
            break;
          }
          case 106: {
            global::Qwilight.Event.Types.TwilightIOJudgmentMeter subBuilder = new global::Qwilight.Event.Types.TwilightIOJudgmentMeter();
            if (fastTextCase_ == FastTextOneofCase.TwilightIOJudgmentMeter) {
              subBuilder.MergeFrom(TwilightIOJudgmentMeter);
            }
            input.ReadMessage(subBuilder);
            TwilightIOJudgmentMeter = subBuilder;
            break;
          }
          case 114: {
            global::Qwilight.Event.Types.QwilightIONoteVisibility subBuilder = new global::Qwilight.Event.Types.QwilightIONoteVisibility();
            if (fastTextCase_ == FastTextOneofCase.QwilightIONoteVisibility) {
              subBuilder.MergeFrom(QwilightIONoteVisibility);
            }
            input.ReadMessage(subBuilder);
            QwilightIONoteVisibility = subBuilder;
            break;
          }
          case 122: {
            global::Qwilight.Event.Types.TwilightIONoteVisibility subBuilder = new global::Qwilight.Event.Types.TwilightIONoteVisibility();
            if (fastTextCase_ == FastTextOneofCase.TwilightIONoteVisibility) {
              subBuilder.MergeFrom(TwilightIONoteVisibility);
            }
            input.ReadMessage(subBuilder);
            TwilightIONoteVisibility = subBuilder;
            break;
          }
          case 130: {
            global::Qwilight.Event.Types.QwilightIOMultiplier subBuilder = new global::Qwilight.Event.Types.QwilightIOMultiplier();
            if (fastTextCase_ == FastTextOneofCase.QwilightIOMultiplier) {
              subBuilder.MergeFrom(QwilightIOMultiplier);
            }
            input.ReadMessage(subBuilder);
            QwilightIOMultiplier = subBuilder;
            break;
          }
          case 138: {
            global::Qwilight.Event.Types.TwilightIOMultiplier subBuilder = new global::Qwilight.Event.Types.TwilightIOMultiplier();
            if (fastTextCase_ == FastTextOneofCase.TwilightIOMultiplier) {
              subBuilder.MergeFrom(TwilightIOMultiplier);
            }
            input.ReadMessage(subBuilder);
            TwilightIOMultiplier = subBuilder;
            break;
          }
          case 146: {
            global::Qwilight.Event.Types.QwilightIOAudioMultiplier subBuilder = new global::Qwilight.Event.Types.QwilightIOAudioMultiplier();
            if (fastTextCase_ == FastTextOneofCase.QwilightIOAudioMultiplier) {
              subBuilder.MergeFrom(QwilightIOAudioMultiplier);
            }
            input.ReadMessage(subBuilder);
            QwilightIOAudioMultiplier = subBuilder;
            break;
          }
          case 154: {
            global::Qwilight.Event.Types.TwilightIOAudioMultiplier subBuilder = new global::Qwilight.Event.Types.TwilightIOAudioMultiplier();
            if (fastTextCase_ == FastTextOneofCase.TwilightIOAudioMultiplier) {
              subBuilder.MergeFrom(TwilightIOAudioMultiplier);
            }
            input.ReadMessage(subBuilder);
            TwilightIOAudioMultiplier = subBuilder;
            break;
          }
          case 162: {
            global::Qwilight.Event.Types.TwilightAudioInput subBuilder = new global::Qwilight.Event.Types.TwilightAudioInput();
            if (fastTextCase_ == FastTextOneofCase.TwilightAudioInput) {
              subBuilder.MergeFrom(TwilightAudioInput);
            }
            input.ReadMessage(subBuilder);
            TwilightAudioInput = subBuilder;
            break;
          }
          case 170: {
            global::Qwilight.Event.Types.QwilightPostItem subBuilder = new global::Qwilight.Event.Types.QwilightPostItem();
            if (fastTextCase_ == FastTextOneofCase.QwilightPostItem) {
              subBuilder.MergeFrom(QwilightPostItem);
            }
            input.ReadMessage(subBuilder);
            QwilightPostItem = subBuilder;
            break;
          }
          case 178: {
            global::Qwilight.Event.Types.TwilightPostItem subBuilder = new global::Qwilight.Event.Types.TwilightPostItem();
            if (fastTextCase_ == FastTextOneofCase.TwilightPostItem) {
              subBuilder.MergeFrom(TwilightPostItem);
            }
            input.ReadMessage(subBuilder);
            TwilightPostItem = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Millis = input.ReadInt64();
            break;
          }
          case 18: {
            AvatarID = input.ReadString();
            break;
          }
          case 24: {
            EventID = (global::Qwilight.Event.Types.EventID) input.ReadEnum();
            break;
          }
          case 34: {
            Text = input.ReadString();
            break;
          }
          case 42: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
          case 50: {
            global::Qwilight.Event.Types.QwilightCallNet subBuilder = new global::Qwilight.Event.Types.QwilightCallNet();
            if (fastTextCase_ == FastTextOneofCase.QwilightCallNet) {
              subBuilder.MergeFrom(QwilightCallNet);
            }
            input.ReadMessage(subBuilder);
            QwilightCallNet = subBuilder;
            break;
          }
          case 58: {
            global::Qwilight.Event.Types.TwilightCallNet subBuilder = new global::Qwilight.Event.Types.TwilightCallNet();
            if (fastTextCase_ == FastTextOneofCase.TwilightCallNet) {
              subBuilder.MergeFrom(TwilightCallNet);
            }
            input.ReadMessage(subBuilder);
            TwilightCallNet = subBuilder;
            break;
          }
          case 66: {
            global::Qwilight.Event.Types.QwilightIOInput subBuilder = new global::Qwilight.Event.Types.QwilightIOInput();
            if (fastTextCase_ == FastTextOneofCase.QwilightIOInput) {
              subBuilder.MergeFrom(QwilightIOInput);
            }
            input.ReadMessage(subBuilder);
            QwilightIOInput = subBuilder;
            break;
          }
          case 74: {
            global::Qwilight.Event.Types.TwilightIOInput subBuilder = new global::Qwilight.Event.Types.TwilightIOInput();
            if (fastTextCase_ == FastTextOneofCase.TwilightIOInput) {
              subBuilder.MergeFrom(TwilightIOInput);
            }
            input.ReadMessage(subBuilder);
            TwilightIOInput = subBuilder;
            break;
          }
          case 82: {
            global::Qwilight.Event.Types.QwilightIOJudge subBuilder = new global::Qwilight.Event.Types.QwilightIOJudge();
            if (fastTextCase_ == FastTextOneofCase.QwilightIOJudge) {
              subBuilder.MergeFrom(QwilightIOJudge);
            }
            input.ReadMessage(subBuilder);
            QwilightIOJudge = subBuilder;
            break;
          }
          case 90: {
            global::Qwilight.Event.Types.TwilightIOJudge subBuilder = new global::Qwilight.Event.Types.TwilightIOJudge();
            if (fastTextCase_ == FastTextOneofCase.TwilightIOJudge) {
              subBuilder.MergeFrom(TwilightIOJudge);
            }
            input.ReadMessage(subBuilder);
            TwilightIOJudge = subBuilder;
            break;
          }
          case 98: {
            global::Qwilight.Event.Types.QwilightIOJudgmentMeter subBuilder = new global::Qwilight.Event.Types.QwilightIOJudgmentMeter();
            if (fastTextCase_ == FastTextOneofCase.QwilightIOJudgmentMeter) {
              subBuilder.MergeFrom(QwilightIOJudgmentMeter);
            }
            input.ReadMessage(subBuilder);
            QwilightIOJudgmentMeter = subBuilder;
            break;
          }
          case 106: {
            global::Qwilight.Event.Types.TwilightIOJudgmentMeter subBuilder = new global::Qwilight.Event.Types.TwilightIOJudgmentMeter();
            if (fastTextCase_ == FastTextOneofCase.TwilightIOJudgmentMeter) {
              subBuilder.MergeFrom(TwilightIOJudgmentMeter);
            }
            input.ReadMessage(subBuilder);
            TwilightIOJudgmentMeter = subBuilder;
            break;
          }
          case 114: {
            global::Qwilight.Event.Types.QwilightIONoteVisibility subBuilder = new global::Qwilight.Event.Types.QwilightIONoteVisibility();
            if (fastTextCase_ == FastTextOneofCase.QwilightIONoteVisibility) {
              subBuilder.MergeFrom(QwilightIONoteVisibility);
            }
            input.ReadMessage(subBuilder);
            QwilightIONoteVisibility = subBuilder;
            break;
          }
          case 122: {
            global::Qwilight.Event.Types.TwilightIONoteVisibility subBuilder = new global::Qwilight.Event.Types.TwilightIONoteVisibility();
            if (fastTextCase_ == FastTextOneofCase.TwilightIONoteVisibility) {
              subBuilder.MergeFrom(TwilightIONoteVisibility);
            }
            input.ReadMessage(subBuilder);
            TwilightIONoteVisibility = subBuilder;
            break;
          }
          case 130: {
            global::Qwilight.Event.Types.QwilightIOMultiplier subBuilder = new global::Qwilight.Event.Types.QwilightIOMultiplier();
            if (fastTextCase_ == FastTextOneofCase.QwilightIOMultiplier) {
              subBuilder.MergeFrom(QwilightIOMultiplier);
            }
            input.ReadMessage(subBuilder);
            QwilightIOMultiplier = subBuilder;
            break;
          }
          case 138: {
            global::Qwilight.Event.Types.TwilightIOMultiplier subBuilder = new global::Qwilight.Event.Types.TwilightIOMultiplier();
            if (fastTextCase_ == FastTextOneofCase.TwilightIOMultiplier) {
              subBuilder.MergeFrom(TwilightIOMultiplier);
            }
            input.ReadMessage(subBuilder);
            TwilightIOMultiplier = subBuilder;
            break;
          }
          case 146: {
            global::Qwilight.Event.Types.QwilightIOAudioMultiplier subBuilder = new global::Qwilight.Event.Types.QwilightIOAudioMultiplier();
            if (fastTextCase_ == FastTextOneofCase.QwilightIOAudioMultiplier) {
              subBuilder.MergeFrom(QwilightIOAudioMultiplier);
            }
            input.ReadMessage(subBuilder);
            QwilightIOAudioMultiplier = subBuilder;
            break;
          }
          case 154: {
            global::Qwilight.Event.Types.TwilightIOAudioMultiplier subBuilder = new global::Qwilight.Event.Types.TwilightIOAudioMultiplier();
            if (fastTextCase_ == FastTextOneofCase.TwilightIOAudioMultiplier) {
              subBuilder.MergeFrom(TwilightIOAudioMultiplier);
            }
            input.ReadMessage(subBuilder);
            TwilightIOAudioMultiplier = subBuilder;
            break;
          }
          case 162: {
            global::Qwilight.Event.Types.TwilightAudioInput subBuilder = new global::Qwilight.Event.Types.TwilightAudioInput();
            if (fastTextCase_ == FastTextOneofCase.TwilightAudioInput) {
              subBuilder.MergeFrom(TwilightAudioInput);
            }
            input.ReadMessage(subBuilder);
            TwilightAudioInput = subBuilder;
            break;
          }
          case 170: {
            global::Qwilight.Event.Types.QwilightPostItem subBuilder = new global::Qwilight.Event.Types.QwilightPostItem();
            if (fastTextCase_ == FastTextOneofCase.QwilightPostItem) {
              subBuilder.MergeFrom(QwilightPostItem);
            }
            input.ReadMessage(subBuilder);
            QwilightPostItem = subBuilder;
            break;
          }
          case 178: {
            global::Qwilight.Event.Types.TwilightPostItem subBuilder = new global::Qwilight.Event.Types.TwilightPostItem();
            if (fastTextCase_ == FastTextOneofCase.TwilightPostItem) {
              subBuilder.MergeFrom(TwilightPostItem);
            }
            input.ReadMessage(subBuilder);
            TwilightPostItem = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Event message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AvatarNetStatus {
        [pbr::OriginalName("Default")] Default = 0,
        [pbr::OriginalName("Clear")] Clear = 1,
        [pbr::OriginalName("Failed")] Failed = 2,
      }

      public enum EventID {
        [pbr::OriginalName("SIGN_IN")] SignIn = 0,
        [pbr::OriginalName("NOT_SIGN_IN")] NotSignIn = 1,
        [pbr::OriginalName("WARNING")] Warning = 2,
        [pbr::OriginalName("SITE_YELL")] SiteYell = 3,
        [pbr::OriginalName("CALL_BUNDLE")] CallBundle = 4,
        [pbr::OriginalName("SAVE_AS_BUNDLE")] SaveAsBundle = 5,
        [pbr::OriginalName("SAVING_BUNDLE")] SavingBundle = 6,
        [pbr::OriginalName("WIPE_BUNDLE")] WipeBundle = 7,
        [pbr::OriginalName("SET_BUNDLE")] SetBundle = 8,
        [pbr::OriginalName("CALL_UBUNTU")] CallUbuntu = 9,
        [pbr::OriginalName("CALL_SITE_AVATAR")] CallSiteAvatar = 10,
        [pbr::OriginalName("COMMENT")] Comment = 11,
        [pbr::OriginalName("SET_SITUATION")] SetSituation = 12,
        [pbr::OriginalName("NEW_TITLE")] NewTitle = 13,
        [pbr::OriginalName("STOP_SAVING_BUNDLE")] StopSavingBundle = 14,
        [pbr::OriginalName("SAVED_BUNDLE")] SavedBundle = 15,
        [pbr::OriginalName("SAVE_BUNDLE")] SaveBundle = 16,
        [pbr::OriginalName("ENTER_SITE")] EnterSite = 17,
        [pbr::OriginalName("QUIT_SITE")] QuitSite = 18,
        [pbr::OriginalName("WIPE_UBUNTU")] WipeUbuntu = 19,
        [pbr::OriginalName("NEW_SITE")] NewSite = 20,
        [pbr::OriginalName("NEW_UBUNTU")] NewUbuntu = 21,
        [pbr::OriginalName("EXILE_AVATAR")] ExileAvatar = 22,
        [pbr::OriginalName("NEW_SILENT_SITE")] NewSilentSite = 23,
        [pbr::OriginalName("ESTABLISH")] Establish = 24,
        [pbr::OriginalName("CALL_CONFIGURE")] CallConfigure = 25,
        [pbr::OriginalName("SET_CONFIGURE")] SetConfigure = 26,
        [pbr::OriginalName("NOTIFY_INFO")] NotifyInfo = 27,
        [pbr::OriginalName("LEVY_NET")] LevyNet = 28,
        [pbr::OriginalName("COMPILED")] Compiled = 29,
        [pbr::OriginalName("CALL_NET")] CallNet = 30,
        [pbr::OriginalName("SET_MODE_COMPONENT")] SetModeComponent = 31,
        [pbr::OriginalName("SET_FAVOR_MODE_COMPONENT")] SetFavorModeComponent = 32,
        [pbr::OriginalName("SET_VALID_HUNTER_MODE")] SetValidHunterMode = 33,
        [pbr::OriginalName("CALL_NET_SITE_COMMENTS")] CallNetSiteComments = 34,
        [pbr::OriginalName("SET_NOTE_FILE")] SetNoteFile = 35,
        [pbr::OriginalName("SET_SITE_NAME")] SetSiteName = 36,
        [pbr::OriginalName("SET_SITE_HAND")] SetSiteHand = 37,
        [pbr::OriginalName("QUIT_NET")] QuitNet = 38,
        [pbr::OriginalName("SAVING_AS_BUNDLE")] SavingAsBundle = 39,
        [pbr::OriginalName("SAVED_AS_BUNDLE")] SavedAsBundle = 40,
        [pbr::OriginalName("STOP_SAVING_AS_BUNDLE")] StopSavingAsBundle = 41,
        [pbr::OriginalName("SAVE_DEFAULT_NOTE")] SaveDefaultNote = 42,
        [pbr::OriginalName("POST_FILE")] PostFile = 43,
        [pbr::OriginalName("SAVE_DEFAULT_UI")] SaveDefaultUi = 44,
        [pbr::OriginalName("SET_FAVOR_AUDIO_MULTIPLIER")] SetFavorAudioMultiplier = 45,
        [pbr::OriginalName("CALL_SITE_NET")] CallSiteNet = 46,
        [pbr::OriginalName("NOTIFY_YES")] NotifyYes = 47,
        [pbr::OriginalName("CALL_IO")] CallIo = 48,
        [pbr::OriginalName("CALL_IO_COMPONENT")] CallIoComponent = 49,
        [pbr::OriginalName("COMPILED_IO")] CompiledIo = 50,
        [pbr::OriginalName("LEVY_IO")] LevyIo = 51,
        [pbr::OriginalName("IO_INPUT")] IoInput = 52,
        [pbr::OriginalName("IO_JUDGE")] IoJudge = 53,
        [pbr::OriginalName("IO_NOTE_VISIBILITY")] IoNoteVisibility = 54,
        [pbr::OriginalName("IO_JUDGMENT_METER")] IoJudgmentMeter = 56,
        [pbr::OriginalName("IO_MULTIPLIER")] IoMultiplier = 57,
        [pbr::OriginalName("IO_AUDIO_MULTIPLIER")] IoAudioMultiplier = 58,
        [pbr::OriginalName("IO_PAUSE")] IoPause = 59,
        [pbr::OriginalName("IO_QUIT")] IoQuit = 60,
        [pbr::OriginalName("IO_NOT")] IoNot = 61,
        [pbr::OriginalName("AUDIO_INPUT")] AudioInput = 62,
        [pbr::OriginalName("CALL_SITE_MODE_COMPONENT")] CallSiteModeComponent = 63,
        [pbr::OriginalName("COMMENTARY")] Commentary = 65,
        [pbr::OriginalName("WWW_LEVEL")] WwwLevel = 66,
        [pbr::OriginalName("AVATAR_TITLE")] AvatarTitle = 67,
        [pbr::OriginalName("INVALIDATE_AVATAR_DRAWING")] InvalidateAvatarDrawing = 68,
        [pbr::OriginalName("INVALIDATE_AVATAR_TITLE")] InvalidateAvatarTitle = 69,
        [pbr::OriginalName("LEVEL_UP")] LevelUp = 70,
        [pbr::OriginalName("SET_FAVOR_NOTE_FILE")] SetFavorNoteFile = 71,
        [pbr::OriginalName("GET_SITE_YELLS")] GetSiteYells = 72,
        [pbr::OriginalName("SET_LANGUAGE")] SetLanguage = 73,
        [pbr::OriginalName("VALVE_COMMENT")] ValveComment = 74,
        [pbr::OriginalName("ABILITY_UP")] AbilityUp = 75,
        [pbr::OriginalName("CLOSE")] Close = 76,
        [pbr::OriginalName("UNAVAILABLE_DATE")] UnavailableDate = 77,
        [pbr::OriginalName("AVATAR_EDGE")] AvatarEdge = 78,
        [pbr::OriginalName("INVALIDATE_AVATAR_EDGE")] InvalidateAvatarEdge = 79,
        [pbr::OriginalName("FAILED_VALIDATE_TOTEM")] FailedValidateTotem = 80,
        [pbr::OriginalName("MODIFY_SITE_YELL")] ModifySiteYell = 81,
        [pbr::OriginalName("WIPE_SITE_YELL")] WipeSiteYell = 82,
        [pbr::OriginalName("ALREADY_LOADING_BUNDLE")] AlreadyLoadingBundle = 83,
        [pbr::OriginalName("SET_FAVOR")] SetFavor = 84,
        [pbr::OriginalName("SET_AUTO_SITE_HAND")] SetAutoSiteHand = 85,
        [pbr::OriginalName("SET_AVATAR_GROUP")] SetAvatarGroup = 86,
        [pbr::OriginalName("POST_ITEM")] PostItem = 87,
        [pbr::OriginalName("SET_VALID_NET_MODE")] SetValidNetMode = 88,
        [pbr::OriginalName("SET_ALLOWED_POSTABLE_ITEMS")] SetAllowedPostableItems = 89,
      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class TwilightCallNet : pb::IMessage<TwilightCallNet>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TwilightCallNet> _parser = new pb::MessageParser<TwilightCallNet>(() => new TwilightCallNet());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<TwilightCallNet> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Qwilight.Event.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightCallNet() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightCallNet(TwilightCallNet other) : this() {
          handlerID_ = other.handlerID_;
          data_ = other.data_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightCallNet Clone() {
          return new TwilightCallNet(this);
        }

        /// <summary>Field number for the "handlerID" field.</summary>
        public const int HandlerIDFieldNumber = 1;
        private string handlerID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string HandlerID {
          get { return handlerID_; }
          set {
            handlerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Qwilight.Event.Types.TwilightCallNet.Types.CallNetItem> _repeated_data_codec
            = pb::FieldCodec.ForMessage(18, global::Qwilight.Event.Types.TwilightCallNet.Types.CallNetItem.Parser);
        private readonly pbc::RepeatedField<global::Qwilight.Event.Types.TwilightCallNet.Types.CallNetItem> data_ = new pbc::RepeatedField<global::Qwilight.Event.Types.TwilightCallNet.Types.CallNetItem>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Qwilight.Event.Types.TwilightCallNet.Types.CallNetItem> Data {
          get { return data_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as TwilightCallNet);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(TwilightCallNet other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (HandlerID != other.HandlerID) return false;
          if(!data_.Equals(other.data_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HandlerID.Length != 0) hash ^= HandlerID.GetHashCode();
          hash ^= data_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HandlerID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(HandlerID);
          }
          data_.WriteTo(output, _repeated_data_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HandlerID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(HandlerID);
          }
          data_.WriteTo(ref output, _repeated_data_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HandlerID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HandlerID);
          }
          size += data_.CalculateSize(_repeated_data_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(TwilightCallNet other) {
          if (other == null) {
            return;
          }
          if (other.HandlerID.Length != 0) {
            HandlerID = other.HandlerID;
          }
          data_.Add(other.data_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                HandlerID = input.ReadString();
                break;
              }
              case 18: {
                data_.AddEntriesFrom(input, _repeated_data_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                HandlerID = input.ReadString();
                break;
              }
              case 18: {
                data_.AddEntriesFrom(ref input, _repeated_data_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the TwilightCallNet message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class CallNetItem : pb::IMessage<CallNetItem>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<CallNetItem> _parser = new pb::MessageParser<CallNetItem>(() => new CallNetItem());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<CallNetItem> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Qwilight.Event.Types.TwilightCallNet.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public CallNetItem() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public CallNetItem(CallNetItem other) : this() {
              avatarNetStatus_ = other.avatarNetStatus_;
              avatarID_ = other.avatarID_;
              avatarName_ = other.avatarName_;
              stand_ = other.stand_;
              band_ = other.band_;
              point_ = other.point_;
              hitPoints_ = other.hitPoints_;
              isFailed_ = other.isFailed_;
              lastJudged_ = other.lastJudged_;
              hitPointsMode_ = other.hitPointsMode_;
              targetPosition_ = other.targetPosition_;
              drawings_ = other.drawings_.Clone();
              drawingComponent_ = other.drawingComponent_ != null ? other.drawingComponent_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public CallNetItem Clone() {
              return new CallNetItem(this);
            }

            /// <summary>Field number for the "avatarNetStatus" field.</summary>
            public const int AvatarNetStatusFieldNumber = 1;
            private global::Qwilight.Event.Types.AvatarNetStatus avatarNetStatus_ = global::Qwilight.Event.Types.AvatarNetStatus.Default;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Qwilight.Event.Types.AvatarNetStatus AvatarNetStatus {
              get { return avatarNetStatus_; }
              set {
                avatarNetStatus_ = value;
              }
            }

            /// <summary>Field number for the "avatarID" field.</summary>
            public const int AvatarIDFieldNumber = 2;
            private string avatarID_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string AvatarID {
              get { return avatarID_; }
              set {
                avatarID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "avatarName" field.</summary>
            public const int AvatarNameFieldNumber = 3;
            private string avatarName_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string AvatarName {
              get { return avatarName_; }
              set {
                avatarName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "stand" field.</summary>
            public const int StandFieldNumber = 4;
            private int stand_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int Stand {
              get { return stand_; }
              set {
                stand_ = value;
              }
            }

            /// <summary>Field number for the "band" field.</summary>
            public const int BandFieldNumber = 5;
            private int band_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int Band {
              get { return band_; }
              set {
                band_ = value;
              }
            }

            /// <summary>Field number for the "point" field.</summary>
            public const int PointFieldNumber = 6;
            private double point_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public double Point {
              get { return point_; }
              set {
                point_ = value;
              }
            }

            /// <summary>Field number for the "hitPoints" field.</summary>
            public const int HitPointsFieldNumber = 7;
            private double hitPoints_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public double HitPoints {
              get { return hitPoints_; }
              set {
                hitPoints_ = value;
              }
            }

            /// <summary>Field number for the "isFailed" field.</summary>
            public const int IsFailedFieldNumber = 8;
            private bool isFailed_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool IsFailed {
              get { return isFailed_; }
              set {
                isFailed_ = value;
              }
            }

            /// <summary>Field number for the "lastJudged" field.</summary>
            public const int LastJudgedFieldNumber = 9;
            private int lastJudged_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int LastJudged {
              get { return lastJudged_; }
              set {
                lastJudged_ = value;
              }
            }

            /// <summary>Field number for the "hitPointsMode" field.</summary>
            public const int HitPointsModeFieldNumber = 10;
            private int hitPointsMode_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int HitPointsMode {
              get { return hitPointsMode_; }
              set {
                hitPointsMode_ = value;
              }
            }

            /// <summary>Field number for the "targetPosition" field.</summary>
            public const int TargetPositionFieldNumber = 11;
            private int targetPosition_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int TargetPosition {
              get { return targetPosition_; }
              set {
                targetPosition_ = value;
              }
            }

            /// <summary>Field number for the "drawings" field.</summary>
            public const int DrawingsFieldNumber = 12;
            private static readonly pb::FieldCodec<global::Qwilight.Event.Types.NetDrawing> _repeated_drawings_codec
                = pb::FieldCodec.ForMessage(98, global::Qwilight.Event.Types.NetDrawing.Parser);
            private readonly pbc::RepeatedField<global::Qwilight.Event.Types.NetDrawing> drawings_ = new pbc::RepeatedField<global::Qwilight.Event.Types.NetDrawing>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Qwilight.Event.Types.NetDrawing> Drawings {
              get { return drawings_; }
            }

            /// <summary>Field number for the "drawingComponent" field.</summary>
            public const int DrawingComponentFieldNumber = 13;
            private global::Qwilight.Event.Types.DrawingComponent drawingComponent_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Qwilight.Event.Types.DrawingComponent DrawingComponent {
              get { return drawingComponent_; }
              set {
                drawingComponent_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as CallNetItem);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(CallNetItem other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (AvatarNetStatus != other.AvatarNetStatus) return false;
              if (AvatarID != other.AvatarID) return false;
              if (AvatarName != other.AvatarName) return false;
              if (Stand != other.Stand) return false;
              if (Band != other.Band) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Point, other.Point)) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HitPoints, other.HitPoints)) return false;
              if (IsFailed != other.IsFailed) return false;
              if (LastJudged != other.LastJudged) return false;
              if (HitPointsMode != other.HitPointsMode) return false;
              if (TargetPosition != other.TargetPosition) return false;
              if(!drawings_.Equals(other.drawings_)) return false;
              if (!object.Equals(DrawingComponent, other.DrawingComponent)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (AvatarNetStatus != global::Qwilight.Event.Types.AvatarNetStatus.Default) hash ^= AvatarNetStatus.GetHashCode();
              if (AvatarID.Length != 0) hash ^= AvatarID.GetHashCode();
              if (AvatarName.Length != 0) hash ^= AvatarName.GetHashCode();
              if (Stand != 0) hash ^= Stand.GetHashCode();
              if (Band != 0) hash ^= Band.GetHashCode();
              if (Point != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Point);
              if (HitPoints != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HitPoints);
              if (IsFailed != false) hash ^= IsFailed.GetHashCode();
              if (LastJudged != 0) hash ^= LastJudged.GetHashCode();
              if (HitPointsMode != 0) hash ^= HitPointsMode.GetHashCode();
              if (TargetPosition != 0) hash ^= TargetPosition.GetHashCode();
              hash ^= drawings_.GetHashCode();
              if (drawingComponent_ != null) hash ^= DrawingComponent.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (AvatarNetStatus != global::Qwilight.Event.Types.AvatarNetStatus.Default) {
                output.WriteRawTag(8);
                output.WriteEnum((int) AvatarNetStatus);
              }
              if (AvatarID.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(AvatarID);
              }
              if (AvatarName.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(AvatarName);
              }
              if (Stand != 0) {
                output.WriteRawTag(32);
                output.WriteInt32(Stand);
              }
              if (Band != 0) {
                output.WriteRawTag(40);
                output.WriteInt32(Band);
              }
              if (Point != 0D) {
                output.WriteRawTag(49);
                output.WriteDouble(Point);
              }
              if (HitPoints != 0D) {
                output.WriteRawTag(57);
                output.WriteDouble(HitPoints);
              }
              if (IsFailed != false) {
                output.WriteRawTag(64);
                output.WriteBool(IsFailed);
              }
              if (LastJudged != 0) {
                output.WriteRawTag(72);
                output.WriteInt32(LastJudged);
              }
              if (HitPointsMode != 0) {
                output.WriteRawTag(80);
                output.WriteInt32(HitPointsMode);
              }
              if (TargetPosition != 0) {
                output.WriteRawTag(88);
                output.WriteInt32(TargetPosition);
              }
              drawings_.WriteTo(output, _repeated_drawings_codec);
              if (drawingComponent_ != null) {
                output.WriteRawTag(106);
                output.WriteMessage(DrawingComponent);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (AvatarNetStatus != global::Qwilight.Event.Types.AvatarNetStatus.Default) {
                output.WriteRawTag(8);
                output.WriteEnum((int) AvatarNetStatus);
              }
              if (AvatarID.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(AvatarID);
              }
              if (AvatarName.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(AvatarName);
              }
              if (Stand != 0) {
                output.WriteRawTag(32);
                output.WriteInt32(Stand);
              }
              if (Band != 0) {
                output.WriteRawTag(40);
                output.WriteInt32(Band);
              }
              if (Point != 0D) {
                output.WriteRawTag(49);
                output.WriteDouble(Point);
              }
              if (HitPoints != 0D) {
                output.WriteRawTag(57);
                output.WriteDouble(HitPoints);
              }
              if (IsFailed != false) {
                output.WriteRawTag(64);
                output.WriteBool(IsFailed);
              }
              if (LastJudged != 0) {
                output.WriteRawTag(72);
                output.WriteInt32(LastJudged);
              }
              if (HitPointsMode != 0) {
                output.WriteRawTag(80);
                output.WriteInt32(HitPointsMode);
              }
              if (TargetPosition != 0) {
                output.WriteRawTag(88);
                output.WriteInt32(TargetPosition);
              }
              drawings_.WriteTo(ref output, _repeated_drawings_codec);
              if (drawingComponent_ != null) {
                output.WriteRawTag(106);
                output.WriteMessage(DrawingComponent);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (AvatarNetStatus != global::Qwilight.Event.Types.AvatarNetStatus.Default) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AvatarNetStatus);
              }
              if (AvatarID.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarID);
              }
              if (AvatarName.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarName);
              }
              if (Stand != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stand);
              }
              if (Band != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Band);
              }
              if (Point != 0D) {
                size += 1 + 8;
              }
              if (HitPoints != 0D) {
                size += 1 + 8;
              }
              if (IsFailed != false) {
                size += 1 + 1;
              }
              if (LastJudged != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastJudged);
              }
              if (HitPointsMode != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitPointsMode);
              }
              if (TargetPosition != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetPosition);
              }
              size += drawings_.CalculateSize(_repeated_drawings_codec);
              if (drawingComponent_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(DrawingComponent);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(CallNetItem other) {
              if (other == null) {
                return;
              }
              if (other.AvatarNetStatus != global::Qwilight.Event.Types.AvatarNetStatus.Default) {
                AvatarNetStatus = other.AvatarNetStatus;
              }
              if (other.AvatarID.Length != 0) {
                AvatarID = other.AvatarID;
              }
              if (other.AvatarName.Length != 0) {
                AvatarName = other.AvatarName;
              }
              if (other.Stand != 0) {
                Stand = other.Stand;
              }
              if (other.Band != 0) {
                Band = other.Band;
              }
              if (other.Point != 0D) {
                Point = other.Point;
              }
              if (other.HitPoints != 0D) {
                HitPoints = other.HitPoints;
              }
              if (other.IsFailed != false) {
                IsFailed = other.IsFailed;
              }
              if (other.LastJudged != 0) {
                LastJudged = other.LastJudged;
              }
              if (other.HitPointsMode != 0) {
                HitPointsMode = other.HitPointsMode;
              }
              if (other.TargetPosition != 0) {
                TargetPosition = other.TargetPosition;
              }
              drawings_.Add(other.drawings_);
              if (other.drawingComponent_ != null) {
                if (drawingComponent_ == null) {
                  DrawingComponent = new global::Qwilight.Event.Types.DrawingComponent();
                }
                DrawingComponent.MergeFrom(other.DrawingComponent);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    AvatarNetStatus = (global::Qwilight.Event.Types.AvatarNetStatus) input.ReadEnum();
                    break;
                  }
                  case 18: {
                    AvatarID = input.ReadString();
                    break;
                  }
                  case 26: {
                    AvatarName = input.ReadString();
                    break;
                  }
                  case 32: {
                    Stand = input.ReadInt32();
                    break;
                  }
                  case 40: {
                    Band = input.ReadInt32();
                    break;
                  }
                  case 49: {
                    Point = input.ReadDouble();
                    break;
                  }
                  case 57: {
                    HitPoints = input.ReadDouble();
                    break;
                  }
                  case 64: {
                    IsFailed = input.ReadBool();
                    break;
                  }
                  case 72: {
                    LastJudged = input.ReadInt32();
                    break;
                  }
                  case 80: {
                    HitPointsMode = input.ReadInt32();
                    break;
                  }
                  case 88: {
                    TargetPosition = input.ReadInt32();
                    break;
                  }
                  case 98: {
                    drawings_.AddEntriesFrom(input, _repeated_drawings_codec);
                    break;
                  }
                  case 106: {
                    if (drawingComponent_ == null) {
                      DrawingComponent = new global::Qwilight.Event.Types.DrawingComponent();
                    }
                    input.ReadMessage(DrawingComponent);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    AvatarNetStatus = (global::Qwilight.Event.Types.AvatarNetStatus) input.ReadEnum();
                    break;
                  }
                  case 18: {
                    AvatarID = input.ReadString();
                    break;
                  }
                  case 26: {
                    AvatarName = input.ReadString();
                    break;
                  }
                  case 32: {
                    Stand = input.ReadInt32();
                    break;
                  }
                  case 40: {
                    Band = input.ReadInt32();
                    break;
                  }
                  case 49: {
                    Point = input.ReadDouble();
                    break;
                  }
                  case 57: {
                    HitPoints = input.ReadDouble();
                    break;
                  }
                  case 64: {
                    IsFailed = input.ReadBool();
                    break;
                  }
                  case 72: {
                    LastJudged = input.ReadInt32();
                    break;
                  }
                  case 80: {
                    HitPointsMode = input.ReadInt32();
                    break;
                  }
                  case 88: {
                    TargetPosition = input.ReadInt32();
                    break;
                  }
                  case 98: {
                    drawings_.AddEntriesFrom(ref input, _repeated_drawings_codec);
                    break;
                  }
                  case 106: {
                    if (drawingComponent_ == null) {
                      DrawingComponent = new global::Qwilight.Event.Types.DrawingComponent();
                    }
                    input.ReadMessage(DrawingComponent);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class QwilightCallNet : pb::IMessage<QwilightCallNet>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<QwilightCallNet> _parser = new pb::MessageParser<QwilightCallNet>(() => new QwilightCallNet());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<QwilightCallNet> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Qwilight.Event.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightCallNet() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightCallNet(QwilightCallNet other) : this() {
          siteID_ = other.siteID_;
          handlerID_ = other.handlerID_;
          avatarNetStatus_ = other.avatarNetStatus_;
          stand_ = other.stand_;
          highestBand_ = other.highestBand_;
          point_ = other.point_;
          hitPoints_ = other.hitPoints_;
          isFailed_ = other.isFailed_;
          lastJudged_ = other.lastJudged_;
          drawings_ = other.drawings_.Clone();
          drawingComponent_ = other.drawingComponent_ != null ? other.drawingComponent_.Clone() : null;
          title_ = other.title_;
          artist_ = other.artist_;
          genre_ = other.genre_;
          level_ = other.level_;
          levelText_ = other.levelText_;
          wantLevelID_ = other.wantLevelID_;
          autoMode_ = other.autoMode_;
          noteSaltMode_ = other.noteSaltMode_;
          audioMultiplier_ = other.audioMultiplier_;
          faintNoteMode_ = other.faintNoteMode_;
          judgmentMode_ = other.judgmentMode_;
          hitPointsMode_ = other.hitPointsMode_;
          noteMobilityMode_ = other.noteMobilityMode_;
          longNoteMode_ = other.longNoteMode_;
          inputFavorMode_ = other.inputFavorMode_;
          noteModifyMode_ = other.noteModifyMode_;
          bpmMode_ = other.bpmMode_;
          waveMode_ = other.waveMode_;
          setNoteMode_ = other.setNoteMode_;
          lowestJudgmentConditionMode_ = other.lowestJudgmentConditionMode_;
          totalNotes_ = other.totalNotes_;
          judgmentStage_ = other.judgmentStage_;
          hitPointsValue_ = other.hitPointsValue_;
          highestInputCount_ = other.highestInputCount_;
          length_ = other.length_;
          bpm_ = other.bpm_;
          multiplier_ = other.multiplier_;
          inputMode_ = other.inputMode_;
          highestJudgment0_ = other.highestJudgment0_;
          higherJudgment0_ = other.higherJudgment0_;
          highJudgment0_ = other.highJudgment0_;
          lowJudgment0_ = other.lowJudgment0_;
          lowerJudgment0_ = other.lowerJudgment0_;
          lowestJudgment0_ = other.lowestJudgment0_;
          highestJudgment1_ = other.highestJudgment1_;
          higherJudgment1_ = other.higherJudgment1_;
          highJudgment1_ = other.highJudgment1_;
          lowJudgment1_ = other.lowJudgment1_;
          lowerJudgment1_ = other.lowerJudgment1_;
          lowestJudgment1_ = other.lowestJudgment1_;
          highestJudgment_ = other.highestJudgment_;
          higherJudgment_ = other.higherJudgment_;
          highJudgment_ = other.highJudgment_;
          lowJudgment_ = other.lowJudgment_;
          lowerJudgment_ = other.lowerJudgment_;
          lowestJudgment_ = other.lowestJudgment_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightCallNet Clone() {
          return new QwilightCallNet(this);
        }

        /// <summary>Field number for the "siteID" field.</summary>
        public const int SiteIDFieldNumber = 1;
        private string siteID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string SiteID {
          get { return siteID_; }
          set {
            siteID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "handlerID" field.</summary>
        public const int HandlerIDFieldNumber = 2;
        private string handlerID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string HandlerID {
          get { return handlerID_; }
          set {
            handlerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avatarNetStatus" field.</summary>
        public const int AvatarNetStatusFieldNumber = 3;
        private global::Qwilight.Event.Types.AvatarNetStatus avatarNetStatus_ = global::Qwilight.Event.Types.AvatarNetStatus.Default;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Qwilight.Event.Types.AvatarNetStatus AvatarNetStatus {
          get { return avatarNetStatus_; }
          set {
            avatarNetStatus_ = value;
          }
        }

        /// <summary>Field number for the "stand" field.</summary>
        public const int StandFieldNumber = 4;
        private int stand_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Stand {
          get { return stand_; }
          set {
            stand_ = value;
          }
        }

        /// <summary>Field number for the "highestBand" field.</summary>
        public const int HighestBandFieldNumber = 5;
        private int highestBand_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int HighestBand {
          get { return highestBand_; }
          set {
            highestBand_ = value;
          }
        }

        /// <summary>Field number for the "point" field.</summary>
        public const int PointFieldNumber = 6;
        private double point_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Point {
          get { return point_; }
          set {
            point_ = value;
          }
        }

        /// <summary>Field number for the "hitPoints" field.</summary>
        public const int HitPointsFieldNumber = 7;
        private double hitPoints_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double HitPoints {
          get { return hitPoints_; }
          set {
            hitPoints_ = value;
          }
        }

        /// <summary>Field number for the "isFailed" field.</summary>
        public const int IsFailedFieldNumber = 8;
        private bool isFailed_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool IsFailed {
          get { return isFailed_; }
          set {
            isFailed_ = value;
          }
        }

        /// <summary>Field number for the "lastJudged" field.</summary>
        public const int LastJudgedFieldNumber = 9;
        private int lastJudged_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LastJudged {
          get { return lastJudged_; }
          set {
            lastJudged_ = value;
          }
        }

        /// <summary>Field number for the "drawings" field.</summary>
        public const int DrawingsFieldNumber = 10;
        private static readonly pb::FieldCodec<global::Qwilight.Event.Types.NetDrawing> _repeated_drawings_codec
            = pb::FieldCodec.ForMessage(82, global::Qwilight.Event.Types.NetDrawing.Parser);
        private readonly pbc::RepeatedField<global::Qwilight.Event.Types.NetDrawing> drawings_ = new pbc::RepeatedField<global::Qwilight.Event.Types.NetDrawing>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Qwilight.Event.Types.NetDrawing> Drawings {
          get { return drawings_; }
        }

        /// <summary>Field number for the "drawingComponent" field.</summary>
        public const int DrawingComponentFieldNumber = 11;
        private global::Qwilight.Event.Types.DrawingComponent drawingComponent_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Qwilight.Event.Types.DrawingComponent DrawingComponent {
          get { return drawingComponent_; }
          set {
            drawingComponent_ = value;
          }
        }

        /// <summary>Field number for the "title" field.</summary>
        public const int TitleFieldNumber = 12;
        private string title_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Title {
          get { return title_; }
          set {
            title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "artist" field.</summary>
        public const int ArtistFieldNumber = 13;
        private string artist_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Artist {
          get { return artist_; }
          set {
            artist_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "genre" field.</summary>
        public const int GenreFieldNumber = 14;
        private string genre_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Genre {
          get { return genre_; }
          set {
            genre_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "level" field.</summary>
        public const int LevelFieldNumber = 15;
        private int level_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Level {
          get { return level_; }
          set {
            level_ = value;
          }
        }

        /// <summary>Field number for the "levelText" field.</summary>
        public const int LevelTextFieldNumber = 16;
        private string levelText_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string LevelText {
          get { return levelText_; }
          set {
            levelText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "wantLevelID" field.</summary>
        public const int WantLevelIDFieldNumber = 17;
        private string wantLevelID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string WantLevelID {
          get { return wantLevelID_; }
          set {
            wantLevelID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "autoMode" field.</summary>
        public const int AutoModeFieldNumber = 18;
        private int autoMode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int AutoMode {
          get { return autoMode_; }
          set {
            autoMode_ = value;
          }
        }

        /// <summary>Field number for the "noteSaltMode" field.</summary>
        public const int NoteSaltModeFieldNumber = 19;
        private int noteSaltMode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int NoteSaltMode {
          get { return noteSaltMode_; }
          set {
            noteSaltMode_ = value;
          }
        }

        /// <summary>Field number for the "audioMultiplier" field.</summary>
        public const int AudioMultiplierFieldNumber = 20;
        private double audioMultiplier_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double AudioMultiplier {
          get { return audioMultiplier_; }
          set {
            audioMultiplier_ = value;
          }
        }

        /// <summary>Field number for the "faintNoteMode" field.</summary>
        public const int FaintNoteModeFieldNumber = 21;
        private int faintNoteMode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int FaintNoteMode {
          get { return faintNoteMode_; }
          set {
            faintNoteMode_ = value;
          }
        }

        /// <summary>Field number for the "judgmentMode" field.</summary>
        public const int JudgmentModeFieldNumber = 22;
        private int judgmentMode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int JudgmentMode {
          get { return judgmentMode_; }
          set {
            judgmentMode_ = value;
          }
        }

        /// <summary>Field number for the "hitPointsMode" field.</summary>
        public const int HitPointsModeFieldNumber = 23;
        private int hitPointsMode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int HitPointsMode {
          get { return hitPointsMode_; }
          set {
            hitPointsMode_ = value;
          }
        }

        /// <summary>Field number for the "noteMobilityMode" field.</summary>
        public const int NoteMobilityModeFieldNumber = 24;
        private int noteMobilityMode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int NoteMobilityMode {
          get { return noteMobilityMode_; }
          set {
            noteMobilityMode_ = value;
          }
        }

        /// <summary>Field number for the "longNoteMode" field.</summary>
        public const int LongNoteModeFieldNumber = 25;
        private int longNoteMode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LongNoteMode {
          get { return longNoteMode_; }
          set {
            longNoteMode_ = value;
          }
        }

        /// <summary>Field number for the "inputFavorMode" field.</summary>
        public const int InputFavorModeFieldNumber = 26;
        private int inputFavorMode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int InputFavorMode {
          get { return inputFavorMode_; }
          set {
            inputFavorMode_ = value;
          }
        }

        /// <summary>Field number for the "noteModifyMode" field.</summary>
        public const int NoteModifyModeFieldNumber = 27;
        private int noteModifyMode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int NoteModifyMode {
          get { return noteModifyMode_; }
          set {
            noteModifyMode_ = value;
          }
        }

        /// <summary>Field number for the "bpmMode" field.</summary>
        public const int BpmModeFieldNumber = 28;
        private int bpmMode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int BpmMode {
          get { return bpmMode_; }
          set {
            bpmMode_ = value;
          }
        }

        /// <summary>Field number for the "waveMode" field.</summary>
        public const int WaveModeFieldNumber = 29;
        private int waveMode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int WaveMode {
          get { return waveMode_; }
          set {
            waveMode_ = value;
          }
        }

        /// <summary>Field number for the "setNoteMode" field.</summary>
        public const int SetNoteModeFieldNumber = 30;
        private int setNoteMode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int SetNoteMode {
          get { return setNoteMode_; }
          set {
            setNoteMode_ = value;
          }
        }

        /// <summary>Field number for the "lowestJudgmentConditionMode" field.</summary>
        public const int LowestJudgmentConditionModeFieldNumber = 31;
        private int lowestJudgmentConditionMode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LowestJudgmentConditionMode {
          get { return lowestJudgmentConditionMode_; }
          set {
            lowestJudgmentConditionMode_ = value;
          }
        }

        /// <summary>Field number for the "totalNotes" field.</summary>
        public const int TotalNotesFieldNumber = 32;
        private int totalNotes_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int TotalNotes {
          get { return totalNotes_; }
          set {
            totalNotes_ = value;
          }
        }

        /// <summary>Field number for the "judgmentStage" field.</summary>
        public const int JudgmentStageFieldNumber = 33;
        private double judgmentStage_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double JudgmentStage {
          get { return judgmentStage_; }
          set {
            judgmentStage_ = value;
          }
        }

        /// <summary>Field number for the "hitPointsValue" field.</summary>
        public const int HitPointsValueFieldNumber = 34;
        private double hitPointsValue_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double HitPointsValue {
          get { return hitPointsValue_; }
          set {
            hitPointsValue_ = value;
          }
        }

        /// <summary>Field number for the "highestInputCount" field.</summary>
        public const int HighestInputCountFieldNumber = 35;
        private int highestInputCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int HighestInputCount {
          get { return highestInputCount_; }
          set {
            highestInputCount_ = value;
          }
        }

        /// <summary>Field number for the "length" field.</summary>
        public const int LengthFieldNumber = 36;
        private double length_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Length {
          get { return length_; }
          set {
            length_ = value;
          }
        }

        /// <summary>Field number for the "bpm" field.</summary>
        public const int BpmFieldNumber = 37;
        private double bpm_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Bpm {
          get { return bpm_; }
          set {
            bpm_ = value;
          }
        }

        /// <summary>Field number for the "multiplier" field.</summary>
        public const int MultiplierFieldNumber = 38;
        private double multiplier_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Multiplier {
          get { return multiplier_; }
          set {
            multiplier_ = value;
          }
        }

        /// <summary>Field number for the "inputMode" field.</summary>
        public const int InputModeFieldNumber = 39;
        private int inputMode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int InputMode {
          get { return inputMode_; }
          set {
            inputMode_ = value;
          }
        }

        /// <summary>Field number for the "highestJudgment0" field.</summary>
        public const int HighestJudgment0FieldNumber = 40;
        private double highestJudgment0_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double HighestJudgment0 {
          get { return highestJudgment0_; }
          set {
            highestJudgment0_ = value;
          }
        }

        /// <summary>Field number for the "higherJudgment0" field.</summary>
        public const int HigherJudgment0FieldNumber = 41;
        private double higherJudgment0_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double HigherJudgment0 {
          get { return higherJudgment0_; }
          set {
            higherJudgment0_ = value;
          }
        }

        /// <summary>Field number for the "highJudgment0" field.</summary>
        public const int HighJudgment0FieldNumber = 42;
        private double highJudgment0_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double HighJudgment0 {
          get { return highJudgment0_; }
          set {
            highJudgment0_ = value;
          }
        }

        /// <summary>Field number for the "lowJudgment0" field.</summary>
        public const int LowJudgment0FieldNumber = 43;
        private double lowJudgment0_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LowJudgment0 {
          get { return lowJudgment0_; }
          set {
            lowJudgment0_ = value;
          }
        }

        /// <summary>Field number for the "lowerJudgment0" field.</summary>
        public const int LowerJudgment0FieldNumber = 44;
        private double lowerJudgment0_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LowerJudgment0 {
          get { return lowerJudgment0_; }
          set {
            lowerJudgment0_ = value;
          }
        }

        /// <summary>Field number for the "lowestJudgment0" field.</summary>
        public const int LowestJudgment0FieldNumber = 45;
        private double lowestJudgment0_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LowestJudgment0 {
          get { return lowestJudgment0_; }
          set {
            lowestJudgment0_ = value;
          }
        }

        /// <summary>Field number for the "highestJudgment1" field.</summary>
        public const int HighestJudgment1FieldNumber = 46;
        private double highestJudgment1_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double HighestJudgment1 {
          get { return highestJudgment1_; }
          set {
            highestJudgment1_ = value;
          }
        }

        /// <summary>Field number for the "higherJudgment1" field.</summary>
        public const int HigherJudgment1FieldNumber = 47;
        private double higherJudgment1_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double HigherJudgment1 {
          get { return higherJudgment1_; }
          set {
            higherJudgment1_ = value;
          }
        }

        /// <summary>Field number for the "highJudgment1" field.</summary>
        public const int HighJudgment1FieldNumber = 48;
        private double highJudgment1_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double HighJudgment1 {
          get { return highJudgment1_; }
          set {
            highJudgment1_ = value;
          }
        }

        /// <summary>Field number for the "lowJudgment1" field.</summary>
        public const int LowJudgment1FieldNumber = 49;
        private double lowJudgment1_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LowJudgment1 {
          get { return lowJudgment1_; }
          set {
            lowJudgment1_ = value;
          }
        }

        /// <summary>Field number for the "lowerJudgment1" field.</summary>
        public const int LowerJudgment1FieldNumber = 50;
        private double lowerJudgment1_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LowerJudgment1 {
          get { return lowerJudgment1_; }
          set {
            lowerJudgment1_ = value;
          }
        }

        /// <summary>Field number for the "lowestJudgment1" field.</summary>
        public const int LowestJudgment1FieldNumber = 51;
        private double lowestJudgment1_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LowestJudgment1 {
          get { return lowestJudgment1_; }
          set {
            lowestJudgment1_ = value;
          }
        }

        /// <summary>Field number for the "highestJudgment" field.</summary>
        public const int HighestJudgmentFieldNumber = 52;
        private int highestJudgment_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int HighestJudgment {
          get { return highestJudgment_; }
          set {
            highestJudgment_ = value;
          }
        }

        /// <summary>Field number for the "higherJudgment" field.</summary>
        public const int HigherJudgmentFieldNumber = 53;
        private int higherJudgment_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int HigherJudgment {
          get { return higherJudgment_; }
          set {
            higherJudgment_ = value;
          }
        }

        /// <summary>Field number for the "highJudgment" field.</summary>
        public const int HighJudgmentFieldNumber = 54;
        private int highJudgment_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int HighJudgment {
          get { return highJudgment_; }
          set {
            highJudgment_ = value;
          }
        }

        /// <summary>Field number for the "lowJudgment" field.</summary>
        public const int LowJudgmentFieldNumber = 55;
        private int lowJudgment_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LowJudgment {
          get { return lowJudgment_; }
          set {
            lowJudgment_ = value;
          }
        }

        /// <summary>Field number for the "lowerJudgment" field.</summary>
        public const int LowerJudgmentFieldNumber = 56;
        private int lowerJudgment_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LowerJudgment {
          get { return lowerJudgment_; }
          set {
            lowerJudgment_ = value;
          }
        }

        /// <summary>Field number for the "lowestJudgment" field.</summary>
        public const int LowestJudgmentFieldNumber = 57;
        private int lowestJudgment_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LowestJudgment {
          get { return lowestJudgment_; }
          set {
            lowestJudgment_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as QwilightCallNet);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(QwilightCallNet other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SiteID != other.SiteID) return false;
          if (HandlerID != other.HandlerID) return false;
          if (AvatarNetStatus != other.AvatarNetStatus) return false;
          if (Stand != other.Stand) return false;
          if (HighestBand != other.HighestBand) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Point, other.Point)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HitPoints, other.HitPoints)) return false;
          if (IsFailed != other.IsFailed) return false;
          if (LastJudged != other.LastJudged) return false;
          if(!drawings_.Equals(other.drawings_)) return false;
          if (!object.Equals(DrawingComponent, other.DrawingComponent)) return false;
          if (Title != other.Title) return false;
          if (Artist != other.Artist) return false;
          if (Genre != other.Genre) return false;
          if (Level != other.Level) return false;
          if (LevelText != other.LevelText) return false;
          if (WantLevelID != other.WantLevelID) return false;
          if (AutoMode != other.AutoMode) return false;
          if (NoteSaltMode != other.NoteSaltMode) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AudioMultiplier, other.AudioMultiplier)) return false;
          if (FaintNoteMode != other.FaintNoteMode) return false;
          if (JudgmentMode != other.JudgmentMode) return false;
          if (HitPointsMode != other.HitPointsMode) return false;
          if (NoteMobilityMode != other.NoteMobilityMode) return false;
          if (LongNoteMode != other.LongNoteMode) return false;
          if (InputFavorMode != other.InputFavorMode) return false;
          if (NoteModifyMode != other.NoteModifyMode) return false;
          if (BpmMode != other.BpmMode) return false;
          if (WaveMode != other.WaveMode) return false;
          if (SetNoteMode != other.SetNoteMode) return false;
          if (LowestJudgmentConditionMode != other.LowestJudgmentConditionMode) return false;
          if (TotalNotes != other.TotalNotes) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(JudgmentStage, other.JudgmentStage)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HitPointsValue, other.HitPointsValue)) return false;
          if (HighestInputCount != other.HighestInputCount) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Length, other.Length)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Bpm, other.Bpm)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Multiplier, other.Multiplier)) return false;
          if (InputMode != other.InputMode) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HighestJudgment0, other.HighestJudgment0)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HigherJudgment0, other.HigherJudgment0)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HighJudgment0, other.HighJudgment0)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LowJudgment0, other.LowJudgment0)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LowerJudgment0, other.LowerJudgment0)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LowestJudgment0, other.LowestJudgment0)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HighestJudgment1, other.HighestJudgment1)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HigherJudgment1, other.HigherJudgment1)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HighJudgment1, other.HighJudgment1)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LowJudgment1, other.LowJudgment1)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LowerJudgment1, other.LowerJudgment1)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LowestJudgment1, other.LowestJudgment1)) return false;
          if (HighestJudgment != other.HighestJudgment) return false;
          if (HigherJudgment != other.HigherJudgment) return false;
          if (HighJudgment != other.HighJudgment) return false;
          if (LowJudgment != other.LowJudgment) return false;
          if (LowerJudgment != other.LowerJudgment) return false;
          if (LowestJudgment != other.LowestJudgment) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (SiteID.Length != 0) hash ^= SiteID.GetHashCode();
          if (HandlerID.Length != 0) hash ^= HandlerID.GetHashCode();
          if (AvatarNetStatus != global::Qwilight.Event.Types.AvatarNetStatus.Default) hash ^= AvatarNetStatus.GetHashCode();
          if (Stand != 0) hash ^= Stand.GetHashCode();
          if (HighestBand != 0) hash ^= HighestBand.GetHashCode();
          if (Point != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Point);
          if (HitPoints != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HitPoints);
          if (IsFailed != false) hash ^= IsFailed.GetHashCode();
          if (LastJudged != 0) hash ^= LastJudged.GetHashCode();
          hash ^= drawings_.GetHashCode();
          if (drawingComponent_ != null) hash ^= DrawingComponent.GetHashCode();
          if (Title.Length != 0) hash ^= Title.GetHashCode();
          if (Artist.Length != 0) hash ^= Artist.GetHashCode();
          if (Genre.Length != 0) hash ^= Genre.GetHashCode();
          if (Level != 0) hash ^= Level.GetHashCode();
          if (LevelText.Length != 0) hash ^= LevelText.GetHashCode();
          if (WantLevelID.Length != 0) hash ^= WantLevelID.GetHashCode();
          if (AutoMode != 0) hash ^= AutoMode.GetHashCode();
          if (NoteSaltMode != 0) hash ^= NoteSaltMode.GetHashCode();
          if (AudioMultiplier != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AudioMultiplier);
          if (FaintNoteMode != 0) hash ^= FaintNoteMode.GetHashCode();
          if (JudgmentMode != 0) hash ^= JudgmentMode.GetHashCode();
          if (HitPointsMode != 0) hash ^= HitPointsMode.GetHashCode();
          if (NoteMobilityMode != 0) hash ^= NoteMobilityMode.GetHashCode();
          if (LongNoteMode != 0) hash ^= LongNoteMode.GetHashCode();
          if (InputFavorMode != 0) hash ^= InputFavorMode.GetHashCode();
          if (NoteModifyMode != 0) hash ^= NoteModifyMode.GetHashCode();
          if (BpmMode != 0) hash ^= BpmMode.GetHashCode();
          if (WaveMode != 0) hash ^= WaveMode.GetHashCode();
          if (SetNoteMode != 0) hash ^= SetNoteMode.GetHashCode();
          if (LowestJudgmentConditionMode != 0) hash ^= LowestJudgmentConditionMode.GetHashCode();
          if (TotalNotes != 0) hash ^= TotalNotes.GetHashCode();
          if (JudgmentStage != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(JudgmentStage);
          if (HitPointsValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HitPointsValue);
          if (HighestInputCount != 0) hash ^= HighestInputCount.GetHashCode();
          if (Length != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Length);
          if (Bpm != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Bpm);
          if (Multiplier != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Multiplier);
          if (InputMode != 0) hash ^= InputMode.GetHashCode();
          if (HighestJudgment0 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HighestJudgment0);
          if (HigherJudgment0 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HigherJudgment0);
          if (HighJudgment0 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HighJudgment0);
          if (LowJudgment0 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LowJudgment0);
          if (LowerJudgment0 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LowerJudgment0);
          if (LowestJudgment0 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LowestJudgment0);
          if (HighestJudgment1 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HighestJudgment1);
          if (HigherJudgment1 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HigherJudgment1);
          if (HighJudgment1 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HighJudgment1);
          if (LowJudgment1 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LowJudgment1);
          if (LowerJudgment1 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LowerJudgment1);
          if (LowestJudgment1 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LowestJudgment1);
          if (HighestJudgment != 0) hash ^= HighestJudgment.GetHashCode();
          if (HigherJudgment != 0) hash ^= HigherJudgment.GetHashCode();
          if (HighJudgment != 0) hash ^= HighJudgment.GetHashCode();
          if (LowJudgment != 0) hash ^= LowJudgment.GetHashCode();
          if (LowerJudgment != 0) hash ^= LowerJudgment.GetHashCode();
          if (LowestJudgment != 0) hash ^= LowestJudgment.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (SiteID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SiteID);
          }
          if (HandlerID.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(HandlerID);
          }
          if (AvatarNetStatus != global::Qwilight.Event.Types.AvatarNetStatus.Default) {
            output.WriteRawTag(24);
            output.WriteEnum((int) AvatarNetStatus);
          }
          if (Stand != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Stand);
          }
          if (HighestBand != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(HighestBand);
          }
          if (Point != 0D) {
            output.WriteRawTag(49);
            output.WriteDouble(Point);
          }
          if (HitPoints != 0D) {
            output.WriteRawTag(57);
            output.WriteDouble(HitPoints);
          }
          if (IsFailed != false) {
            output.WriteRawTag(64);
            output.WriteBool(IsFailed);
          }
          if (LastJudged != 0) {
            output.WriteRawTag(72);
            output.WriteInt32(LastJudged);
          }
          drawings_.WriteTo(output, _repeated_drawings_codec);
          if (drawingComponent_ != null) {
            output.WriteRawTag(90);
            output.WriteMessage(DrawingComponent);
          }
          if (Title.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(Title);
          }
          if (Artist.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(Artist);
          }
          if (Genre.Length != 0) {
            output.WriteRawTag(114);
            output.WriteString(Genre);
          }
          if (Level != 0) {
            output.WriteRawTag(120);
            output.WriteInt32(Level);
          }
          if (LevelText.Length != 0) {
            output.WriteRawTag(130, 1);
            output.WriteString(LevelText);
          }
          if (WantLevelID.Length != 0) {
            output.WriteRawTag(138, 1);
            output.WriteString(WantLevelID);
          }
          if (AutoMode != 0) {
            output.WriteRawTag(144, 1);
            output.WriteInt32(AutoMode);
          }
          if (NoteSaltMode != 0) {
            output.WriteRawTag(152, 1);
            output.WriteInt32(NoteSaltMode);
          }
          if (AudioMultiplier != 0D) {
            output.WriteRawTag(161, 1);
            output.WriteDouble(AudioMultiplier);
          }
          if (FaintNoteMode != 0) {
            output.WriteRawTag(168, 1);
            output.WriteInt32(FaintNoteMode);
          }
          if (JudgmentMode != 0) {
            output.WriteRawTag(176, 1);
            output.WriteInt32(JudgmentMode);
          }
          if (HitPointsMode != 0) {
            output.WriteRawTag(184, 1);
            output.WriteInt32(HitPointsMode);
          }
          if (NoteMobilityMode != 0) {
            output.WriteRawTag(192, 1);
            output.WriteInt32(NoteMobilityMode);
          }
          if (LongNoteMode != 0) {
            output.WriteRawTag(200, 1);
            output.WriteInt32(LongNoteMode);
          }
          if (InputFavorMode != 0) {
            output.WriteRawTag(208, 1);
            output.WriteInt32(InputFavorMode);
          }
          if (NoteModifyMode != 0) {
            output.WriteRawTag(216, 1);
            output.WriteInt32(NoteModifyMode);
          }
          if (BpmMode != 0) {
            output.WriteRawTag(224, 1);
            output.WriteInt32(BpmMode);
          }
          if (WaveMode != 0) {
            output.WriteRawTag(232, 1);
            output.WriteInt32(WaveMode);
          }
          if (SetNoteMode != 0) {
            output.WriteRawTag(240, 1);
            output.WriteInt32(SetNoteMode);
          }
          if (LowestJudgmentConditionMode != 0) {
            output.WriteRawTag(248, 1);
            output.WriteInt32(LowestJudgmentConditionMode);
          }
          if (TotalNotes != 0) {
            output.WriteRawTag(128, 2);
            output.WriteInt32(TotalNotes);
          }
          if (JudgmentStage != 0D) {
            output.WriteRawTag(137, 2);
            output.WriteDouble(JudgmentStage);
          }
          if (HitPointsValue != 0D) {
            output.WriteRawTag(145, 2);
            output.WriteDouble(HitPointsValue);
          }
          if (HighestInputCount != 0) {
            output.WriteRawTag(152, 2);
            output.WriteInt32(HighestInputCount);
          }
          if (Length != 0D) {
            output.WriteRawTag(161, 2);
            output.WriteDouble(Length);
          }
          if (Bpm != 0D) {
            output.WriteRawTag(169, 2);
            output.WriteDouble(Bpm);
          }
          if (Multiplier != 0D) {
            output.WriteRawTag(177, 2);
            output.WriteDouble(Multiplier);
          }
          if (InputMode != 0) {
            output.WriteRawTag(184, 2);
            output.WriteInt32(InputMode);
          }
          if (HighestJudgment0 != 0D) {
            output.WriteRawTag(193, 2);
            output.WriteDouble(HighestJudgment0);
          }
          if (HigherJudgment0 != 0D) {
            output.WriteRawTag(201, 2);
            output.WriteDouble(HigherJudgment0);
          }
          if (HighJudgment0 != 0D) {
            output.WriteRawTag(209, 2);
            output.WriteDouble(HighJudgment0);
          }
          if (LowJudgment0 != 0D) {
            output.WriteRawTag(217, 2);
            output.WriteDouble(LowJudgment0);
          }
          if (LowerJudgment0 != 0D) {
            output.WriteRawTag(225, 2);
            output.WriteDouble(LowerJudgment0);
          }
          if (LowestJudgment0 != 0D) {
            output.WriteRawTag(233, 2);
            output.WriteDouble(LowestJudgment0);
          }
          if (HighestJudgment1 != 0D) {
            output.WriteRawTag(241, 2);
            output.WriteDouble(HighestJudgment1);
          }
          if (HigherJudgment1 != 0D) {
            output.WriteRawTag(249, 2);
            output.WriteDouble(HigherJudgment1);
          }
          if (HighJudgment1 != 0D) {
            output.WriteRawTag(129, 3);
            output.WriteDouble(HighJudgment1);
          }
          if (LowJudgment1 != 0D) {
            output.WriteRawTag(137, 3);
            output.WriteDouble(LowJudgment1);
          }
          if (LowerJudgment1 != 0D) {
            output.WriteRawTag(145, 3);
            output.WriteDouble(LowerJudgment1);
          }
          if (LowestJudgment1 != 0D) {
            output.WriteRawTag(153, 3);
            output.WriteDouble(LowestJudgment1);
          }
          if (HighestJudgment != 0) {
            output.WriteRawTag(160, 3);
            output.WriteInt32(HighestJudgment);
          }
          if (HigherJudgment != 0) {
            output.WriteRawTag(168, 3);
            output.WriteInt32(HigherJudgment);
          }
          if (HighJudgment != 0) {
            output.WriteRawTag(176, 3);
            output.WriteInt32(HighJudgment);
          }
          if (LowJudgment != 0) {
            output.WriteRawTag(184, 3);
            output.WriteInt32(LowJudgment);
          }
          if (LowerJudgment != 0) {
            output.WriteRawTag(192, 3);
            output.WriteInt32(LowerJudgment);
          }
          if (LowestJudgment != 0) {
            output.WriteRawTag(200, 3);
            output.WriteInt32(LowestJudgment);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (SiteID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SiteID);
          }
          if (HandlerID.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(HandlerID);
          }
          if (AvatarNetStatus != global::Qwilight.Event.Types.AvatarNetStatus.Default) {
            output.WriteRawTag(24);
            output.WriteEnum((int) AvatarNetStatus);
          }
          if (Stand != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Stand);
          }
          if (HighestBand != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(HighestBand);
          }
          if (Point != 0D) {
            output.WriteRawTag(49);
            output.WriteDouble(Point);
          }
          if (HitPoints != 0D) {
            output.WriteRawTag(57);
            output.WriteDouble(HitPoints);
          }
          if (IsFailed != false) {
            output.WriteRawTag(64);
            output.WriteBool(IsFailed);
          }
          if (LastJudged != 0) {
            output.WriteRawTag(72);
            output.WriteInt32(LastJudged);
          }
          drawings_.WriteTo(ref output, _repeated_drawings_codec);
          if (drawingComponent_ != null) {
            output.WriteRawTag(90);
            output.WriteMessage(DrawingComponent);
          }
          if (Title.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(Title);
          }
          if (Artist.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(Artist);
          }
          if (Genre.Length != 0) {
            output.WriteRawTag(114);
            output.WriteString(Genre);
          }
          if (Level != 0) {
            output.WriteRawTag(120);
            output.WriteInt32(Level);
          }
          if (LevelText.Length != 0) {
            output.WriteRawTag(130, 1);
            output.WriteString(LevelText);
          }
          if (WantLevelID.Length != 0) {
            output.WriteRawTag(138, 1);
            output.WriteString(WantLevelID);
          }
          if (AutoMode != 0) {
            output.WriteRawTag(144, 1);
            output.WriteInt32(AutoMode);
          }
          if (NoteSaltMode != 0) {
            output.WriteRawTag(152, 1);
            output.WriteInt32(NoteSaltMode);
          }
          if (AudioMultiplier != 0D) {
            output.WriteRawTag(161, 1);
            output.WriteDouble(AudioMultiplier);
          }
          if (FaintNoteMode != 0) {
            output.WriteRawTag(168, 1);
            output.WriteInt32(FaintNoteMode);
          }
          if (JudgmentMode != 0) {
            output.WriteRawTag(176, 1);
            output.WriteInt32(JudgmentMode);
          }
          if (HitPointsMode != 0) {
            output.WriteRawTag(184, 1);
            output.WriteInt32(HitPointsMode);
          }
          if (NoteMobilityMode != 0) {
            output.WriteRawTag(192, 1);
            output.WriteInt32(NoteMobilityMode);
          }
          if (LongNoteMode != 0) {
            output.WriteRawTag(200, 1);
            output.WriteInt32(LongNoteMode);
          }
          if (InputFavorMode != 0) {
            output.WriteRawTag(208, 1);
            output.WriteInt32(InputFavorMode);
          }
          if (NoteModifyMode != 0) {
            output.WriteRawTag(216, 1);
            output.WriteInt32(NoteModifyMode);
          }
          if (BpmMode != 0) {
            output.WriteRawTag(224, 1);
            output.WriteInt32(BpmMode);
          }
          if (WaveMode != 0) {
            output.WriteRawTag(232, 1);
            output.WriteInt32(WaveMode);
          }
          if (SetNoteMode != 0) {
            output.WriteRawTag(240, 1);
            output.WriteInt32(SetNoteMode);
          }
          if (LowestJudgmentConditionMode != 0) {
            output.WriteRawTag(248, 1);
            output.WriteInt32(LowestJudgmentConditionMode);
          }
          if (TotalNotes != 0) {
            output.WriteRawTag(128, 2);
            output.WriteInt32(TotalNotes);
          }
          if (JudgmentStage != 0D) {
            output.WriteRawTag(137, 2);
            output.WriteDouble(JudgmentStage);
          }
          if (HitPointsValue != 0D) {
            output.WriteRawTag(145, 2);
            output.WriteDouble(HitPointsValue);
          }
          if (HighestInputCount != 0) {
            output.WriteRawTag(152, 2);
            output.WriteInt32(HighestInputCount);
          }
          if (Length != 0D) {
            output.WriteRawTag(161, 2);
            output.WriteDouble(Length);
          }
          if (Bpm != 0D) {
            output.WriteRawTag(169, 2);
            output.WriteDouble(Bpm);
          }
          if (Multiplier != 0D) {
            output.WriteRawTag(177, 2);
            output.WriteDouble(Multiplier);
          }
          if (InputMode != 0) {
            output.WriteRawTag(184, 2);
            output.WriteInt32(InputMode);
          }
          if (HighestJudgment0 != 0D) {
            output.WriteRawTag(193, 2);
            output.WriteDouble(HighestJudgment0);
          }
          if (HigherJudgment0 != 0D) {
            output.WriteRawTag(201, 2);
            output.WriteDouble(HigherJudgment0);
          }
          if (HighJudgment0 != 0D) {
            output.WriteRawTag(209, 2);
            output.WriteDouble(HighJudgment0);
          }
          if (LowJudgment0 != 0D) {
            output.WriteRawTag(217, 2);
            output.WriteDouble(LowJudgment0);
          }
          if (LowerJudgment0 != 0D) {
            output.WriteRawTag(225, 2);
            output.WriteDouble(LowerJudgment0);
          }
          if (LowestJudgment0 != 0D) {
            output.WriteRawTag(233, 2);
            output.WriteDouble(LowestJudgment0);
          }
          if (HighestJudgment1 != 0D) {
            output.WriteRawTag(241, 2);
            output.WriteDouble(HighestJudgment1);
          }
          if (HigherJudgment1 != 0D) {
            output.WriteRawTag(249, 2);
            output.WriteDouble(HigherJudgment1);
          }
          if (HighJudgment1 != 0D) {
            output.WriteRawTag(129, 3);
            output.WriteDouble(HighJudgment1);
          }
          if (LowJudgment1 != 0D) {
            output.WriteRawTag(137, 3);
            output.WriteDouble(LowJudgment1);
          }
          if (LowerJudgment1 != 0D) {
            output.WriteRawTag(145, 3);
            output.WriteDouble(LowerJudgment1);
          }
          if (LowestJudgment1 != 0D) {
            output.WriteRawTag(153, 3);
            output.WriteDouble(LowestJudgment1);
          }
          if (HighestJudgment != 0) {
            output.WriteRawTag(160, 3);
            output.WriteInt32(HighestJudgment);
          }
          if (HigherJudgment != 0) {
            output.WriteRawTag(168, 3);
            output.WriteInt32(HigherJudgment);
          }
          if (HighJudgment != 0) {
            output.WriteRawTag(176, 3);
            output.WriteInt32(HighJudgment);
          }
          if (LowJudgment != 0) {
            output.WriteRawTag(184, 3);
            output.WriteInt32(LowJudgment);
          }
          if (LowerJudgment != 0) {
            output.WriteRawTag(192, 3);
            output.WriteInt32(LowerJudgment);
          }
          if (LowestJudgment != 0) {
            output.WriteRawTag(200, 3);
            output.WriteInt32(LowestJudgment);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (SiteID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SiteID);
          }
          if (HandlerID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HandlerID);
          }
          if (AvatarNetStatus != global::Qwilight.Event.Types.AvatarNetStatus.Default) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AvatarNetStatus);
          }
          if (Stand != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stand);
          }
          if (HighestBand != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(HighestBand);
          }
          if (Point != 0D) {
            size += 1 + 8;
          }
          if (HitPoints != 0D) {
            size += 1 + 8;
          }
          if (IsFailed != false) {
            size += 1 + 1;
          }
          if (LastJudged != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastJudged);
          }
          size += drawings_.CalculateSize(_repeated_drawings_codec);
          if (drawingComponent_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DrawingComponent);
          }
          if (Title.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
          }
          if (Artist.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Artist);
          }
          if (Genre.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Genre);
          }
          if (Level != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
          }
          if (LevelText.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(LevelText);
          }
          if (WantLevelID.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(WantLevelID);
          }
          if (AutoMode != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(AutoMode);
          }
          if (NoteSaltMode != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(NoteSaltMode);
          }
          if (AudioMultiplier != 0D) {
            size += 2 + 8;
          }
          if (FaintNoteMode != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(FaintNoteMode);
          }
          if (JudgmentMode != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(JudgmentMode);
          }
          if (HitPointsMode != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(HitPointsMode);
          }
          if (NoteMobilityMode != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(NoteMobilityMode);
          }
          if (LongNoteMode != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LongNoteMode);
          }
          if (InputFavorMode != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(InputFavorMode);
          }
          if (NoteModifyMode != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(NoteModifyMode);
          }
          if (BpmMode != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(BpmMode);
          }
          if (WaveMode != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(WaveMode);
          }
          if (SetNoteMode != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(SetNoteMode);
          }
          if (LowestJudgmentConditionMode != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LowestJudgmentConditionMode);
          }
          if (TotalNotes != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(TotalNotes);
          }
          if (JudgmentStage != 0D) {
            size += 2 + 8;
          }
          if (HitPointsValue != 0D) {
            size += 2 + 8;
          }
          if (HighestInputCount != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(HighestInputCount);
          }
          if (Length != 0D) {
            size += 2 + 8;
          }
          if (Bpm != 0D) {
            size += 2 + 8;
          }
          if (Multiplier != 0D) {
            size += 2 + 8;
          }
          if (InputMode != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(InputMode);
          }
          if (HighestJudgment0 != 0D) {
            size += 2 + 8;
          }
          if (HigherJudgment0 != 0D) {
            size += 2 + 8;
          }
          if (HighJudgment0 != 0D) {
            size += 2 + 8;
          }
          if (LowJudgment0 != 0D) {
            size += 2 + 8;
          }
          if (LowerJudgment0 != 0D) {
            size += 2 + 8;
          }
          if (LowestJudgment0 != 0D) {
            size += 2 + 8;
          }
          if (HighestJudgment1 != 0D) {
            size += 2 + 8;
          }
          if (HigherJudgment1 != 0D) {
            size += 2 + 8;
          }
          if (HighJudgment1 != 0D) {
            size += 2 + 8;
          }
          if (LowJudgment1 != 0D) {
            size += 2 + 8;
          }
          if (LowerJudgment1 != 0D) {
            size += 2 + 8;
          }
          if (LowestJudgment1 != 0D) {
            size += 2 + 8;
          }
          if (HighestJudgment != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(HighestJudgment);
          }
          if (HigherJudgment != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(HigherJudgment);
          }
          if (HighJudgment != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(HighJudgment);
          }
          if (LowJudgment != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LowJudgment);
          }
          if (LowerJudgment != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LowerJudgment);
          }
          if (LowestJudgment != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LowestJudgment);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(QwilightCallNet other) {
          if (other == null) {
            return;
          }
          if (other.SiteID.Length != 0) {
            SiteID = other.SiteID;
          }
          if (other.HandlerID.Length != 0) {
            HandlerID = other.HandlerID;
          }
          if (other.AvatarNetStatus != global::Qwilight.Event.Types.AvatarNetStatus.Default) {
            AvatarNetStatus = other.AvatarNetStatus;
          }
          if (other.Stand != 0) {
            Stand = other.Stand;
          }
          if (other.HighestBand != 0) {
            HighestBand = other.HighestBand;
          }
          if (other.Point != 0D) {
            Point = other.Point;
          }
          if (other.HitPoints != 0D) {
            HitPoints = other.HitPoints;
          }
          if (other.IsFailed != false) {
            IsFailed = other.IsFailed;
          }
          if (other.LastJudged != 0) {
            LastJudged = other.LastJudged;
          }
          drawings_.Add(other.drawings_);
          if (other.drawingComponent_ != null) {
            if (drawingComponent_ == null) {
              DrawingComponent = new global::Qwilight.Event.Types.DrawingComponent();
            }
            DrawingComponent.MergeFrom(other.DrawingComponent);
          }
          if (other.Title.Length != 0) {
            Title = other.Title;
          }
          if (other.Artist.Length != 0) {
            Artist = other.Artist;
          }
          if (other.Genre.Length != 0) {
            Genre = other.Genre;
          }
          if (other.Level != 0) {
            Level = other.Level;
          }
          if (other.LevelText.Length != 0) {
            LevelText = other.LevelText;
          }
          if (other.WantLevelID.Length != 0) {
            WantLevelID = other.WantLevelID;
          }
          if (other.AutoMode != 0) {
            AutoMode = other.AutoMode;
          }
          if (other.NoteSaltMode != 0) {
            NoteSaltMode = other.NoteSaltMode;
          }
          if (other.AudioMultiplier != 0D) {
            AudioMultiplier = other.AudioMultiplier;
          }
          if (other.FaintNoteMode != 0) {
            FaintNoteMode = other.FaintNoteMode;
          }
          if (other.JudgmentMode != 0) {
            JudgmentMode = other.JudgmentMode;
          }
          if (other.HitPointsMode != 0) {
            HitPointsMode = other.HitPointsMode;
          }
          if (other.NoteMobilityMode != 0) {
            NoteMobilityMode = other.NoteMobilityMode;
          }
          if (other.LongNoteMode != 0) {
            LongNoteMode = other.LongNoteMode;
          }
          if (other.InputFavorMode != 0) {
            InputFavorMode = other.InputFavorMode;
          }
          if (other.NoteModifyMode != 0) {
            NoteModifyMode = other.NoteModifyMode;
          }
          if (other.BpmMode != 0) {
            BpmMode = other.BpmMode;
          }
          if (other.WaveMode != 0) {
            WaveMode = other.WaveMode;
          }
          if (other.SetNoteMode != 0) {
            SetNoteMode = other.SetNoteMode;
          }
          if (other.LowestJudgmentConditionMode != 0) {
            LowestJudgmentConditionMode = other.LowestJudgmentConditionMode;
          }
          if (other.TotalNotes != 0) {
            TotalNotes = other.TotalNotes;
          }
          if (other.JudgmentStage != 0D) {
            JudgmentStage = other.JudgmentStage;
          }
          if (other.HitPointsValue != 0D) {
            HitPointsValue = other.HitPointsValue;
          }
          if (other.HighestInputCount != 0) {
            HighestInputCount = other.HighestInputCount;
          }
          if (other.Length != 0D) {
            Length = other.Length;
          }
          if (other.Bpm != 0D) {
            Bpm = other.Bpm;
          }
          if (other.Multiplier != 0D) {
            Multiplier = other.Multiplier;
          }
          if (other.InputMode != 0) {
            InputMode = other.InputMode;
          }
          if (other.HighestJudgment0 != 0D) {
            HighestJudgment0 = other.HighestJudgment0;
          }
          if (other.HigherJudgment0 != 0D) {
            HigherJudgment0 = other.HigherJudgment0;
          }
          if (other.HighJudgment0 != 0D) {
            HighJudgment0 = other.HighJudgment0;
          }
          if (other.LowJudgment0 != 0D) {
            LowJudgment0 = other.LowJudgment0;
          }
          if (other.LowerJudgment0 != 0D) {
            LowerJudgment0 = other.LowerJudgment0;
          }
          if (other.LowestJudgment0 != 0D) {
            LowestJudgment0 = other.LowestJudgment0;
          }
          if (other.HighestJudgment1 != 0D) {
            HighestJudgment1 = other.HighestJudgment1;
          }
          if (other.HigherJudgment1 != 0D) {
            HigherJudgment1 = other.HigherJudgment1;
          }
          if (other.HighJudgment1 != 0D) {
            HighJudgment1 = other.HighJudgment1;
          }
          if (other.LowJudgment1 != 0D) {
            LowJudgment1 = other.LowJudgment1;
          }
          if (other.LowerJudgment1 != 0D) {
            LowerJudgment1 = other.LowerJudgment1;
          }
          if (other.LowestJudgment1 != 0D) {
            LowestJudgment1 = other.LowestJudgment1;
          }
          if (other.HighestJudgment != 0) {
            HighestJudgment = other.HighestJudgment;
          }
          if (other.HigherJudgment != 0) {
            HigherJudgment = other.HigherJudgment;
          }
          if (other.HighJudgment != 0) {
            HighJudgment = other.HighJudgment;
          }
          if (other.LowJudgment != 0) {
            LowJudgment = other.LowJudgment;
          }
          if (other.LowerJudgment != 0) {
            LowerJudgment = other.LowerJudgment;
          }
          if (other.LowestJudgment != 0) {
            LowestJudgment = other.LowestJudgment;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                SiteID = input.ReadString();
                break;
              }
              case 18: {
                HandlerID = input.ReadString();
                break;
              }
              case 24: {
                AvatarNetStatus = (global::Qwilight.Event.Types.AvatarNetStatus) input.ReadEnum();
                break;
              }
              case 32: {
                Stand = input.ReadInt32();
                break;
              }
              case 40: {
                HighestBand = input.ReadInt32();
                break;
              }
              case 49: {
                Point = input.ReadDouble();
                break;
              }
              case 57: {
                HitPoints = input.ReadDouble();
                break;
              }
              case 64: {
                IsFailed = input.ReadBool();
                break;
              }
              case 72: {
                LastJudged = input.ReadInt32();
                break;
              }
              case 82: {
                drawings_.AddEntriesFrom(input, _repeated_drawings_codec);
                break;
              }
              case 90: {
                if (drawingComponent_ == null) {
                  DrawingComponent = new global::Qwilight.Event.Types.DrawingComponent();
                }
                input.ReadMessage(DrawingComponent);
                break;
              }
              case 98: {
                Title = input.ReadString();
                break;
              }
              case 106: {
                Artist = input.ReadString();
                break;
              }
              case 114: {
                Genre = input.ReadString();
                break;
              }
              case 120: {
                Level = input.ReadInt32();
                break;
              }
              case 130: {
                LevelText = input.ReadString();
                break;
              }
              case 138: {
                WantLevelID = input.ReadString();
                break;
              }
              case 144: {
                AutoMode = input.ReadInt32();
                break;
              }
              case 152: {
                NoteSaltMode = input.ReadInt32();
                break;
              }
              case 161: {
                AudioMultiplier = input.ReadDouble();
                break;
              }
              case 168: {
                FaintNoteMode = input.ReadInt32();
                break;
              }
              case 176: {
                JudgmentMode = input.ReadInt32();
                break;
              }
              case 184: {
                HitPointsMode = input.ReadInt32();
                break;
              }
              case 192: {
                NoteMobilityMode = input.ReadInt32();
                break;
              }
              case 200: {
                LongNoteMode = input.ReadInt32();
                break;
              }
              case 208: {
                InputFavorMode = input.ReadInt32();
                break;
              }
              case 216: {
                NoteModifyMode = input.ReadInt32();
                break;
              }
              case 224: {
                BpmMode = input.ReadInt32();
                break;
              }
              case 232: {
                WaveMode = input.ReadInt32();
                break;
              }
              case 240: {
                SetNoteMode = input.ReadInt32();
                break;
              }
              case 248: {
                LowestJudgmentConditionMode = input.ReadInt32();
                break;
              }
              case 256: {
                TotalNotes = input.ReadInt32();
                break;
              }
              case 265: {
                JudgmentStage = input.ReadDouble();
                break;
              }
              case 273: {
                HitPointsValue = input.ReadDouble();
                break;
              }
              case 280: {
                HighestInputCount = input.ReadInt32();
                break;
              }
              case 289: {
                Length = input.ReadDouble();
                break;
              }
              case 297: {
                Bpm = input.ReadDouble();
                break;
              }
              case 305: {
                Multiplier = input.ReadDouble();
                break;
              }
              case 312: {
                InputMode = input.ReadInt32();
                break;
              }
              case 321: {
                HighestJudgment0 = input.ReadDouble();
                break;
              }
              case 329: {
                HigherJudgment0 = input.ReadDouble();
                break;
              }
              case 337: {
                HighJudgment0 = input.ReadDouble();
                break;
              }
              case 345: {
                LowJudgment0 = input.ReadDouble();
                break;
              }
              case 353: {
                LowerJudgment0 = input.ReadDouble();
                break;
              }
              case 361: {
                LowestJudgment0 = input.ReadDouble();
                break;
              }
              case 369: {
                HighestJudgment1 = input.ReadDouble();
                break;
              }
              case 377: {
                HigherJudgment1 = input.ReadDouble();
                break;
              }
              case 385: {
                HighJudgment1 = input.ReadDouble();
                break;
              }
              case 393: {
                LowJudgment1 = input.ReadDouble();
                break;
              }
              case 401: {
                LowerJudgment1 = input.ReadDouble();
                break;
              }
              case 409: {
                LowestJudgment1 = input.ReadDouble();
                break;
              }
              case 416: {
                HighestJudgment = input.ReadInt32();
                break;
              }
              case 424: {
                HigherJudgment = input.ReadInt32();
                break;
              }
              case 432: {
                HighJudgment = input.ReadInt32();
                break;
              }
              case 440: {
                LowJudgment = input.ReadInt32();
                break;
              }
              case 448: {
                LowerJudgment = input.ReadInt32();
                break;
              }
              case 456: {
                LowestJudgment = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                SiteID = input.ReadString();
                break;
              }
              case 18: {
                HandlerID = input.ReadString();
                break;
              }
              case 24: {
                AvatarNetStatus = (global::Qwilight.Event.Types.AvatarNetStatus) input.ReadEnum();
                break;
              }
              case 32: {
                Stand = input.ReadInt32();
                break;
              }
              case 40: {
                HighestBand = input.ReadInt32();
                break;
              }
              case 49: {
                Point = input.ReadDouble();
                break;
              }
              case 57: {
                HitPoints = input.ReadDouble();
                break;
              }
              case 64: {
                IsFailed = input.ReadBool();
                break;
              }
              case 72: {
                LastJudged = input.ReadInt32();
                break;
              }
              case 82: {
                drawings_.AddEntriesFrom(ref input, _repeated_drawings_codec);
                break;
              }
              case 90: {
                if (drawingComponent_ == null) {
                  DrawingComponent = new global::Qwilight.Event.Types.DrawingComponent();
                }
                input.ReadMessage(DrawingComponent);
                break;
              }
              case 98: {
                Title = input.ReadString();
                break;
              }
              case 106: {
                Artist = input.ReadString();
                break;
              }
              case 114: {
                Genre = input.ReadString();
                break;
              }
              case 120: {
                Level = input.ReadInt32();
                break;
              }
              case 130: {
                LevelText = input.ReadString();
                break;
              }
              case 138: {
                WantLevelID = input.ReadString();
                break;
              }
              case 144: {
                AutoMode = input.ReadInt32();
                break;
              }
              case 152: {
                NoteSaltMode = input.ReadInt32();
                break;
              }
              case 161: {
                AudioMultiplier = input.ReadDouble();
                break;
              }
              case 168: {
                FaintNoteMode = input.ReadInt32();
                break;
              }
              case 176: {
                JudgmentMode = input.ReadInt32();
                break;
              }
              case 184: {
                HitPointsMode = input.ReadInt32();
                break;
              }
              case 192: {
                NoteMobilityMode = input.ReadInt32();
                break;
              }
              case 200: {
                LongNoteMode = input.ReadInt32();
                break;
              }
              case 208: {
                InputFavorMode = input.ReadInt32();
                break;
              }
              case 216: {
                NoteModifyMode = input.ReadInt32();
                break;
              }
              case 224: {
                BpmMode = input.ReadInt32();
                break;
              }
              case 232: {
                WaveMode = input.ReadInt32();
                break;
              }
              case 240: {
                SetNoteMode = input.ReadInt32();
                break;
              }
              case 248: {
                LowestJudgmentConditionMode = input.ReadInt32();
                break;
              }
              case 256: {
                TotalNotes = input.ReadInt32();
                break;
              }
              case 265: {
                JudgmentStage = input.ReadDouble();
                break;
              }
              case 273: {
                HitPointsValue = input.ReadDouble();
                break;
              }
              case 280: {
                HighestInputCount = input.ReadInt32();
                break;
              }
              case 289: {
                Length = input.ReadDouble();
                break;
              }
              case 297: {
                Bpm = input.ReadDouble();
                break;
              }
              case 305: {
                Multiplier = input.ReadDouble();
                break;
              }
              case 312: {
                InputMode = input.ReadInt32();
                break;
              }
              case 321: {
                HighestJudgment0 = input.ReadDouble();
                break;
              }
              case 329: {
                HigherJudgment0 = input.ReadDouble();
                break;
              }
              case 337: {
                HighJudgment0 = input.ReadDouble();
                break;
              }
              case 345: {
                LowJudgment0 = input.ReadDouble();
                break;
              }
              case 353: {
                LowerJudgment0 = input.ReadDouble();
                break;
              }
              case 361: {
                LowestJudgment0 = input.ReadDouble();
                break;
              }
              case 369: {
                HighestJudgment1 = input.ReadDouble();
                break;
              }
              case 377: {
                HigherJudgment1 = input.ReadDouble();
                break;
              }
              case 385: {
                HighJudgment1 = input.ReadDouble();
                break;
              }
              case 393: {
                LowJudgment1 = input.ReadDouble();
                break;
              }
              case 401: {
                LowerJudgment1 = input.ReadDouble();
                break;
              }
              case 409: {
                LowestJudgment1 = input.ReadDouble();
                break;
              }
              case 416: {
                HighestJudgment = input.ReadInt32();
                break;
              }
              case 424: {
                HigherJudgment = input.ReadInt32();
                break;
              }
              case 432: {
                HighJudgment = input.ReadInt32();
                break;
              }
              case 440: {
                LowJudgment = input.ReadInt32();
                break;
              }
              case 448: {
                LowerJudgment = input.ReadInt32();
                break;
              }
              case 456: {
                LowestJudgment = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class NetDrawing : pb::IMessage<NetDrawing>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<NetDrawing> _parser = new pb::MessageParser<NetDrawing>(() => new NetDrawing());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<NetDrawing> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Qwilight.Event.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NetDrawing() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NetDrawing(NetDrawing other) : this() {
          drawingVariety_ = other.drawingVariety_;
          param_ = other.param_;
          position0_ = other.position0_;
          position1_ = other.position1_;
          length_ = other.length_;
          height_ = other.height_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NetDrawing Clone() {
          return new NetDrawing(this);
        }

        /// <summary>Field number for the "drawingVariety" field.</summary>
        public const int DrawingVarietyFieldNumber = 1;
        private global::Qwilight.Event.Types.NetDrawing.Types.Variety drawingVariety_ = global::Qwilight.Event.Types.NetDrawing.Types.Variety.Note;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Qwilight.Event.Types.NetDrawing.Types.Variety DrawingVariety {
          get { return drawingVariety_; }
          set {
            drawingVariety_ = value;
          }
        }

        /// <summary>Field number for the "param" field.</summary>
        public const int ParamFieldNumber = 2;
        private uint param_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Param {
          get { return param_; }
          set {
            param_ = value;
          }
        }

        /// <summary>Field number for the "position0" field.</summary>
        public const int Position0FieldNumber = 3;
        private double position0_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Position0 {
          get { return position0_; }
          set {
            position0_ = value;
          }
        }

        /// <summary>Field number for the "position1" field.</summary>
        public const int Position1FieldNumber = 4;
        private double position1_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Position1 {
          get { return position1_; }
          set {
            position1_ = value;
          }
        }

        /// <summary>Field number for the "length" field.</summary>
        public const int LengthFieldNumber = 5;
        private double length_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Length {
          get { return length_; }
          set {
            length_ = value;
          }
        }

        /// <summary>Field number for the "height" field.</summary>
        public const int HeightFieldNumber = 6;
        private double height_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Height {
          get { return height_; }
          set {
            height_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as NetDrawing);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(NetDrawing other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DrawingVariety != other.DrawingVariety) return false;
          if (Param != other.Param) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Position0, other.Position0)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Position1, other.Position1)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Length, other.Length)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Height, other.Height)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (DrawingVariety != global::Qwilight.Event.Types.NetDrawing.Types.Variety.Note) hash ^= DrawingVariety.GetHashCode();
          if (Param != 0) hash ^= Param.GetHashCode();
          if (Position0 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Position0);
          if (Position1 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Position1);
          if (Length != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Length);
          if (Height != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Height);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (DrawingVariety != global::Qwilight.Event.Types.NetDrawing.Types.Variety.Note) {
            output.WriteRawTag(8);
            output.WriteEnum((int) DrawingVariety);
          }
          if (Param != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Param);
          }
          if (Position0 != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(Position0);
          }
          if (Position1 != 0D) {
            output.WriteRawTag(33);
            output.WriteDouble(Position1);
          }
          if (Length != 0D) {
            output.WriteRawTag(41);
            output.WriteDouble(Length);
          }
          if (Height != 0D) {
            output.WriteRawTag(49);
            output.WriteDouble(Height);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (DrawingVariety != global::Qwilight.Event.Types.NetDrawing.Types.Variety.Note) {
            output.WriteRawTag(8);
            output.WriteEnum((int) DrawingVariety);
          }
          if (Param != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Param);
          }
          if (Position0 != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(Position0);
          }
          if (Position1 != 0D) {
            output.WriteRawTag(33);
            output.WriteDouble(Position1);
          }
          if (Length != 0D) {
            output.WriteRawTag(41);
            output.WriteDouble(Length);
          }
          if (Height != 0D) {
            output.WriteRawTag(49);
            output.WriteDouble(Height);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (DrawingVariety != global::Qwilight.Event.Types.NetDrawing.Types.Variety.Note) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DrawingVariety);
          }
          if (Param != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Param);
          }
          if (Position0 != 0D) {
            size += 1 + 8;
          }
          if (Position1 != 0D) {
            size += 1 + 8;
          }
          if (Length != 0D) {
            size += 1 + 8;
          }
          if (Height != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(NetDrawing other) {
          if (other == null) {
            return;
          }
          if (other.DrawingVariety != global::Qwilight.Event.Types.NetDrawing.Types.Variety.Note) {
            DrawingVariety = other.DrawingVariety;
          }
          if (other.Param != 0) {
            Param = other.Param;
          }
          if (other.Position0 != 0D) {
            Position0 = other.Position0;
          }
          if (other.Position1 != 0D) {
            Position1 = other.Position1;
          }
          if (other.Length != 0D) {
            Length = other.Length;
          }
          if (other.Height != 0D) {
            Height = other.Height;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                DrawingVariety = (global::Qwilight.Event.Types.NetDrawing.Types.Variety) input.ReadEnum();
                break;
              }
              case 16: {
                Param = input.ReadUInt32();
                break;
              }
              case 25: {
                Position0 = input.ReadDouble();
                break;
              }
              case 33: {
                Position1 = input.ReadDouble();
                break;
              }
              case 41: {
                Length = input.ReadDouble();
                break;
              }
              case 49: {
                Height = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                DrawingVariety = (global::Qwilight.Event.Types.NetDrawing.Types.Variety) input.ReadEnum();
                break;
              }
              case 16: {
                Param = input.ReadUInt32();
                break;
              }
              case 25: {
                Position0 = input.ReadDouble();
                break;
              }
              case 33: {
                Position1 = input.ReadDouble();
                break;
              }
              case 41: {
                Length = input.ReadDouble();
                break;
              }
              case 49: {
                Height = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the NetDrawing message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          public enum Variety {
            [pbr::OriginalName("Note")] Note = 0,
            [pbr::OriginalName("Main")] Main = 1,
            [pbr::OriginalName("Meter")] Meter = 2,
          }

        }
        #endregion

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class DrawingComponent : pb::IMessage<DrawingComponent>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DrawingComponent> _parser = new pb::MessageParser<DrawingComponent>(() => new DrawingComponent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DrawingComponent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Qwilight.Event.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DrawingComponent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DrawingComponent(DrawingComponent other) : this() {
          p2BuiltLength_ = other.p2BuiltLength_;
          judgmentMainPosition_ = other.judgmentMainPosition_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DrawingComponent Clone() {
          return new DrawingComponent(this);
        }

        /// <summary>Field number for the "p2BuiltLength" field.</summary>
        public const int P2BuiltLengthFieldNumber = 1;
        private float p2BuiltLength_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float P2BuiltLength {
          get { return p2BuiltLength_; }
          set {
            p2BuiltLength_ = value;
          }
        }

        /// <summary>Field number for the "judgmentMainPosition" field.</summary>
        public const int JudgmentMainPositionFieldNumber = 2;
        private float judgmentMainPosition_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float JudgmentMainPosition {
          get { return judgmentMainPosition_; }
          set {
            judgmentMainPosition_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DrawingComponent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DrawingComponent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(P2BuiltLength, other.P2BuiltLength)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(JudgmentMainPosition, other.JudgmentMainPosition)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (P2BuiltLength != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(P2BuiltLength);
          if (JudgmentMainPosition != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(JudgmentMainPosition);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (P2BuiltLength != 0F) {
            output.WriteRawTag(13);
            output.WriteFloat(P2BuiltLength);
          }
          if (JudgmentMainPosition != 0F) {
            output.WriteRawTag(21);
            output.WriteFloat(JudgmentMainPosition);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (P2BuiltLength != 0F) {
            output.WriteRawTag(13);
            output.WriteFloat(P2BuiltLength);
          }
          if (JudgmentMainPosition != 0F) {
            output.WriteRawTag(21);
            output.WriteFloat(JudgmentMainPosition);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (P2BuiltLength != 0F) {
            size += 1 + 4;
          }
          if (JudgmentMainPosition != 0F) {
            size += 1 + 4;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DrawingComponent other) {
          if (other == null) {
            return;
          }
          if (other.P2BuiltLength != 0F) {
            P2BuiltLength = other.P2BuiltLength;
          }
          if (other.JudgmentMainPosition != 0F) {
            JudgmentMainPosition = other.JudgmentMainPosition;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 13: {
                P2BuiltLength = input.ReadFloat();
                break;
              }
              case 21: {
                JudgmentMainPosition = input.ReadFloat();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 13: {
                P2BuiltLength = input.ReadFloat();
                break;
              }
              case 21: {
                JudgmentMainPosition = input.ReadFloat();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class QwilightIOInput : pb::IMessage<QwilightIOInput>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<QwilightIOInput> _parser = new pb::MessageParser<QwilightIOInput>(() => new QwilightIOInput());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<QwilightIOInput> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Qwilight.Event.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightIOInput() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightIOInput(QwilightIOInput other) : this() {
          avatarIDs_ = other.avatarIDs_.Clone();
          handlerID_ = other.handlerID_;
          input_ = other.input_;
          power_ = other.power_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightIOInput Clone() {
          return new QwilightIOInput(this);
        }

        /// <summary>Field number for the "avatarIDs" field.</summary>
        public const int AvatarIDsFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_avatarIDs_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> avatarIDs_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> AvatarIDs {
          get { return avatarIDs_; }
        }

        /// <summary>Field number for the "handlerID" field.</summary>
        public const int HandlerIDFieldNumber = 2;
        private string handlerID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string HandlerID {
          get { return handlerID_; }
          set {
            handlerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "input" field.</summary>
        public const int InputFieldNumber = 3;
        private int input_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Input {
          get { return input_; }
          set {
            input_ = value;
          }
        }

        /// <summary>Field number for the "power" field.</summary>
        public const int PowerFieldNumber = 4;
        private int power_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Power {
          get { return power_; }
          set {
            power_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as QwilightIOInput);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(QwilightIOInput other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!avatarIDs_.Equals(other.avatarIDs_)) return false;
          if (HandlerID != other.HandlerID) return false;
          if (Input != other.Input) return false;
          if (Power != other.Power) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= avatarIDs_.GetHashCode();
          if (HandlerID.Length != 0) hash ^= HandlerID.GetHashCode();
          if (Input != 0) hash ^= Input.GetHashCode();
          if (Power != 0) hash ^= Power.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          avatarIDs_.WriteTo(output, _repeated_avatarIDs_codec);
          if (HandlerID.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(HandlerID);
          }
          if (Input != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Input);
          }
          if (Power != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Power);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          avatarIDs_.WriteTo(ref output, _repeated_avatarIDs_codec);
          if (HandlerID.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(HandlerID);
          }
          if (Input != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Input);
          }
          if (Power != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Power);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += avatarIDs_.CalculateSize(_repeated_avatarIDs_codec);
          if (HandlerID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HandlerID);
          }
          if (Input != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Input);
          }
          if (Power != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Power);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(QwilightIOInput other) {
          if (other == null) {
            return;
          }
          avatarIDs_.Add(other.avatarIDs_);
          if (other.HandlerID.Length != 0) {
            HandlerID = other.HandlerID;
          }
          if (other.Input != 0) {
            Input = other.Input;
          }
          if (other.Power != 0) {
            Power = other.Power;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                avatarIDs_.AddEntriesFrom(input, _repeated_avatarIDs_codec);
                break;
              }
              case 18: {
                HandlerID = input.ReadString();
                break;
              }
              case 24: {
                Input = input.ReadInt32();
                break;
              }
              case 32: {
                Power = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                avatarIDs_.AddEntriesFrom(ref input, _repeated_avatarIDs_codec);
                break;
              }
              case 18: {
                HandlerID = input.ReadString();
                break;
              }
              case 24: {
                Input = input.ReadInt32();
                break;
              }
              case 32: {
                Power = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class TwilightIOInput : pb::IMessage<TwilightIOInput>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TwilightIOInput> _parser = new pb::MessageParser<TwilightIOInput>(() => new TwilightIOInput());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<TwilightIOInput> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Qwilight.Event.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightIOInput() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightIOInput(TwilightIOInput other) : this() {
          handlerID_ = other.handlerID_;
          input_ = other.input_;
          power_ = other.power_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightIOInput Clone() {
          return new TwilightIOInput(this);
        }

        /// <summary>Field number for the "handlerID" field.</summary>
        public const int HandlerIDFieldNumber = 1;
        private string handlerID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string HandlerID {
          get { return handlerID_; }
          set {
            handlerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "input" field.</summary>
        public const int InputFieldNumber = 2;
        private int input_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Input {
          get { return input_; }
          set {
            input_ = value;
          }
        }

        /// <summary>Field number for the "power" field.</summary>
        public const int PowerFieldNumber = 3;
        private int power_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Power {
          get { return power_; }
          set {
            power_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as TwilightIOInput);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(TwilightIOInput other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (HandlerID != other.HandlerID) return false;
          if (Input != other.Input) return false;
          if (Power != other.Power) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HandlerID.Length != 0) hash ^= HandlerID.GetHashCode();
          if (Input != 0) hash ^= Input.GetHashCode();
          if (Power != 0) hash ^= Power.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HandlerID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(HandlerID);
          }
          if (Input != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Input);
          }
          if (Power != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Power);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HandlerID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(HandlerID);
          }
          if (Input != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Input);
          }
          if (Power != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Power);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HandlerID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HandlerID);
          }
          if (Input != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Input);
          }
          if (Power != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Power);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(TwilightIOInput other) {
          if (other == null) {
            return;
          }
          if (other.HandlerID.Length != 0) {
            HandlerID = other.HandlerID;
          }
          if (other.Input != 0) {
            Input = other.Input;
          }
          if (other.Power != 0) {
            Power = other.Power;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                HandlerID = input.ReadString();
                break;
              }
              case 16: {
                Input = input.ReadInt32();
                break;
              }
              case 24: {
                Power = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                HandlerID = input.ReadString();
                break;
              }
              case 16: {
                Input = input.ReadInt32();
                break;
              }
              case 24: {
                Power = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class QwilightIOJudge : pb::IMessage<QwilightIOJudge>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<QwilightIOJudge> _parser = new pb::MessageParser<QwilightIOJudge>(() => new QwilightIOJudge());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<QwilightIOJudge> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Qwilight.Event.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightIOJudge() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightIOJudge(QwilightIOJudge other) : this() {
          avatarIDs_ = other.avatarIDs_.Clone();
          handlerID_ = other.handlerID_;
          noteID_ = other.noteID_;
          judged_ = other.judged_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightIOJudge Clone() {
          return new QwilightIOJudge(this);
        }

        /// <summary>Field number for the "avatarIDs" field.</summary>
        public const int AvatarIDsFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_avatarIDs_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> avatarIDs_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> AvatarIDs {
          get { return avatarIDs_; }
        }

        /// <summary>Field number for the "handlerID" field.</summary>
        public const int HandlerIDFieldNumber = 2;
        private string handlerID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string HandlerID {
          get { return handlerID_; }
          set {
            handlerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "noteID" field.</summary>
        public const int NoteIDFieldNumber = 3;
        private int noteID_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int NoteID {
          get { return noteID_; }
          set {
            noteID_ = value;
          }
        }

        /// <summary>Field number for the "judged" field.</summary>
        public const int JudgedFieldNumber = 4;
        private int judged_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Judged {
          get { return judged_; }
          set {
            judged_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as QwilightIOJudge);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(QwilightIOJudge other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!avatarIDs_.Equals(other.avatarIDs_)) return false;
          if (HandlerID != other.HandlerID) return false;
          if (NoteID != other.NoteID) return false;
          if (Judged != other.Judged) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= avatarIDs_.GetHashCode();
          if (HandlerID.Length != 0) hash ^= HandlerID.GetHashCode();
          if (NoteID != 0) hash ^= NoteID.GetHashCode();
          if (Judged != 0) hash ^= Judged.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          avatarIDs_.WriteTo(output, _repeated_avatarIDs_codec);
          if (HandlerID.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(HandlerID);
          }
          if (NoteID != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(NoteID);
          }
          if (Judged != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Judged);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          avatarIDs_.WriteTo(ref output, _repeated_avatarIDs_codec);
          if (HandlerID.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(HandlerID);
          }
          if (NoteID != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(NoteID);
          }
          if (Judged != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Judged);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += avatarIDs_.CalculateSize(_repeated_avatarIDs_codec);
          if (HandlerID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HandlerID);
          }
          if (NoteID != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(NoteID);
          }
          if (Judged != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Judged);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(QwilightIOJudge other) {
          if (other == null) {
            return;
          }
          avatarIDs_.Add(other.avatarIDs_);
          if (other.HandlerID.Length != 0) {
            HandlerID = other.HandlerID;
          }
          if (other.NoteID != 0) {
            NoteID = other.NoteID;
          }
          if (other.Judged != 0) {
            Judged = other.Judged;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                avatarIDs_.AddEntriesFrom(input, _repeated_avatarIDs_codec);
                break;
              }
              case 18: {
                HandlerID = input.ReadString();
                break;
              }
              case 24: {
                NoteID = input.ReadInt32();
                break;
              }
              case 32: {
                Judged = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                avatarIDs_.AddEntriesFrom(ref input, _repeated_avatarIDs_codec);
                break;
              }
              case 18: {
                HandlerID = input.ReadString();
                break;
              }
              case 24: {
                NoteID = input.ReadInt32();
                break;
              }
              case 32: {
                Judged = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class TwilightIOJudge : pb::IMessage<TwilightIOJudge>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TwilightIOJudge> _parser = new pb::MessageParser<TwilightIOJudge>(() => new TwilightIOJudge());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<TwilightIOJudge> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Qwilight.Event.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightIOJudge() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightIOJudge(TwilightIOJudge other) : this() {
          handlerID_ = other.handlerID_;
          noteID_ = other.noteID_;
          judged_ = other.judged_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightIOJudge Clone() {
          return new TwilightIOJudge(this);
        }

        /// <summary>Field number for the "handlerID" field.</summary>
        public const int HandlerIDFieldNumber = 1;
        private string handlerID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string HandlerID {
          get { return handlerID_; }
          set {
            handlerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "noteID" field.</summary>
        public const int NoteIDFieldNumber = 2;
        private int noteID_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int NoteID {
          get { return noteID_; }
          set {
            noteID_ = value;
          }
        }

        /// <summary>Field number for the "judged" field.</summary>
        public const int JudgedFieldNumber = 3;
        private int judged_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Judged {
          get { return judged_; }
          set {
            judged_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as TwilightIOJudge);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(TwilightIOJudge other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (HandlerID != other.HandlerID) return false;
          if (NoteID != other.NoteID) return false;
          if (Judged != other.Judged) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HandlerID.Length != 0) hash ^= HandlerID.GetHashCode();
          if (NoteID != 0) hash ^= NoteID.GetHashCode();
          if (Judged != 0) hash ^= Judged.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HandlerID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(HandlerID);
          }
          if (NoteID != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(NoteID);
          }
          if (Judged != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Judged);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HandlerID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(HandlerID);
          }
          if (NoteID != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(NoteID);
          }
          if (Judged != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Judged);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HandlerID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HandlerID);
          }
          if (NoteID != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(NoteID);
          }
          if (Judged != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Judged);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(TwilightIOJudge other) {
          if (other == null) {
            return;
          }
          if (other.HandlerID.Length != 0) {
            HandlerID = other.HandlerID;
          }
          if (other.NoteID != 0) {
            NoteID = other.NoteID;
          }
          if (other.Judged != 0) {
            Judged = other.Judged;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                HandlerID = input.ReadString();
                break;
              }
              case 16: {
                NoteID = input.ReadInt32();
                break;
              }
              case 24: {
                Judged = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                HandlerID = input.ReadString();
                break;
              }
              case 16: {
                NoteID = input.ReadInt32();
                break;
              }
              case 24: {
                Judged = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class QwilightIOJudgmentMeter : pb::IMessage<QwilightIOJudgmentMeter>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<QwilightIOJudgmentMeter> _parser = new pb::MessageParser<QwilightIOJudgmentMeter>(() => new QwilightIOJudgmentMeter());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<QwilightIOJudgmentMeter> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Qwilight.Event.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightIOJudgmentMeter() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightIOJudgmentMeter(QwilightIOJudgmentMeter other) : this() {
          avatarIDs_ = other.avatarIDs_.Clone();
          handlerID_ = other.handlerID_;
          input_ = other.input_;
          judgmentMeter_ = other.judgmentMeter_;
          assist_ = other.assist_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightIOJudgmentMeter Clone() {
          return new QwilightIOJudgmentMeter(this);
        }

        /// <summary>Field number for the "avatarIDs" field.</summary>
        public const int AvatarIDsFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_avatarIDs_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> avatarIDs_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> AvatarIDs {
          get { return avatarIDs_; }
        }

        /// <summary>Field number for the "handlerID" field.</summary>
        public const int HandlerIDFieldNumber = 2;
        private string handlerID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string HandlerID {
          get { return handlerID_; }
          set {
            handlerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "input" field.</summary>
        public const int InputFieldNumber = 3;
        private int input_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Input {
          get { return input_; }
          set {
            input_ = value;
          }
        }

        /// <summary>Field number for the "judgmentMeter" field.</summary>
        public const int JudgmentMeterFieldNumber = 4;
        private double judgmentMeter_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double JudgmentMeter {
          get { return judgmentMeter_; }
          set {
            judgmentMeter_ = value;
          }
        }

        /// <summary>Field number for the "assist" field.</summary>
        public const int AssistFieldNumber = 5;
        private int assist_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Assist {
          get { return assist_; }
          set {
            assist_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as QwilightIOJudgmentMeter);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(QwilightIOJudgmentMeter other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!avatarIDs_.Equals(other.avatarIDs_)) return false;
          if (HandlerID != other.HandlerID) return false;
          if (Input != other.Input) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(JudgmentMeter, other.JudgmentMeter)) return false;
          if (Assist != other.Assist) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= avatarIDs_.GetHashCode();
          if (HandlerID.Length != 0) hash ^= HandlerID.GetHashCode();
          if (Input != 0) hash ^= Input.GetHashCode();
          if (JudgmentMeter != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(JudgmentMeter);
          if (Assist != 0) hash ^= Assist.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          avatarIDs_.WriteTo(output, _repeated_avatarIDs_codec);
          if (HandlerID.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(HandlerID);
          }
          if (Input != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Input);
          }
          if (JudgmentMeter != 0D) {
            output.WriteRawTag(33);
            output.WriteDouble(JudgmentMeter);
          }
          if (Assist != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Assist);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          avatarIDs_.WriteTo(ref output, _repeated_avatarIDs_codec);
          if (HandlerID.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(HandlerID);
          }
          if (Input != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Input);
          }
          if (JudgmentMeter != 0D) {
            output.WriteRawTag(33);
            output.WriteDouble(JudgmentMeter);
          }
          if (Assist != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Assist);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += avatarIDs_.CalculateSize(_repeated_avatarIDs_codec);
          if (HandlerID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HandlerID);
          }
          if (Input != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Input);
          }
          if (JudgmentMeter != 0D) {
            size += 1 + 8;
          }
          if (Assist != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Assist);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(QwilightIOJudgmentMeter other) {
          if (other == null) {
            return;
          }
          avatarIDs_.Add(other.avatarIDs_);
          if (other.HandlerID.Length != 0) {
            HandlerID = other.HandlerID;
          }
          if (other.Input != 0) {
            Input = other.Input;
          }
          if (other.JudgmentMeter != 0D) {
            JudgmentMeter = other.JudgmentMeter;
          }
          if (other.Assist != 0) {
            Assist = other.Assist;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                avatarIDs_.AddEntriesFrom(input, _repeated_avatarIDs_codec);
                break;
              }
              case 18: {
                HandlerID = input.ReadString();
                break;
              }
              case 24: {
                Input = input.ReadInt32();
                break;
              }
              case 33: {
                JudgmentMeter = input.ReadDouble();
                break;
              }
              case 40: {
                Assist = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                avatarIDs_.AddEntriesFrom(ref input, _repeated_avatarIDs_codec);
                break;
              }
              case 18: {
                HandlerID = input.ReadString();
                break;
              }
              case 24: {
                Input = input.ReadInt32();
                break;
              }
              case 33: {
                JudgmentMeter = input.ReadDouble();
                break;
              }
              case 40: {
                Assist = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class TwilightIOJudgmentMeter : pb::IMessage<TwilightIOJudgmentMeter>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TwilightIOJudgmentMeter> _parser = new pb::MessageParser<TwilightIOJudgmentMeter>(() => new TwilightIOJudgmentMeter());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<TwilightIOJudgmentMeter> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Qwilight.Event.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightIOJudgmentMeter() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightIOJudgmentMeter(TwilightIOJudgmentMeter other) : this() {
          handlerID_ = other.handlerID_;
          input_ = other.input_;
          judgmentMeter_ = other.judgmentMeter_;
          assist_ = other.assist_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightIOJudgmentMeter Clone() {
          return new TwilightIOJudgmentMeter(this);
        }

        /// <summary>Field number for the "handlerID" field.</summary>
        public const int HandlerIDFieldNumber = 1;
        private string handlerID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string HandlerID {
          get { return handlerID_; }
          set {
            handlerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "input" field.</summary>
        public const int InputFieldNumber = 2;
        private int input_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Input {
          get { return input_; }
          set {
            input_ = value;
          }
        }

        /// <summary>Field number for the "judgmentMeter" field.</summary>
        public const int JudgmentMeterFieldNumber = 3;
        private double judgmentMeter_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double JudgmentMeter {
          get { return judgmentMeter_; }
          set {
            judgmentMeter_ = value;
          }
        }

        /// <summary>Field number for the "assist" field.</summary>
        public const int AssistFieldNumber = 4;
        private int assist_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Assist {
          get { return assist_; }
          set {
            assist_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as TwilightIOJudgmentMeter);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(TwilightIOJudgmentMeter other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (HandlerID != other.HandlerID) return false;
          if (Input != other.Input) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(JudgmentMeter, other.JudgmentMeter)) return false;
          if (Assist != other.Assist) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HandlerID.Length != 0) hash ^= HandlerID.GetHashCode();
          if (Input != 0) hash ^= Input.GetHashCode();
          if (JudgmentMeter != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(JudgmentMeter);
          if (Assist != 0) hash ^= Assist.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HandlerID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(HandlerID);
          }
          if (Input != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Input);
          }
          if (JudgmentMeter != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(JudgmentMeter);
          }
          if (Assist != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Assist);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HandlerID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(HandlerID);
          }
          if (Input != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Input);
          }
          if (JudgmentMeter != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(JudgmentMeter);
          }
          if (Assist != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Assist);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HandlerID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HandlerID);
          }
          if (Input != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Input);
          }
          if (JudgmentMeter != 0D) {
            size += 1 + 8;
          }
          if (Assist != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Assist);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(TwilightIOJudgmentMeter other) {
          if (other == null) {
            return;
          }
          if (other.HandlerID.Length != 0) {
            HandlerID = other.HandlerID;
          }
          if (other.Input != 0) {
            Input = other.Input;
          }
          if (other.JudgmentMeter != 0D) {
            JudgmentMeter = other.JudgmentMeter;
          }
          if (other.Assist != 0) {
            Assist = other.Assist;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                HandlerID = input.ReadString();
                break;
              }
              case 16: {
                Input = input.ReadInt32();
                break;
              }
              case 25: {
                JudgmentMeter = input.ReadDouble();
                break;
              }
              case 32: {
                Assist = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                HandlerID = input.ReadString();
                break;
              }
              case 16: {
                Input = input.ReadInt32();
                break;
              }
              case 25: {
                JudgmentMeter = input.ReadDouble();
                break;
              }
              case 32: {
                Assist = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class QwilightIONoteVisibility : pb::IMessage<QwilightIONoteVisibility>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<QwilightIONoteVisibility> _parser = new pb::MessageParser<QwilightIONoteVisibility>(() => new QwilightIONoteVisibility());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<QwilightIONoteVisibility> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Qwilight.Event.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightIONoteVisibility() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightIONoteVisibility(QwilightIONoteVisibility other) : this() {
          avatarIDs_ = other.avatarIDs_.Clone();
          handlerID_ = other.handlerID_;
          noteID_ = other.noteID_;
          setValidJudgedNotes_ = other.setValidJudgedNotes_;
          setNoteFailed_ = other.setNoteFailed_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightIONoteVisibility Clone() {
          return new QwilightIONoteVisibility(this);
        }

        /// <summary>Field number for the "avatarIDs" field.</summary>
        public const int AvatarIDsFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_avatarIDs_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> avatarIDs_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> AvatarIDs {
          get { return avatarIDs_; }
        }

        /// <summary>Field number for the "handlerID" field.</summary>
        public const int HandlerIDFieldNumber = 2;
        private string handlerID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string HandlerID {
          get { return handlerID_; }
          set {
            handlerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "noteID" field.</summary>
        public const int NoteIDFieldNumber = 3;
        private int noteID_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int NoteID {
          get { return noteID_; }
          set {
            noteID_ = value;
          }
        }

        /// <summary>Field number for the "setValidJudgedNotes" field.</summary>
        public const int SetValidJudgedNotesFieldNumber = 4;
        private bool setValidJudgedNotes_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool SetValidJudgedNotes {
          get { return setValidJudgedNotes_; }
          set {
            setValidJudgedNotes_ = value;
          }
        }

        /// <summary>Field number for the "setNoteFailed" field.</summary>
        public const int SetNoteFailedFieldNumber = 5;
        private bool setNoteFailed_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool SetNoteFailed {
          get { return setNoteFailed_; }
          set {
            setNoteFailed_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as QwilightIONoteVisibility);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(QwilightIONoteVisibility other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!avatarIDs_.Equals(other.avatarIDs_)) return false;
          if (HandlerID != other.HandlerID) return false;
          if (NoteID != other.NoteID) return false;
          if (SetValidJudgedNotes != other.SetValidJudgedNotes) return false;
          if (SetNoteFailed != other.SetNoteFailed) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= avatarIDs_.GetHashCode();
          if (HandlerID.Length != 0) hash ^= HandlerID.GetHashCode();
          if (NoteID != 0) hash ^= NoteID.GetHashCode();
          if (SetValidJudgedNotes != false) hash ^= SetValidJudgedNotes.GetHashCode();
          if (SetNoteFailed != false) hash ^= SetNoteFailed.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          avatarIDs_.WriteTo(output, _repeated_avatarIDs_codec);
          if (HandlerID.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(HandlerID);
          }
          if (NoteID != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(NoteID);
          }
          if (SetValidJudgedNotes != false) {
            output.WriteRawTag(32);
            output.WriteBool(SetValidJudgedNotes);
          }
          if (SetNoteFailed != false) {
            output.WriteRawTag(40);
            output.WriteBool(SetNoteFailed);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          avatarIDs_.WriteTo(ref output, _repeated_avatarIDs_codec);
          if (HandlerID.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(HandlerID);
          }
          if (NoteID != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(NoteID);
          }
          if (SetValidJudgedNotes != false) {
            output.WriteRawTag(32);
            output.WriteBool(SetValidJudgedNotes);
          }
          if (SetNoteFailed != false) {
            output.WriteRawTag(40);
            output.WriteBool(SetNoteFailed);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += avatarIDs_.CalculateSize(_repeated_avatarIDs_codec);
          if (HandlerID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HandlerID);
          }
          if (NoteID != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(NoteID);
          }
          if (SetValidJudgedNotes != false) {
            size += 1 + 1;
          }
          if (SetNoteFailed != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(QwilightIONoteVisibility other) {
          if (other == null) {
            return;
          }
          avatarIDs_.Add(other.avatarIDs_);
          if (other.HandlerID.Length != 0) {
            HandlerID = other.HandlerID;
          }
          if (other.NoteID != 0) {
            NoteID = other.NoteID;
          }
          if (other.SetValidJudgedNotes != false) {
            SetValidJudgedNotes = other.SetValidJudgedNotes;
          }
          if (other.SetNoteFailed != false) {
            SetNoteFailed = other.SetNoteFailed;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                avatarIDs_.AddEntriesFrom(input, _repeated_avatarIDs_codec);
                break;
              }
              case 18: {
                HandlerID = input.ReadString();
                break;
              }
              case 24: {
                NoteID = input.ReadInt32();
                break;
              }
              case 32: {
                SetValidJudgedNotes = input.ReadBool();
                break;
              }
              case 40: {
                SetNoteFailed = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                avatarIDs_.AddEntriesFrom(ref input, _repeated_avatarIDs_codec);
                break;
              }
              case 18: {
                HandlerID = input.ReadString();
                break;
              }
              case 24: {
                NoteID = input.ReadInt32();
                break;
              }
              case 32: {
                SetValidJudgedNotes = input.ReadBool();
                break;
              }
              case 40: {
                SetNoteFailed = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class TwilightIONoteVisibility : pb::IMessage<TwilightIONoteVisibility>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TwilightIONoteVisibility> _parser = new pb::MessageParser<TwilightIONoteVisibility>(() => new TwilightIONoteVisibility());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<TwilightIONoteVisibility> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Qwilight.Event.Descriptor.NestedTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightIONoteVisibility() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightIONoteVisibility(TwilightIONoteVisibility other) : this() {
          handlerID_ = other.handlerID_;
          noteID_ = other.noteID_;
          setValidJudgedNotes_ = other.setValidJudgedNotes_;
          setNoteFailed_ = other.setNoteFailed_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightIONoteVisibility Clone() {
          return new TwilightIONoteVisibility(this);
        }

        /// <summary>Field number for the "handlerID" field.</summary>
        public const int HandlerIDFieldNumber = 1;
        private string handlerID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string HandlerID {
          get { return handlerID_; }
          set {
            handlerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "noteID" field.</summary>
        public const int NoteIDFieldNumber = 2;
        private int noteID_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int NoteID {
          get { return noteID_; }
          set {
            noteID_ = value;
          }
        }

        /// <summary>Field number for the "setValidJudgedNotes" field.</summary>
        public const int SetValidJudgedNotesFieldNumber = 3;
        private bool setValidJudgedNotes_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool SetValidJudgedNotes {
          get { return setValidJudgedNotes_; }
          set {
            setValidJudgedNotes_ = value;
          }
        }

        /// <summary>Field number for the "setNoteFailed" field.</summary>
        public const int SetNoteFailedFieldNumber = 4;
        private bool setNoteFailed_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool SetNoteFailed {
          get { return setNoteFailed_; }
          set {
            setNoteFailed_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as TwilightIONoteVisibility);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(TwilightIONoteVisibility other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (HandlerID != other.HandlerID) return false;
          if (NoteID != other.NoteID) return false;
          if (SetValidJudgedNotes != other.SetValidJudgedNotes) return false;
          if (SetNoteFailed != other.SetNoteFailed) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HandlerID.Length != 0) hash ^= HandlerID.GetHashCode();
          if (NoteID != 0) hash ^= NoteID.GetHashCode();
          if (SetValidJudgedNotes != false) hash ^= SetValidJudgedNotes.GetHashCode();
          if (SetNoteFailed != false) hash ^= SetNoteFailed.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HandlerID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(HandlerID);
          }
          if (NoteID != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(NoteID);
          }
          if (SetValidJudgedNotes != false) {
            output.WriteRawTag(24);
            output.WriteBool(SetValidJudgedNotes);
          }
          if (SetNoteFailed != false) {
            output.WriteRawTag(32);
            output.WriteBool(SetNoteFailed);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HandlerID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(HandlerID);
          }
          if (NoteID != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(NoteID);
          }
          if (SetValidJudgedNotes != false) {
            output.WriteRawTag(24);
            output.WriteBool(SetValidJudgedNotes);
          }
          if (SetNoteFailed != false) {
            output.WriteRawTag(32);
            output.WriteBool(SetNoteFailed);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HandlerID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HandlerID);
          }
          if (NoteID != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(NoteID);
          }
          if (SetValidJudgedNotes != false) {
            size += 1 + 1;
          }
          if (SetNoteFailed != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(TwilightIONoteVisibility other) {
          if (other == null) {
            return;
          }
          if (other.HandlerID.Length != 0) {
            HandlerID = other.HandlerID;
          }
          if (other.NoteID != 0) {
            NoteID = other.NoteID;
          }
          if (other.SetValidJudgedNotes != false) {
            SetValidJudgedNotes = other.SetValidJudgedNotes;
          }
          if (other.SetNoteFailed != false) {
            SetNoteFailed = other.SetNoteFailed;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                HandlerID = input.ReadString();
                break;
              }
              case 16: {
                NoteID = input.ReadInt32();
                break;
              }
              case 24: {
                SetValidJudgedNotes = input.ReadBool();
                break;
              }
              case 32: {
                SetNoteFailed = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                HandlerID = input.ReadString();
                break;
              }
              case 16: {
                NoteID = input.ReadInt32();
                break;
              }
              case 24: {
                SetValidJudgedNotes = input.ReadBool();
                break;
              }
              case 32: {
                SetNoteFailed = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class QwilightIOMultiplier : pb::IMessage<QwilightIOMultiplier>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<QwilightIOMultiplier> _parser = new pb::MessageParser<QwilightIOMultiplier>(() => new QwilightIOMultiplier());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<QwilightIOMultiplier> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Qwilight.Event.Descriptor.NestedTypes[12]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightIOMultiplier() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightIOMultiplier(QwilightIOMultiplier other) : this() {
          avatarIDs_ = other.avatarIDs_.Clone();
          handlerID_ = other.handlerID_;
          multiplier_ = other.multiplier_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightIOMultiplier Clone() {
          return new QwilightIOMultiplier(this);
        }

        /// <summary>Field number for the "avatarIDs" field.</summary>
        public const int AvatarIDsFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_avatarIDs_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> avatarIDs_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> AvatarIDs {
          get { return avatarIDs_; }
        }

        /// <summary>Field number for the "handlerID" field.</summary>
        public const int HandlerIDFieldNumber = 2;
        private string handlerID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string HandlerID {
          get { return handlerID_; }
          set {
            handlerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "multiplier" field.</summary>
        public const int MultiplierFieldNumber = 3;
        private double multiplier_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Multiplier {
          get { return multiplier_; }
          set {
            multiplier_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as QwilightIOMultiplier);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(QwilightIOMultiplier other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!avatarIDs_.Equals(other.avatarIDs_)) return false;
          if (HandlerID != other.HandlerID) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Multiplier, other.Multiplier)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= avatarIDs_.GetHashCode();
          if (HandlerID.Length != 0) hash ^= HandlerID.GetHashCode();
          if (Multiplier != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Multiplier);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          avatarIDs_.WriteTo(output, _repeated_avatarIDs_codec);
          if (HandlerID.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(HandlerID);
          }
          if (Multiplier != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(Multiplier);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          avatarIDs_.WriteTo(ref output, _repeated_avatarIDs_codec);
          if (HandlerID.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(HandlerID);
          }
          if (Multiplier != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(Multiplier);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += avatarIDs_.CalculateSize(_repeated_avatarIDs_codec);
          if (HandlerID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HandlerID);
          }
          if (Multiplier != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(QwilightIOMultiplier other) {
          if (other == null) {
            return;
          }
          avatarIDs_.Add(other.avatarIDs_);
          if (other.HandlerID.Length != 0) {
            HandlerID = other.HandlerID;
          }
          if (other.Multiplier != 0D) {
            Multiplier = other.Multiplier;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                avatarIDs_.AddEntriesFrom(input, _repeated_avatarIDs_codec);
                break;
              }
              case 18: {
                HandlerID = input.ReadString();
                break;
              }
              case 25: {
                Multiplier = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                avatarIDs_.AddEntriesFrom(ref input, _repeated_avatarIDs_codec);
                break;
              }
              case 18: {
                HandlerID = input.ReadString();
                break;
              }
              case 25: {
                Multiplier = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class TwilightIOMultiplier : pb::IMessage<TwilightIOMultiplier>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TwilightIOMultiplier> _parser = new pb::MessageParser<TwilightIOMultiplier>(() => new TwilightIOMultiplier());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<TwilightIOMultiplier> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Qwilight.Event.Descriptor.NestedTypes[13]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightIOMultiplier() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightIOMultiplier(TwilightIOMultiplier other) : this() {
          handlerID_ = other.handlerID_;
          multiplier_ = other.multiplier_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightIOMultiplier Clone() {
          return new TwilightIOMultiplier(this);
        }

        /// <summary>Field number for the "handlerID" field.</summary>
        public const int HandlerIDFieldNumber = 1;
        private string handlerID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string HandlerID {
          get { return handlerID_; }
          set {
            handlerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "multiplier" field.</summary>
        public const int MultiplierFieldNumber = 2;
        private double multiplier_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Multiplier {
          get { return multiplier_; }
          set {
            multiplier_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as TwilightIOMultiplier);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(TwilightIOMultiplier other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (HandlerID != other.HandlerID) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Multiplier, other.Multiplier)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HandlerID.Length != 0) hash ^= HandlerID.GetHashCode();
          if (Multiplier != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Multiplier);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HandlerID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(HandlerID);
          }
          if (Multiplier != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(Multiplier);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HandlerID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(HandlerID);
          }
          if (Multiplier != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(Multiplier);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HandlerID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HandlerID);
          }
          if (Multiplier != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(TwilightIOMultiplier other) {
          if (other == null) {
            return;
          }
          if (other.HandlerID.Length != 0) {
            HandlerID = other.HandlerID;
          }
          if (other.Multiplier != 0D) {
            Multiplier = other.Multiplier;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                HandlerID = input.ReadString();
                break;
              }
              case 17: {
                Multiplier = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                HandlerID = input.ReadString();
                break;
              }
              case 17: {
                Multiplier = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class QwilightIOAudioMultiplier : pb::IMessage<QwilightIOAudioMultiplier>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<QwilightIOAudioMultiplier> _parser = new pb::MessageParser<QwilightIOAudioMultiplier>(() => new QwilightIOAudioMultiplier());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<QwilightIOAudioMultiplier> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Qwilight.Event.Descriptor.NestedTypes[14]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightIOAudioMultiplier() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightIOAudioMultiplier(QwilightIOAudioMultiplier other) : this() {
          avatarIDs_ = other.avatarIDs_.Clone();
          handlerID_ = other.handlerID_;
          audioMultiplier_ = other.audioMultiplier_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightIOAudioMultiplier Clone() {
          return new QwilightIOAudioMultiplier(this);
        }

        /// <summary>Field number for the "avatarIDs" field.</summary>
        public const int AvatarIDsFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_avatarIDs_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> avatarIDs_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> AvatarIDs {
          get { return avatarIDs_; }
        }

        /// <summary>Field number for the "handlerID" field.</summary>
        public const int HandlerIDFieldNumber = 2;
        private string handlerID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string HandlerID {
          get { return handlerID_; }
          set {
            handlerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "audioMultiplier" field.</summary>
        public const int AudioMultiplierFieldNumber = 3;
        private double audioMultiplier_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double AudioMultiplier {
          get { return audioMultiplier_; }
          set {
            audioMultiplier_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as QwilightIOAudioMultiplier);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(QwilightIOAudioMultiplier other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!avatarIDs_.Equals(other.avatarIDs_)) return false;
          if (HandlerID != other.HandlerID) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AudioMultiplier, other.AudioMultiplier)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= avatarIDs_.GetHashCode();
          if (HandlerID.Length != 0) hash ^= HandlerID.GetHashCode();
          if (AudioMultiplier != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AudioMultiplier);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          avatarIDs_.WriteTo(output, _repeated_avatarIDs_codec);
          if (HandlerID.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(HandlerID);
          }
          if (AudioMultiplier != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(AudioMultiplier);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          avatarIDs_.WriteTo(ref output, _repeated_avatarIDs_codec);
          if (HandlerID.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(HandlerID);
          }
          if (AudioMultiplier != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(AudioMultiplier);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += avatarIDs_.CalculateSize(_repeated_avatarIDs_codec);
          if (HandlerID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HandlerID);
          }
          if (AudioMultiplier != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(QwilightIOAudioMultiplier other) {
          if (other == null) {
            return;
          }
          avatarIDs_.Add(other.avatarIDs_);
          if (other.HandlerID.Length != 0) {
            HandlerID = other.HandlerID;
          }
          if (other.AudioMultiplier != 0D) {
            AudioMultiplier = other.AudioMultiplier;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                avatarIDs_.AddEntriesFrom(input, _repeated_avatarIDs_codec);
                break;
              }
              case 18: {
                HandlerID = input.ReadString();
                break;
              }
              case 25: {
                AudioMultiplier = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                avatarIDs_.AddEntriesFrom(ref input, _repeated_avatarIDs_codec);
                break;
              }
              case 18: {
                HandlerID = input.ReadString();
                break;
              }
              case 25: {
                AudioMultiplier = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class TwilightIOAudioMultiplier : pb::IMessage<TwilightIOAudioMultiplier>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TwilightIOAudioMultiplier> _parser = new pb::MessageParser<TwilightIOAudioMultiplier>(() => new TwilightIOAudioMultiplier());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<TwilightIOAudioMultiplier> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Qwilight.Event.Descriptor.NestedTypes[15]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightIOAudioMultiplier() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightIOAudioMultiplier(TwilightIOAudioMultiplier other) : this() {
          handlerID_ = other.handlerID_;
          audioMultiplier_ = other.audioMultiplier_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightIOAudioMultiplier Clone() {
          return new TwilightIOAudioMultiplier(this);
        }

        /// <summary>Field number for the "handlerID" field.</summary>
        public const int HandlerIDFieldNumber = 1;
        private string handlerID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string HandlerID {
          get { return handlerID_; }
          set {
            handlerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "audioMultiplier" field.</summary>
        public const int AudioMultiplierFieldNumber = 2;
        private double audioMultiplier_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double AudioMultiplier {
          get { return audioMultiplier_; }
          set {
            audioMultiplier_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as TwilightIOAudioMultiplier);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(TwilightIOAudioMultiplier other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (HandlerID != other.HandlerID) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AudioMultiplier, other.AudioMultiplier)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HandlerID.Length != 0) hash ^= HandlerID.GetHashCode();
          if (AudioMultiplier != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AudioMultiplier);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HandlerID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(HandlerID);
          }
          if (AudioMultiplier != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(AudioMultiplier);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HandlerID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(HandlerID);
          }
          if (AudioMultiplier != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(AudioMultiplier);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HandlerID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HandlerID);
          }
          if (AudioMultiplier != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(TwilightIOAudioMultiplier other) {
          if (other == null) {
            return;
          }
          if (other.HandlerID.Length != 0) {
            HandlerID = other.HandlerID;
          }
          if (other.AudioMultiplier != 0D) {
            AudioMultiplier = other.AudioMultiplier;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                HandlerID = input.ReadString();
                break;
              }
              case 17: {
                AudioMultiplier = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                HandlerID = input.ReadString();
                break;
              }
              case 17: {
                AudioMultiplier = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class TwilightAudioInput : pb::IMessage<TwilightAudioInput>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TwilightAudioInput> _parser = new pb::MessageParser<TwilightAudioInput>(() => new TwilightAudioInput());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<TwilightAudioInput> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Qwilight.Event.Descriptor.NestedTypes[16]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightAudioInput() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightAudioInput(TwilightAudioInput other) : this() {
          siteID_ = other.siteID_;
          avatarID_ = other.avatarID_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightAudioInput Clone() {
          return new TwilightAudioInput(this);
        }

        /// <summary>Field number for the "siteID" field.</summary>
        public const int SiteIDFieldNumber = 1;
        private string siteID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string SiteID {
          get { return siteID_; }
          set {
            siteID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avatarID" field.</summary>
        public const int AvatarIDFieldNumber = 2;
        private string avatarID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AvatarID {
          get { return avatarID_; }
          set {
            avatarID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as TwilightAudioInput);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(TwilightAudioInput other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SiteID != other.SiteID) return false;
          if (AvatarID != other.AvatarID) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (SiteID.Length != 0) hash ^= SiteID.GetHashCode();
          if (AvatarID.Length != 0) hash ^= AvatarID.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (SiteID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SiteID);
          }
          if (AvatarID.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AvatarID);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (SiteID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SiteID);
          }
          if (AvatarID.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AvatarID);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (SiteID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SiteID);
          }
          if (AvatarID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarID);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(TwilightAudioInput other) {
          if (other == null) {
            return;
          }
          if (other.SiteID.Length != 0) {
            SiteID = other.SiteID;
          }
          if (other.AvatarID.Length != 0) {
            AvatarID = other.AvatarID;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                SiteID = input.ReadString();
                break;
              }
              case 18: {
                AvatarID = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                SiteID = input.ReadString();
                break;
              }
              case 18: {
                AvatarID = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class QwilightPostItem : pb::IMessage<QwilightPostItem>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<QwilightPostItem> _parser = new pb::MessageParser<QwilightPostItem>(() => new QwilightPostItem());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<QwilightPostItem> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Qwilight.Event.Descriptor.NestedTypes[17]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightPostItem() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightPostItem(QwilightPostItem other) : this() {
          siteID_ = other.siteID_;
          handlerID_ = other.handlerID_;
          postedItem_ = other.postedItem_;
          isPositive_ = other.isPositive_;
          lowestWait_ = other.lowestWait_;
          highestWait_ = other.highestWait_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public QwilightPostItem Clone() {
          return new QwilightPostItem(this);
        }

        /// <summary>Field number for the "siteID" field.</summary>
        public const int SiteIDFieldNumber = 1;
        private string siteID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string SiteID {
          get { return siteID_; }
          set {
            siteID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "handlerID" field.</summary>
        public const int HandlerIDFieldNumber = 2;
        private string handlerID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string HandlerID {
          get { return handlerID_; }
          set {
            handlerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "postedItem" field.</summary>
        public const int PostedItemFieldNumber = 3;
        private int postedItem_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int PostedItem {
          get { return postedItem_; }
          set {
            postedItem_ = value;
          }
        }

        /// <summary>Field number for the "isPositive" field.</summary>
        public const int IsPositiveFieldNumber = 4;
        private int isPositive_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int IsPositive {
          get { return isPositive_; }
          set {
            isPositive_ = value;
          }
        }

        /// <summary>Field number for the "lowestWait" field.</summary>
        public const int LowestWaitFieldNumber = 5;
        private double lowestWait_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double LowestWait {
          get { return lowestWait_; }
          set {
            lowestWait_ = value;
          }
        }

        /// <summary>Field number for the "highestWait" field.</summary>
        public const int HighestWaitFieldNumber = 6;
        private double highestWait_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double HighestWait {
          get { return highestWait_; }
          set {
            highestWait_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as QwilightPostItem);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(QwilightPostItem other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SiteID != other.SiteID) return false;
          if (HandlerID != other.HandlerID) return false;
          if (PostedItem != other.PostedItem) return false;
          if (IsPositive != other.IsPositive) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LowestWait, other.LowestWait)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HighestWait, other.HighestWait)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (SiteID.Length != 0) hash ^= SiteID.GetHashCode();
          if (HandlerID.Length != 0) hash ^= HandlerID.GetHashCode();
          if (PostedItem != 0) hash ^= PostedItem.GetHashCode();
          if (IsPositive != 0) hash ^= IsPositive.GetHashCode();
          if (LowestWait != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LowestWait);
          if (HighestWait != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HighestWait);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (SiteID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SiteID);
          }
          if (HandlerID.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(HandlerID);
          }
          if (PostedItem != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(PostedItem);
          }
          if (IsPositive != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(IsPositive);
          }
          if (LowestWait != 0D) {
            output.WriteRawTag(41);
            output.WriteDouble(LowestWait);
          }
          if (HighestWait != 0D) {
            output.WriteRawTag(49);
            output.WriteDouble(HighestWait);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (SiteID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SiteID);
          }
          if (HandlerID.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(HandlerID);
          }
          if (PostedItem != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(PostedItem);
          }
          if (IsPositive != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(IsPositive);
          }
          if (LowestWait != 0D) {
            output.WriteRawTag(41);
            output.WriteDouble(LowestWait);
          }
          if (HighestWait != 0D) {
            output.WriteRawTag(49);
            output.WriteDouble(HighestWait);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (SiteID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SiteID);
          }
          if (HandlerID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HandlerID);
          }
          if (PostedItem != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(PostedItem);
          }
          if (IsPositive != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsPositive);
          }
          if (LowestWait != 0D) {
            size += 1 + 8;
          }
          if (HighestWait != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(QwilightPostItem other) {
          if (other == null) {
            return;
          }
          if (other.SiteID.Length != 0) {
            SiteID = other.SiteID;
          }
          if (other.HandlerID.Length != 0) {
            HandlerID = other.HandlerID;
          }
          if (other.PostedItem != 0) {
            PostedItem = other.PostedItem;
          }
          if (other.IsPositive != 0) {
            IsPositive = other.IsPositive;
          }
          if (other.LowestWait != 0D) {
            LowestWait = other.LowestWait;
          }
          if (other.HighestWait != 0D) {
            HighestWait = other.HighestWait;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                SiteID = input.ReadString();
                break;
              }
              case 18: {
                HandlerID = input.ReadString();
                break;
              }
              case 24: {
                PostedItem = input.ReadInt32();
                break;
              }
              case 32: {
                IsPositive = input.ReadInt32();
                break;
              }
              case 41: {
                LowestWait = input.ReadDouble();
                break;
              }
              case 49: {
                HighestWait = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                SiteID = input.ReadString();
                break;
              }
              case 18: {
                HandlerID = input.ReadString();
                break;
              }
              case 24: {
                PostedItem = input.ReadInt32();
                break;
              }
              case 32: {
                IsPositive = input.ReadInt32();
                break;
              }
              case 41: {
                LowestWait = input.ReadDouble();
                break;
              }
              case 49: {
                HighestWait = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class TwilightPostItem : pb::IMessage<TwilightPostItem>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TwilightPostItem> _parser = new pb::MessageParser<TwilightPostItem>(() => new TwilightPostItem());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<TwilightPostItem> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Qwilight.Event.Descriptor.NestedTypes[18]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightPostItem() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightPostItem(TwilightPostItem other) : this() {
          handlerID_ = other.handlerID_;
          postedItem_ = other.postedItem_;
          avatarName_ = other.avatarName_;
          wait_ = other.wait_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TwilightPostItem Clone() {
          return new TwilightPostItem(this);
        }

        /// <summary>Field number for the "handlerID" field.</summary>
        public const int HandlerIDFieldNumber = 1;
        private string handlerID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string HandlerID {
          get { return handlerID_; }
          set {
            handlerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "postedItem" field.</summary>
        public const int PostedItemFieldNumber = 2;
        private int postedItem_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int PostedItem {
          get { return postedItem_; }
          set {
            postedItem_ = value;
          }
        }

        /// <summary>Field number for the "avatarName" field.</summary>
        public const int AvatarNameFieldNumber = 3;
        private string avatarName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AvatarName {
          get { return avatarName_; }
          set {
            avatarName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "wait" field.</summary>
        public const int WaitFieldNumber = 4;
        private double wait_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Wait {
          get { return wait_; }
          set {
            wait_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as TwilightPostItem);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(TwilightPostItem other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (HandlerID != other.HandlerID) return false;
          if (PostedItem != other.PostedItem) return false;
          if (AvatarName != other.AvatarName) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Wait, other.Wait)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HandlerID.Length != 0) hash ^= HandlerID.GetHashCode();
          if (PostedItem != 0) hash ^= PostedItem.GetHashCode();
          if (AvatarName.Length != 0) hash ^= AvatarName.GetHashCode();
          if (Wait != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Wait);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HandlerID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(HandlerID);
          }
          if (PostedItem != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(PostedItem);
          }
          if (AvatarName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvatarName);
          }
          if (Wait != 0D) {
            output.WriteRawTag(33);
            output.WriteDouble(Wait);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HandlerID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(HandlerID);
          }
          if (PostedItem != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(PostedItem);
          }
          if (AvatarName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AvatarName);
          }
          if (Wait != 0D) {
            output.WriteRawTag(33);
            output.WriteDouble(Wait);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HandlerID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HandlerID);
          }
          if (PostedItem != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(PostedItem);
          }
          if (AvatarName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarName);
          }
          if (Wait != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(TwilightPostItem other) {
          if (other == null) {
            return;
          }
          if (other.HandlerID.Length != 0) {
            HandlerID = other.HandlerID;
          }
          if (other.PostedItem != 0) {
            PostedItem = other.PostedItem;
          }
          if (other.AvatarName.Length != 0) {
            AvatarName = other.AvatarName;
          }
          if (other.Wait != 0D) {
            Wait = other.Wait;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                HandlerID = input.ReadString();
                break;
              }
              case 16: {
                PostedItem = input.ReadInt32();
                break;
              }
              case 26: {
                AvatarName = input.ReadString();
                break;
              }
              case 33: {
                Wait = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                HandlerID = input.ReadString();
                break;
              }
              case 16: {
                PostedItem = input.ReadInt32();
                break;
              }
              case 26: {
                AvatarName = input.ReadString();
                break;
              }
              case 33: {
                Wait = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
