<TabItem
    x:Class="Qwilight.View.ComputingUIConfigureWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:view="clr-namespace:Qwilight.View"
    xmlns:quic="clr-namespace:Qwilight.UIComponent"
    Style="{StaticResource StandardPageItem}"
    Header="{Binding ComputingUIConfigure, Source={StaticResource LanguageSystem}}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
            <Button Style="{StaticResource StandardInput}" Content="{Binding ViewUIEntry, Source={StaticResource LanguageSystem}}" Command="{Binding ViewUIEntryCommand}" />
            <Button Style="{StaticResource StandardInput}" Content="{Binding NetUIContents, Source={StaticResource LanguageSystem}}" Command="{Binding OpenAsCommand}" CommandParameter="https://taehui.ddns.net/forum/qwilight-ui" />
            <Button Style="{StaticResource StandardInput}" Command="{Binding SaveAsBundleCommand}" Content="{Binding SaveAsBundle, Source={StaticResource LanguageSystem}}" Visibility="{Binding CanSaveAsBundle, Converter={StaticResource VisibilityModifier}}" />
        </StackPanel>
        <TabControl Style="{StaticResource StandardPageView}" Grid.Row="1" TabStripPlacement="Left" SelectedIndex="{Binding TabPositionUI}">
            <TabItem Style="{StaticResource StandardPageItem}" Header="{Binding ConfigureBaseUIContents, Source={StaticResource LanguageSystem}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ListView Style="{StaticResource StandardPointableItemsView}" ItemsSource="{Binding UIItems, Source={StaticResource BaseUI}}" SelectedItem="{Binding BaseUIItemValue}" SelectionChanged="OnPointBaseUI" MouseDoubleClick="OnSetBaseUI">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Style="{StaticResource StandardTextView}" HorizontalAlignment="Left" Text="{Binding}" />
                                    <TextBlock Grid.Column="1" Style="{StaticResource StandardTextView}" Text="✔️" Foreground="Green" Visibility="{Binding IsConfigured, Converter={StaticResource VisibilityModifier}}" />
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <ScrollViewer Grid.Column="1">
                        <StackPanel>
                            <TextBlock Style="{StaticResource StandardTextView}" Text="{Binding Titles[0]}" FontSize="{StaticResource FontLevel1}" />
                            <TextBlock Style="{StaticResource LFTextView}" Text="{Binding Comments[0]}" />
                            <Border Style="{StaticResource StandardPanelSquare}" Visibility="{Binding Drawings[0], Converter={StaticResource VisibilityModifier}}">
                                <Image Style="{StaticResource StandardViewMargin0}" Source="{Binding Drawings[0]}" />
                            </Border>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </TabItem>
            <TabItem Style="{StaticResource StandardPageItem}" Header="{Binding ConfigureUIContents, Source={StaticResource LanguageSystem}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ListView Style="{StaticResource StandardPointableItemsView}" ItemsSource="{Binding UIItems, Source={StaticResource UI}}" SelectedItem="{Binding UIItemValue}" SelectionChanged="OnPointUI" MouseDoubleClick="OnSetUI">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Style="{StaticResource StandardTextView}" HorizontalAlignment="Left" Text="{Binding}" />
                                    <TextBlock Grid.Column="1" Style="{StaticResource StandardTextView}" Text="✔️" Foreground="Green" Visibility="{Binding IsConfigured, Converter={StaticResource VisibilityModifier}}" />
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <ScrollViewer Grid.Column="1">
                        <StackPanel>
                            <TextBlock Style="{StaticResource StandardTextView}" Text="{Binding Titles[1]}" FontSize="{StaticResource FontLevel1}" />
                            <TextBlock Style="{StaticResource LFTextView}" Text="{Binding Comments[1]}" />
                            <Border Style="{StaticResource StandardPanelSquare}" Visibility="{Binding Drawings[1], Converter={StaticResource VisibilityModifier}}">
                                <Image Style="{StaticResource StandardViewMargin0}" Source="{Binding Drawings[1]}" />
                            </Border>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </TabItem>
            <TabItem Style="{StaticResource StandardPageItem}" Header="{Binding ConfigureEtcUIContents, Source={StaticResource LanguageSystem}}">
                <ScrollViewer>
                    <StackPanel>
                        <ContentControl IsEnabled="{Binding MainValue.IsUILoading, Source={StaticResource ViewModels}, Converter={StaticResource NotModifier}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <ItemsControl ItemsSource="{Binding XamlBaseUIConfigures, Source={StaticResource BaseUI}}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <ComboBox Style="{StaticResource StandardItemsInput}" SelectedItem="{Binding UIConfigure}" ItemsSource="{Binding Configures}" SelectionChanged="OnBaseUIConfigure" HorizontalAlignment="Right" />
                                                <TextBlock Style="{StaticResource StandardTextView}" Text="{Binding ConfigureComment}" HorizontalAlignment="Left" Grid.Column="1" />
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <ItemsControl Grid.Column="1" ItemsSource="{Binding XamlUIConfigures, Source={StaticResource UI}}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <ComboBox Style="{StaticResource StandardItemsInput}" SelectedItem="{Binding UIConfigure}" ItemsSource="{Binding Configures}" SelectionChanged="OnUIConfigure" HorizontalAlignment="Right" />
                                                <TextBlock Style="{StaticResource StandardTextView}" Text="{Binding ConfigureComment}" HorizontalAlignment="Left" Grid.Column="1" />
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Grid>
                        </ContentControl>
                        <Separator Style="{StaticResource StandardHr}" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Button Style="{StaticResource StandardInput}" Content="{Binding AlwaysNotP2PositionText, Source={StaticResource Configure}}" Command="{Binding AlwaysNotP2PositionCommand}" HorizontalAlignment="Right" />
                            <TextBlock Grid.Column="1" Style="{StaticResource StandardTextView}" Text="{Binding AlwaysNotP2PositionContents, Source={StaticResource Configure}}" HorizontalAlignment="Left" />
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <RadioButton Style="{StaticResource StandardOInput}" IsChecked="{Binding InputMapping0}">
                                    <Border Style="{StaticResource StandardPanelSquare}" Margin="{StaticResource StandardHMargin}">
                                        <Image Style="{StaticResource StandardViewMargin0}" Source="{StaticResource InputMapping0Drawing}" Height="12" Stretch="Fill" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                                    </Border>
                                </RadioButton>
                                <RadioButton Grid.Column="1" Style="{StaticResource StandardOInput}" IsChecked="{Binding InputMapping1}">
                                    <Border Style="{StaticResource StandardPanelSquare}" Margin="{StaticResource StandardHMargin}">
                                        <Image Style="{StaticResource StandardViewMargin0}" Source="{StaticResource InputMapping1Drawing}" Height="12" Stretch="Fill" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                                    </Border>
                                </RadioButton>
                                <RadioButton Grid.Column="2" Style="{StaticResource StandardOInput}" IsChecked="{Binding InputMapping2}">
                                    <Border Style="{StaticResource StandardPanelSquare}" Margin="{StaticResource StandardHMargin}">
                                        <Image Style="{StaticResource StandardViewMargin0}" Source="{StaticResource InputMapping2Drawing}" Height="12" Stretch="Fill" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                                    </Border>
                                </RadioButton>
                                <RadioButton Grid.Column="3" Style="{StaticResource StandardOInput}" IsChecked="{Binding InputMapping3}">
                                    <Border Style="{StaticResource StandardPanelSquare}" Margin="{StaticResource StandardHMargin}">
                                        <Image Style="{StaticResource StandardViewMargin0}" Source="{StaticResource InputMapping3Drawing}" Height="12" Stretch="Fill" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                                    </Border>
                                </RadioButton>
                            </Grid>
                            <TextBlock Grid.Column="1" Style="{StaticResource StandardTextView}" Text="{Binding InputMapText, Source={StaticResource LanguageSystem}}" HorizontalAlignment="Left" />
                        </Grid>
                        <Separator Style="{StaticResource StandardHr}" />
                        <WrapPanel HorizontalAlignment="Center">
                            <Button Style="{StaticResource StandardInput}" BorderThickness="{Binding UIPipelineLimiterPaint, Source={StaticResource Configure}}" Content="{Binding UILimiter, Source={StaticResource LanguageSystem}}" Command="{Binding UIPipelineLimiterCommand}" />
                            <Button Style="{StaticResource StandardInput}" Visibility="{Binding HasMain, Source={StaticResource UI}, Converter={StaticResource VisibilityModifier}}" BorderThickness="{Binding UIPipelineMainDrawingPaintPaint, Source={StaticResource Configure}}" Content="{Binding UIMainDrawingPaint, Source={StaticResource LanguageSystem}}" Command="{Binding UIPipelineMainDrawingPaintCommand}" />
                            <Button Style="{StaticResource StandardInput}" Visibility="{Binding HasJudgmentMain, Source={StaticResource UI}, Converter={StaticResource VisibilityModifier}}" BorderThickness="{Binding UIPipelineJudgmentMainPaint, Source={StaticResource Configure}}" Content="{Binding UIJudgmentMain, Source={StaticResource LanguageSystem}}" Command="{Binding UIPipelineJudgmentMainCommand}" />
                            <Button Style="{StaticResource StandardInput}" Visibility="{Binding HasJudgmentMeter, Source={StaticResource UI}, Converter={StaticResource VisibilityModifier}}" BorderThickness="{Binding UIPipelineJudgmentMeterPaint, Source={StaticResource Configure}}" Content="{Binding UIJudgmentMeter, Source={StaticResource LanguageSystem}}" Command="{Binding UIPipelineJudgmentMeterCommand}" />
                            <Button Style="{StaticResource StandardInput}" Visibility="{Binding HasJudgmentVisualizer, Source={StaticResource UI}, Converter={StaticResource VisibilityModifier}}" BorderThickness="{Binding UIPipelineJudgmentVisualizerPaint, Source={StaticResource Configure}}" Content="{Binding UIJudgmentVisualizer, Source={StaticResource LanguageSystem}}" Command="{Binding UIPipelineJudgmentVisualizerCommand}" />
                            <Button Style="{StaticResource StandardInput}" Visibility="{Binding HasMainJudgmentMeter, Source={StaticResource UI}, Converter={StaticResource VisibilityModifier}}" BorderThickness="{Binding UIPipelineMainJudgmentMeterPaint, Source={StaticResource Configure}}" Content="{Binding UIMainJudgmentMeter, Source={StaticResource LanguageSystem}}" Command="{Binding UIPipelineMainJudgmentMeterCommand}" />
                            <Button Style="{StaticResource StandardInput}" Visibility="{Binding HasHitNotePaint, Source={StaticResource UI}, Converter={StaticResource VisibilityModifier}}" BorderThickness="{Binding UIPipelineHitNotePaintPaint, Source={StaticResource Configure}}" Content="{Binding UIHitNotePaint, Source={StaticResource LanguageSystem}}" Command="{Binding UIPipelineHitNotePaintCommand}" />
                            <Button Style="{StaticResource StandardInput}" Visibility="{Binding HasJudgmentPaint, Source={StaticResource UI}, Converter={StaticResource VisibilityModifier}}" BorderThickness="{Binding UIPipelineJudgmentPaintPaint, Source={StaticResource Configure}}" Content="{Binding UIJudgmentPaint, Source={StaticResource LanguageSystem}}" Command="{Binding UIPipelineJudgmentPaintCommand}" />
                            <Button Style="{StaticResource StandardInput}" Visibility="{Binding HasBPM, Source={StaticResource UI}, Converter={StaticResource VisibilityModifier}}" BorderThickness="{Binding UIPipelineBPMPaint, Source={StaticResource Configure}}" Command="{Binding UIPipelineBPMCommand}">BPM</Button>
                            <Button Style="{StaticResource StandardInput}" Visibility="{Binding HasJudgmentCount, Source={StaticResource UI}, Converter={StaticResource VisibilityModifier}}" BorderThickness="{Binding UIPipelineJudgmentCountPaint, Source={StaticResource Configure}}" Content="{Binding UIJudgmentCount, Source={StaticResource LanguageSystem}}" Command="{Binding UIPipelineJudgmentCountCommand}" />
                            <Button Style="{StaticResource StandardInput}" Visibility="{Binding HasHunter, Source={StaticResource UI}, Converter={StaticResource VisibilityModifier}}" BorderThickness="{Binding UIPipelineHunterPaint, Source={StaticResource Configure}}" Content="{Binding UIHunter, Source={StaticResource LanguageSystem}}" Command="{Binding UIPipelineHunterCommand}" />
                            <Button Style="{StaticResource StandardInput}" Visibility="{Binding HasNet, Source={StaticResource UI}, Converter={StaticResource VisibilityModifier}}" BorderThickness="{Binding UIPipelineNetPaint, Source={StaticResource Configure}}" Content="{Binding UINet, Source={StaticResource LanguageSystem}}" Command="{Binding UIPipelineNetCommand}" />
                            <Button Style="{StaticResource StandardInput}" Visibility="{Binding HasJudgmentInputVisualizer, Source={StaticResource UI}, Converter={StaticResource VisibilityModifier}}" BorderThickness="{Binding UIPipelineJudgmentInputVisualizerPaint, Source={StaticResource Configure}}" Content="{Binding UIJudgmentInputVisualizer, Source={StaticResource LanguageSystem}}" Command="{Binding UIPipelineJudgmentInputVisualizerCommand}" />
                            <Button Style="{StaticResource StandardInput}" BorderThickness="{Binding UICommentNotePaint, Source={StaticResource Configure}}" Content="{Binding UICommentNote, Source={StaticResource LanguageSystem}}" Command="{Binding UICommentNoteCommand}" />
                        </WrapPanel>
                        <Grid Visibility="{Binding UIPipelineLimiter, Source={StaticResource Configure}, Converter={StaticResource VisibilityModifier}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                <CheckBox Style="{StaticResource StandardVInput}" IsChecked="{Binding TotalLimiterVariety, Source={StaticResource Configure}}" Content="{Binding TotalLimiterVariety, Source={StaticResource LanguageSystem}}" />
                                <ContentControl IsEnabled="{Binding TotalLimiterVariety, Source={StaticResource Configure}, Converter={StaticResource NotModifier}}">
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Style="{StaticResource StandardVInput}" IsChecked="{Binding AutoableLimiterVariety, Source={StaticResource Configure}}" Content="{Binding AutoableLimiterVariety, Source={StaticResource LanguageSystem}}" />
                                        <CheckBox Style="{StaticResource StandardVInput}" IsChecked="{Binding CenterLimiterVariety, Source={StaticResource Configure}}" Content="{Binding CenterLimiterVariety, Source={StaticResource LanguageSystem}}" />
                                        <CheckBox Style="{StaticResource StandardVInput}" IsChecked="{Binding Limiter57Variety, Source={StaticResource Configure}}" Content="{Binding Limiter57Variety, Source={StaticResource LanguageSystem}}" />
                                    </StackPanel>
                                </ContentControl>
                            </StackPanel>
                            <TextBlock Grid.Column="1" Style="{StaticResource StandardTextView}" Text="{Binding LimiterVarietyContents, Source={StaticResource LanguageSystem}}" HorizontalAlignment="Left" />
                        </Grid>
                        <Grid Visibility="{Binding UIPipelineJudgmentMeter, Source={StaticResource Configure}, Converter={StaticResource VisibilityModifier}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid HorizontalAlignment="Right">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <view:BinInput Lowest="0" Value="{Binding JudgmentMeterMillis, Source={StaticResource Configure}}" Format="#,##0.## ms" />
                                <ComboBox Grid.Column="1" Style="{StaticResource StandardItemsInput}" SelectedItem="{Binding AutoJudgmentMeterMillisItemValue, Source={StaticResource Configure}, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding AutoJudgmentMeterMillis, Source={StaticResource Configure}}">
                                    <ComboBox.Items>
                                        <quic:AutoJudgmentMeterMillisItem Judged="{StaticResource HighestJudgment}" />
                                        <quic:AutoJudgmentMeterMillisItem Judged="{StaticResource HigherJudgment}" />
                                        <quic:AutoJudgmentMeterMillisItem Judged="{StaticResource HighJudgment}" />
                                        <quic:AutoJudgmentMeterMillisItem Judged="{StaticResource LowJudgment}" />
                                        <quic:AutoJudgmentMeterMillisItem Judged="{StaticResource LowerJudgment}" />
                                        <quic:AutoJudgmentMeterMillisItem Judged="{StaticResource LowestJudgment}" />
                                    </ComboBox.Items>
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <Image Source="{Binding Drawing}" Height="12" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <CheckBox Grid.Column="2" IsChecked="{Binding AutoJudgmentMeterMillis, Source={StaticResource Configure}}" />
                            </Grid>
                            <TextBlock Grid.Column="1" Style="{StaticResource StandardTextView}" Text="{Binding JudgmentMeterMillisText, Source={StaticResource LanguageSystem}}" HorizontalAlignment="Left" />
                        </Grid>
                        <Grid Visibility="{Binding UIPipelineJudgmentVisualizer, Source={StaticResource Configure}, Converter={StaticResource VisibilityModifier}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <view:BinInput Lowest="1" Value="{Binding JudgmentVisualizerMillis, Source={StaticResource Configure}}" Format="#,##0.## ms" HorizontalAlignment="Right" />
                            <TextBlock Grid.Column="1" Style="{StaticResource StandardTextView}" Text="{Binding JudgmentVisualizerMillisText, Source={StaticResource LanguageSystem}}" HorizontalAlignment="Left" />
                        </Grid>
                        <Grid Visibility="{Binding UIPipelineBPM, Source={StaticResource Configure}, Converter={StaticResource VisibilityModifier}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <ComboBox Style="{StaticResource StandardItemsInput}" SelectedItem="{Binding BPMVarietyValue, Source={StaticResource Configure}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right">
                                <ComboBox.Items>
                                    <quic:BPMVariety Data="{StaticResource BPMVarietyBPM}" />
                                    <quic:BPMVariety Data="{StaticResource BPMVarietyAudioMultiplier}" />
                                    <quic:BPMVariety Data="{StaticResource BPMVarietyMultiplier}" />
                                </ComboBox.Items>
                            </ComboBox>
                            <TextBlock Grid.Column="1" Style="{StaticResource StandardTextView}" Text="{Binding BPMVarietyContents, Source={StaticResource LanguageSystem}}" HorizontalAlignment="Left" />
                        </Grid>
                        <Grid Visibility="{Binding UIPipelineHunter, Source={StaticResource Configure}, Converter={StaticResource VisibilityModifier}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <ComboBox Style="{StaticResource StandardItemsInput}" SelectedItem="{Binding HunterVarietyV2Value, Source={StaticResource Configure}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right">
                                <ComboBox.Items>
                                    <quic:HunterVariety Mode="{StaticResource HunterVariety1st}" />
                                    <quic:HunterVariety Mode="{StaticResource HunterVarietyHigher}" />
                                    <quic:HunterVariety Mode="{StaticResource HunterVarietyLower}" />
                                    <quic:HunterVariety Mode="{StaticResource HunterVarietyMe}" />
                                    <quic:HunterVariety Mode="{StaticResource HunterVarietyFavor}" />
                                </ComboBox.Items>
                            </ComboBox>
                            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Left">
                                <TextBlock Style="{StaticResource StandardTextView}" Text="{Binding HunterVarietyContents, Source={StaticResource LanguageSystem}}" />
                                <view:BinInput Value="{Binding FavorHunterStand, Source={StaticResource Configure}}" Lowest="0" Format="{Binding StandContents, Source={StaticResource LanguageSystem}}" Visibility="{Binding IsFavorHunterVariety, Source={StaticResource Configure}, Converter={StaticResource VisibilityModifier}}" />
                            </StackPanel>
                        </Grid>
                        <Separator Style="{StaticResource StandardHr}" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Button Style="{StaticResource StandardInput}" Command="{Binding HandleMeterCommand}" Content="{Binding HandleMeterText, Source={StaticResource Configure}}" Foreground="{Binding HandleMeterPaint, Source={StaticResource Configure}}" HorizontalAlignment="Right" />
                            <TextBlock Grid.Column="1" Style="{StaticResource StandardTextView}" Text="{Binding HandleMeterContents, Source={StaticResource LanguageSystem}}" HorizontalAlignment="Left" />
                        </Grid>
                        <StackPanel Visibility="{Binding UIPipelineNet, Source={StaticResource Configure}, Converter={StaticResource VisibilityModifier}}">
                            <Separator Style="{StaticResource StandardHr}" />
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Button Style="{StaticResource StandardInput}" Command="{Binding NetCommentFollowCommand}" Content="{Binding NetCommentFollowText, Source={StaticResource Configure}}" HorizontalAlignment="Right" />
                                <TextBlock Grid.Column="1" Style="{StaticResource StandardTextView}" Text="{Binding NetCommentFollowContents, Source={StaticResource Configure}}" HorizontalAlignment="Left" />
                            </Grid>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <view:BinInput Lowest="2" Highest="8" Value="{Binding NetItemCount, Source={StaticResource Configure}}" Format="{Binding CountContents, Source={StaticResource LanguageSystem}}" HorizontalAlignment="Right" />
                                <TextBlock Grid.Column="1" Style="{StaticResource StandardTextView}" Text="{Binding NetItemCountText, Source={StaticResource LanguageSystem}}" HorizontalAlignment="Left" />
                            </Grid>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Button Style="{StaticResource StandardInput}" Command="{Binding FlowNetItemCommand}" Content="{Binding FlowNetItemText, Source={StaticResource Configure}}" Foreground="{Binding FlowNetItemPaint, Source={StaticResource Configure}}" HorizontalAlignment="Right" />
                                <TextBlock Grid.Column="1" Style="{StaticResource StandardTextView}" Text="{Binding FlowNetItemContents, Source={StaticResource LanguageSystem}}" HorizontalAlignment="Left" />
                            </Grid>
                        </StackPanel>
                        <Separator Style="{StaticResource StandardHr}" />
                        <WrapPanel HorizontalAlignment="Center">
                            <view:ColorInput ColorValue="{Binding InputNoteCountViewColor, Source={StaticResource Configure}, Mode=TwoWay}" PaintValue="{Binding InputNoteCountViewPaint, Source={StaticResource Configure}}" Content="{Binding InputNoteCountViewColor, Source={StaticResource LanguageSystem}}" />
                            <view:ColorInput ColorValue="{Binding AutoableInputNoteCountViewColor, Source={StaticResource Configure}, Mode=TwoWay}" PaintValue="{Binding AutoableInputNoteCountViewPaint, Source={StaticResource Configure}}" Content="{Binding AutoableInputNoteCountViewColor, Source={StaticResource LanguageSystem}}" />
                        </WrapPanel>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
        </TabControl>
    </Grid>
</TabItem>